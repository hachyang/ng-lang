{"ast":null,"code":"/**\n* @license Angular v9.1.0-next.4+61.sha-e552591.with-local-changes\n* (c) 2010-2020 Google LLC. https://angular.io/\n* License: MIT\n*/\n(function (factory) {\n  typeof define === 'function' && define.amd ? define(factory) : factory();\n})(function () {\n  'use strict';\n  /**\n   * @license\n   * Copyright Google Inc. All Rights Reserved.\n   *\n   * Use of this source code is governed by an MIT-style license that can be\n   * found in the LICENSE file at https://angular.io/license\n   */\n\n  const Zone$1 = function (global) {\n    const performance = global['performance'];\n\n    function mark(name) {\n      performance && performance['mark'] && performance['mark'](name);\n    }\n\n    function performanceMeasure(name, label) {\n      performance && performance['measure'] && performance['measure'](name, label);\n    }\n\n    mark('Zone'); // Initialize before it's accessed below.\n    // __Zone_symbol_prefix global can be used to override the default zone\n    // symbol prefix with a custom one if needed.\n\n    const symbolPrefix = global['__Zone_symbol_prefix'] || '__zone_symbol__';\n\n    function __symbol__(name) {\n      return symbolPrefix + name;\n    }\n\n    const checkDuplicate = global[__symbol__('forceDuplicateZoneCheck')] === true;\n\n    if (global['Zone']) {\n      // if global['Zone'] already exists (maybe zone.js was already loaded or\n      // some other lib also registered a global object named Zone), we may need\n      // to throw an error, but sometimes user may not want this error.\n      // For example,\n      // we have two web pages, page1 includes zone.js, page2 doesn't.\n      // and the 1st time user load page1 and page2, everything work fine,\n      // but when user load page2 again, error occurs because global['Zone'] already exists.\n      // so we add a flag to let user choose whether to throw this error or not.\n      // By default, if existing Zone is from zone.js, we will not throw the error.\n      if (checkDuplicate || typeof global['Zone'].__symbol__ !== 'function') {\n        throw new Error('Zone already loaded.');\n      } else {\n        return global['Zone'];\n      }\n    }\n\n    class Zone {\n      constructor(parent, zoneSpec) {\n        this._parent = parent;\n        this._name = zoneSpec ? zoneSpec.name || 'unnamed' : '<root>';\n        this._properties = zoneSpec && zoneSpec.properties || {};\n        this._zoneDelegate = new ZoneDelegate(this, this._parent && this._parent._zoneDelegate, zoneSpec);\n      }\n\n      static assertZonePatched() {\n        if (global['Promise'] !== patches['ZoneAwarePromise']) {\n          throw new Error('Zone.js has detected that ZoneAwarePromise `(window|global).Promise` ' + 'has been overwritten.\\n' + 'Most likely cause is that a Promise polyfill has been loaded ' + 'after Zone.js (Polyfilling Promise api is not necessary when zone.js is loaded. ' + 'If you must load one, do so before loading zone.js.)');\n        }\n      }\n\n      static get root() {\n        let zone = Zone.current;\n\n        while (zone.parent) {\n          zone = zone.parent;\n        }\n\n        return zone;\n      }\n\n      static get current() {\n        return _currentZoneFrame.zone;\n      }\n\n      static get currentTask() {\n        return _currentTask;\n      } // tslint:disable-next-line:require-internal-with-underscore\n\n\n      static __load_patch(name, fn) {\n        if (patches.hasOwnProperty(name)) {\n          if (checkDuplicate) {\n            throw Error('Already loaded patch: ' + name);\n          }\n        } else if (!global['__Zone_disable_' + name]) {\n          const perfName = 'Zone:' + name;\n          mark(perfName);\n          patches[name] = fn(global, Zone, _api);\n          performanceMeasure(perfName, perfName);\n        }\n      }\n\n      get parent() {\n        return this._parent;\n      }\n\n      get name() {\n        return this._name;\n      }\n\n      get(key) {\n        const zone = this.getZoneWith(key);\n        if (zone) return zone._properties[key];\n      }\n\n      getZoneWith(key) {\n        let current = this;\n\n        while (current) {\n          if (current._properties.hasOwnProperty(key)) {\n            return current;\n          }\n\n          current = current._parent;\n        }\n\n        return null;\n      }\n\n      fork(zoneSpec) {\n        if (!zoneSpec) throw new Error('ZoneSpec required!');\n        return this._zoneDelegate.fork(this, zoneSpec);\n      }\n\n      wrap(callback, source) {\n        if (typeof callback !== 'function') {\n          throw new Error('Expecting function got: ' + callback);\n        }\n\n        const _callback = this._zoneDelegate.intercept(this, callback, source);\n\n        const zone = this;\n        return function () {\n          return zone.runGuarded(_callback, this, arguments, source);\n        };\n      }\n\n      run(callback, applyThis, applyArgs, source) {\n        _currentZoneFrame = {\n          parent: _currentZoneFrame,\n          zone: this\n        };\n\n        try {\n          return this._zoneDelegate.invoke(this, callback, applyThis, applyArgs, source);\n        } finally {\n          _currentZoneFrame = _currentZoneFrame.parent;\n        }\n      }\n\n      runGuarded(callback, applyThis = null, applyArgs, source) {\n        _currentZoneFrame = {\n          parent: _currentZoneFrame,\n          zone: this\n        };\n\n        try {\n          try {\n            return this._zoneDelegate.invoke(this, callback, applyThis, applyArgs, source);\n          } catch (error) {\n            if (this._zoneDelegate.handleError(this, error)) {\n              throw error;\n            }\n          }\n        } finally {\n          _currentZoneFrame = _currentZoneFrame.parent;\n        }\n      }\n\n      runTask(task, applyThis, applyArgs) {\n        if (task.zone != this) {\n          throw new Error('A task can only be run in the zone of creation! (Creation: ' + (task.zone || NO_ZONE).name + '; Execution: ' + this.name + ')');\n        } // https://github.com/angular/zone.js/issues/778, sometimes eventTask\n        // will run in notScheduled(canceled) state, we should not try to\n        // run such kind of task but just return\n\n\n        if (task.state === notScheduled && (task.type === eventTask || task.type === macroTask)) {\n          return;\n        }\n\n        const reEntryGuard = task.state != running;\n        reEntryGuard && task._transitionTo(running, scheduled);\n        task.runCount++;\n        const previousTask = _currentTask;\n        _currentTask = task;\n        _currentZoneFrame = {\n          parent: _currentZoneFrame,\n          zone: this\n        };\n\n        try {\n          if (task.type == macroTask && task.data && !task.data.isPeriodic) {\n            task.cancelFn = undefined;\n          }\n\n          try {\n            return this._zoneDelegate.invokeTask(this, task, applyThis, applyArgs);\n          } catch (error) {\n            if (this._zoneDelegate.handleError(this, error)) {\n              throw error;\n            }\n          }\n        } finally {\n          // if the task's state is notScheduled or unknown, then it has already been cancelled\n          // we should not reset the state to scheduled\n          if (task.state !== notScheduled && task.state !== unknown) {\n            if (task.type == eventTask || task.data && task.data.isPeriodic) {\n              reEntryGuard && task._transitionTo(scheduled, running);\n            } else {\n              task.runCount = 0;\n\n              this._updateTaskCount(task, -1);\n\n              reEntryGuard && task._transitionTo(notScheduled, running, notScheduled);\n            }\n          }\n\n          _currentZoneFrame = _currentZoneFrame.parent;\n          _currentTask = previousTask;\n        }\n      }\n\n      scheduleTask(task) {\n        if (task.zone && task.zone !== this) {\n          // check if the task was rescheduled, the newZone\n          // should not be the children of the original zone\n          let newZone = this;\n\n          while (newZone) {\n            if (newZone === task.zone) {\n              throw Error(`can not reschedule task to ${this.name} which is descendants of the original zone ${task.zone.name}`);\n            }\n\n            newZone = newZone.parent;\n          }\n        }\n\n        task._transitionTo(scheduling, notScheduled);\n\n        const zoneDelegates = [];\n        task._zoneDelegates = zoneDelegates;\n        task._zone = this;\n\n        try {\n          task = this._zoneDelegate.scheduleTask(this, task);\n        } catch (err) {\n          // should set task's state to unknown when scheduleTask throw error\n          // because the err may from reschedule, so the fromState maybe notScheduled\n          task._transitionTo(unknown, scheduling, notScheduled); // TODO: @JiaLiPassion, should we check the result from handleError?\n\n\n          this._zoneDelegate.handleError(this, err);\n\n          throw err;\n        }\n\n        if (task._zoneDelegates === zoneDelegates) {\n          // we have to check because internally the delegate can reschedule the task.\n          this._updateTaskCount(task, 1);\n        }\n\n        if (task.state == scheduling) {\n          task._transitionTo(scheduled, scheduling);\n        }\n\n        return task;\n      }\n\n      scheduleMicroTask(source, callback, data, customSchedule) {\n        return this.scheduleTask(new ZoneTask(microTask, source, callback, data, customSchedule, undefined));\n      }\n\n      scheduleMacroTask(source, callback, data, customSchedule, customCancel) {\n        return this.scheduleTask(new ZoneTask(macroTask, source, callback, data, customSchedule, customCancel));\n      }\n\n      scheduleEventTask(source, callback, data, customSchedule, customCancel) {\n        return this.scheduleTask(new ZoneTask(eventTask, source, callback, data, customSchedule, customCancel));\n      }\n\n      cancelTask(task) {\n        if (task.zone != this) throw new Error('A task can only be cancelled in the zone of creation! (Creation: ' + (task.zone || NO_ZONE).name + '; Execution: ' + this.name + ')');\n\n        task._transitionTo(canceling, scheduled, running);\n\n        try {\n          this._zoneDelegate.cancelTask(this, task);\n        } catch (err) {\n          // if error occurs when cancelTask, transit the state to unknown\n          task._transitionTo(unknown, canceling);\n\n          this._zoneDelegate.handleError(this, err);\n\n          throw err;\n        }\n\n        this._updateTaskCount(task, -1);\n\n        task._transitionTo(notScheduled, canceling);\n\n        task.runCount = 0;\n        return task;\n      }\n\n      _updateTaskCount(task, count) {\n        const zoneDelegates = task._zoneDelegates;\n\n        if (count == -1) {\n          task._zoneDelegates = null;\n        }\n\n        for (let i = 0; i < zoneDelegates.length; i++) {\n          zoneDelegates[i]._updateTaskCount(task.type, count);\n        }\n      }\n\n    } // tslint:disable-next-line:require-internal-with-underscore\n\n\n    Zone.__symbol__ = __symbol__;\n    const DELEGATE_ZS = {\n      name: '',\n      onHasTask: (delegate, _, target, hasTaskState) => delegate.hasTask(target, hasTaskState),\n      onScheduleTask: (delegate, _, target, task) => delegate.scheduleTask(target, task),\n      onInvokeTask: (delegate, _, target, task, applyThis, applyArgs) => delegate.invokeTask(target, task, applyThis, applyArgs),\n      onCancelTask: (delegate, _, target, task) => delegate.cancelTask(target, task)\n    };\n\n    class ZoneDelegate {\n      constructor(zone, parentDelegate, zoneSpec) {\n        this._taskCounts = {\n          'microTask': 0,\n          'macroTask': 0,\n          'eventTask': 0\n        };\n        this.zone = zone;\n        this._parentDelegate = parentDelegate;\n        this._forkZS = zoneSpec && (zoneSpec && zoneSpec.onFork ? zoneSpec : parentDelegate._forkZS);\n        this._forkDlgt = zoneSpec && (zoneSpec.onFork ? parentDelegate : parentDelegate._forkDlgt);\n        this._forkCurrZone = zoneSpec && (zoneSpec.onFork ? this.zone : parentDelegate._forkCurrZone);\n        this._interceptZS = zoneSpec && (zoneSpec.onIntercept ? zoneSpec : parentDelegate._interceptZS);\n        this._interceptDlgt = zoneSpec && (zoneSpec.onIntercept ? parentDelegate : parentDelegate._interceptDlgt);\n        this._interceptCurrZone = zoneSpec && (zoneSpec.onIntercept ? this.zone : parentDelegate._interceptCurrZone);\n        this._invokeZS = zoneSpec && (zoneSpec.onInvoke ? zoneSpec : parentDelegate._invokeZS);\n        this._invokeDlgt = zoneSpec && (zoneSpec.onInvoke ? parentDelegate : parentDelegate._invokeDlgt);\n        this._invokeCurrZone = zoneSpec && (zoneSpec.onInvoke ? this.zone : parentDelegate._invokeCurrZone);\n        this._handleErrorZS = zoneSpec && (zoneSpec.onHandleError ? zoneSpec : parentDelegate._handleErrorZS);\n        this._handleErrorDlgt = zoneSpec && (zoneSpec.onHandleError ? parentDelegate : parentDelegate._handleErrorDlgt);\n        this._handleErrorCurrZone = zoneSpec && (zoneSpec.onHandleError ? this.zone : parentDelegate._handleErrorCurrZone);\n        this._scheduleTaskZS = zoneSpec && (zoneSpec.onScheduleTask ? zoneSpec : parentDelegate._scheduleTaskZS);\n        this._scheduleTaskDlgt = zoneSpec && (zoneSpec.onScheduleTask ? parentDelegate : parentDelegate._scheduleTaskDlgt);\n        this._scheduleTaskCurrZone = zoneSpec && (zoneSpec.onScheduleTask ? this.zone : parentDelegate._scheduleTaskCurrZone);\n        this._invokeTaskZS = zoneSpec && (zoneSpec.onInvokeTask ? zoneSpec : parentDelegate._invokeTaskZS);\n        this._invokeTaskDlgt = zoneSpec && (zoneSpec.onInvokeTask ? parentDelegate : parentDelegate._invokeTaskDlgt);\n        this._invokeTaskCurrZone = zoneSpec && (zoneSpec.onInvokeTask ? this.zone : parentDelegate._invokeTaskCurrZone);\n        this._cancelTaskZS = zoneSpec && (zoneSpec.onCancelTask ? zoneSpec : parentDelegate._cancelTaskZS);\n        this._cancelTaskDlgt = zoneSpec && (zoneSpec.onCancelTask ? parentDelegate : parentDelegate._cancelTaskDlgt);\n        this._cancelTaskCurrZone = zoneSpec && (zoneSpec.onCancelTask ? this.zone : parentDelegate._cancelTaskCurrZone);\n        this._hasTaskZS = null;\n        this._hasTaskDlgt = null;\n        this._hasTaskDlgtOwner = null;\n        this._hasTaskCurrZone = null;\n        const zoneSpecHasTask = zoneSpec && zoneSpec.onHasTask;\n        const parentHasTask = parentDelegate && parentDelegate._hasTaskZS;\n\n        if (zoneSpecHasTask || parentHasTask) {\n          // If we need to report hasTask, than this ZS needs to do ref counting on tasks. In such\n          // a case all task related interceptors must go through this ZD. We can't short circuit it.\n          this._hasTaskZS = zoneSpecHasTask ? zoneSpec : DELEGATE_ZS;\n          this._hasTaskDlgt = parentDelegate;\n          this._hasTaskDlgtOwner = this;\n          this._hasTaskCurrZone = zone;\n\n          if (!zoneSpec.onScheduleTask) {\n            this._scheduleTaskZS = DELEGATE_ZS;\n            this._scheduleTaskDlgt = parentDelegate;\n            this._scheduleTaskCurrZone = this.zone;\n          }\n\n          if (!zoneSpec.onInvokeTask) {\n            this._invokeTaskZS = DELEGATE_ZS;\n            this._invokeTaskDlgt = parentDelegate;\n            this._invokeTaskCurrZone = this.zone;\n          }\n\n          if (!zoneSpec.onCancelTask) {\n            this._cancelTaskZS = DELEGATE_ZS;\n            this._cancelTaskDlgt = parentDelegate;\n            this._cancelTaskCurrZone = this.zone;\n          }\n        }\n      }\n\n      fork(targetZone, zoneSpec) {\n        return this._forkZS ? this._forkZS.onFork(this._forkDlgt, this.zone, targetZone, zoneSpec) : new Zone(targetZone, zoneSpec);\n      }\n\n      intercept(targetZone, callback, source) {\n        return this._interceptZS ? this._interceptZS.onIntercept(this._interceptDlgt, this._interceptCurrZone, targetZone, callback, source) : callback;\n      }\n\n      invoke(targetZone, callback, applyThis, applyArgs, source) {\n        return this._invokeZS ? this._invokeZS.onInvoke(this._invokeDlgt, this._invokeCurrZone, targetZone, callback, applyThis, applyArgs, source) : callback.apply(applyThis, applyArgs);\n      }\n\n      handleError(targetZone, error) {\n        return this._handleErrorZS ? this._handleErrorZS.onHandleError(this._handleErrorDlgt, this._handleErrorCurrZone, targetZone, error) : true;\n      }\n\n      scheduleTask(targetZone, task) {\n        let returnTask = task;\n\n        if (this._scheduleTaskZS) {\n          if (this._hasTaskZS) {\n            returnTask._zoneDelegates.push(this._hasTaskDlgtOwner);\n          } // clang-format off\n\n\n          returnTask = this._scheduleTaskZS.onScheduleTask(this._scheduleTaskDlgt, this._scheduleTaskCurrZone, targetZone, task); // clang-format on\n\n          if (!returnTask) returnTask = task;\n        } else {\n          if (task.scheduleFn) {\n            task.scheduleFn(task);\n          } else if (task.type == microTask) {\n            scheduleMicroTask(task);\n          } else {\n            throw new Error('Task is missing scheduleFn.');\n          }\n        }\n\n        return returnTask;\n      }\n\n      invokeTask(targetZone, task, applyThis, applyArgs) {\n        return this._invokeTaskZS ? this._invokeTaskZS.onInvokeTask(this._invokeTaskDlgt, this._invokeTaskCurrZone, targetZone, task, applyThis, applyArgs) : task.callback.apply(applyThis, applyArgs);\n      }\n\n      cancelTask(targetZone, task) {\n        let value;\n\n        if (this._cancelTaskZS) {\n          value = this._cancelTaskZS.onCancelTask(this._cancelTaskDlgt, this._cancelTaskCurrZone, targetZone, task);\n        } else {\n          if (!task.cancelFn) {\n            throw Error('Task is not cancelable');\n          }\n\n          value = task.cancelFn(task);\n        }\n\n        return value;\n      }\n\n      hasTask(targetZone, isEmpty) {\n        // hasTask should not throw error so other ZoneDelegate\n        // can still trigger hasTask callback\n        try {\n          this._hasTaskZS && this._hasTaskZS.onHasTask(this._hasTaskDlgt, this._hasTaskCurrZone, targetZone, isEmpty);\n        } catch (err) {\n          this.handleError(targetZone, err);\n        }\n      } // tslint:disable-next-line:require-internal-with-underscore\n\n\n      _updateTaskCount(type, count) {\n        const counts = this._taskCounts;\n        const prev = counts[type];\n        const next = counts[type] = prev + count;\n\n        if (next < 0) {\n          throw new Error('More tasks executed then were scheduled.');\n        }\n\n        if (prev == 0 || next == 0) {\n          const isEmpty = {\n            microTask: counts['microTask'] > 0,\n            macroTask: counts['macroTask'] > 0,\n            eventTask: counts['eventTask'] > 0,\n            change: type\n          };\n          this.hasTask(this.zone, isEmpty);\n        }\n      }\n\n    }\n\n    class ZoneTask {\n      constructor(type, source, callback, options, scheduleFn, cancelFn) {\n        // tslint:disable-next-line:require-internal-with-underscore\n        this._zone = null;\n        this.runCount = 0; // tslint:disable-next-line:require-internal-with-underscore\n\n        this._zoneDelegates = null; // tslint:disable-next-line:require-internal-with-underscore\n\n        this._state = 'notScheduled';\n        this.type = type;\n        this.source = source;\n        this.data = options;\n        this.scheduleFn = scheduleFn;\n        this.cancelFn = cancelFn;\n\n        if (!callback) {\n          throw new Error('callback is not defined');\n        }\n\n        this.callback = callback;\n        const self = this; // TODO: @JiaLiPassion options should have interface\n\n        if (type === eventTask && options && options.useG) {\n          this.invoke = ZoneTask.invokeTask;\n        } else {\n          this.invoke = function () {\n            return ZoneTask.invokeTask.call(global, self, this, arguments);\n          };\n        }\n      }\n\n      static invokeTask(task, target, args) {\n        if (!task) {\n          task = this;\n        }\n\n        _numberOfNestedTaskFrames++;\n\n        try {\n          task.runCount++;\n          return task.zone.runTask(task, target, args);\n        } finally {\n          if (_numberOfNestedTaskFrames == 1) {\n            drainMicroTaskQueue();\n          }\n\n          _numberOfNestedTaskFrames--;\n        }\n      }\n\n      get zone() {\n        return this._zone;\n      }\n\n      get state() {\n        return this._state;\n      }\n\n      cancelScheduleRequest() {\n        this._transitionTo(notScheduled, scheduling);\n      } // tslint:disable-next-line:require-internal-with-underscore\n\n\n      _transitionTo(toState, fromState1, fromState2) {\n        if (this._state === fromState1 || this._state === fromState2) {\n          this._state = toState;\n\n          if (toState == notScheduled) {\n            this._zoneDelegates = null;\n          }\n        } else {\n          throw new Error(`${this.type} '${this.source}': can not transition to '${toState}', expecting state '${fromState1}'${fromState2 ? ' or \\'' + fromState2 + '\\'' : ''}, was '${this._state}'.`);\n        }\n      }\n\n      toString() {\n        if (this.data && typeof this.data.handleId !== 'undefined') {\n          return this.data.handleId.toString();\n        } else {\n          return Object.prototype.toString.call(this);\n        }\n      } // add toJSON method to prevent cyclic error when\n      // call JSON.stringify(zoneTask)\n\n\n      toJSON() {\n        return {\n          type: this.type,\n          state: this.state,\n          source: this.source,\n          zone: this.zone.name,\n          runCount: this.runCount\n        };\n      }\n\n    } //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    ///  MICROTASK QUEUE\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n\n\n    const symbolSetTimeout = __symbol__('setTimeout');\n\n    const symbolPromise = __symbol__('Promise');\n\n    const symbolThen = __symbol__('then');\n\n    let _microTaskQueue = [];\n    let _isDrainingMicrotaskQueue = false;\n    let nativeMicroTaskQueuePromise;\n\n    function scheduleMicroTask(task) {\n      // if we are not running in any task, and there has not been anything scheduled\n      // we must bootstrap the initial task creation by manually scheduling the drain\n      if (_numberOfNestedTaskFrames === 0 && _microTaskQueue.length === 0) {\n        // We are not running in Task, so we need to kickstart the microtask queue.\n        if (!nativeMicroTaskQueuePromise) {\n          if (global[symbolPromise]) {\n            nativeMicroTaskQueuePromise = global[symbolPromise].resolve(0);\n          }\n        }\n\n        if (nativeMicroTaskQueuePromise) {\n          let nativeThen = nativeMicroTaskQueuePromise[symbolThen];\n\n          if (!nativeThen) {\n            // native Promise is not patchable, we need to use `then` directly\n            // issue 1078\n            nativeThen = nativeMicroTaskQueuePromise['then'];\n          }\n\n          nativeThen.call(nativeMicroTaskQueuePromise, drainMicroTaskQueue);\n        } else {\n          global[symbolSetTimeout](drainMicroTaskQueue, 0);\n        }\n      }\n\n      task && _microTaskQueue.push(task);\n    }\n\n    function drainMicroTaskQueue() {\n      if (!_isDrainingMicrotaskQueue) {\n        _isDrainingMicrotaskQueue = true;\n\n        while (_microTaskQueue.length) {\n          const queue = _microTaskQueue;\n          _microTaskQueue = [];\n\n          for (let i = 0; i < queue.length; i++) {\n            const task = queue[i];\n\n            try {\n              task.zone.runTask(task, null, null);\n            } catch (error) {\n              _api.onUnhandledError(error);\n            }\n          }\n        }\n\n        _api.microtaskDrainDone();\n\n        _isDrainingMicrotaskQueue = false;\n      }\n    } //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    ///  BOOTSTRAP\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n\n\n    const NO_ZONE = {\n      name: 'NO ZONE'\n    };\n    const notScheduled = 'notScheduled',\n          scheduling = 'scheduling',\n          scheduled = 'scheduled',\n          running = 'running',\n          canceling = 'canceling',\n          unknown = 'unknown';\n    const microTask = 'microTask',\n          macroTask = 'macroTask',\n          eventTask = 'eventTask';\n    const patches = {};\n    const _api = {\n      symbol: __symbol__,\n      currentZoneFrame: () => _currentZoneFrame,\n      onUnhandledError: noop,\n      microtaskDrainDone: noop,\n      scheduleMicroTask: scheduleMicroTask,\n      showUncaughtError: () => !Zone[__symbol__('ignoreConsoleErrorUncaughtError')],\n      patchEventTarget: () => [],\n      patchOnProperties: noop,\n      patchMethod: () => noop,\n      bindArguments: () => [],\n      patchThen: () => noop,\n      patchMacroTask: () => noop,\n      setNativePromise: NativePromise => {\n        // sometimes NativePromise.resolve static function\n        // is not ready yet, (such as core-js/es6.promise)\n        // so we need to check here.\n        if (NativePromise && typeof NativePromise.resolve === 'function') {\n          nativeMicroTaskQueuePromise = NativePromise.resolve(0);\n        }\n      },\n      patchEventPrototype: () => noop,\n      isIEOrEdge: () => false,\n      getGlobalObjects: () => undefined,\n      ObjectDefineProperty: () => noop,\n      ObjectGetOwnPropertyDescriptor: () => undefined,\n      ObjectCreate: () => undefined,\n      ArraySlice: () => [],\n      patchClass: () => noop,\n      wrapWithCurrentZone: () => noop,\n      filterProperties: () => [],\n      attachOriginToPatched: () => noop,\n      _redefineProperty: () => noop,\n      patchCallbacks: () => noop\n    };\n    let _currentZoneFrame = {\n      parent: null,\n      zone: new Zone(null, null)\n    };\n    let _currentTask = null;\n    let _numberOfNestedTaskFrames = 0;\n\n    function noop() {}\n\n    performanceMeasure('Zone', 'Zone');\n    return global['Zone'] = Zone;\n  }(typeof window !== 'undefined' && window || typeof self !== 'undefined' && self || global);\n  /**\n   * @license\n   * Copyright Google Inc. All Rights Reserved.\n   *\n   * Use of this source code is governed by an MIT-style license that can be\n   * found in the LICENSE file at https://angular.io/license\n   */\n\n\n  Zone.__load_patch('ZoneAwarePromise', (global, Zone, api) => {\n    const ObjectGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n    const ObjectDefineProperty = Object.defineProperty;\n\n    function readableObjectToString(obj) {\n      if (obj && obj.toString === Object.prototype.toString) {\n        const className = obj.constructor && obj.constructor.name;\n        return (className ? className : '') + ': ' + JSON.stringify(obj);\n      }\n\n      return obj ? obj.toString() : Object.prototype.toString.call(obj);\n    }\n\n    const __symbol__ = api.symbol;\n    const _uncaughtPromiseErrors = [];\n    const isDisableWrappingUncaughtPromiseRejection = global[__symbol__('DISABLE_WRAPPING_UNCAUGHT_PROMISE_REJECTION')] === true;\n\n    const symbolPromise = __symbol__('Promise');\n\n    const symbolThen = __symbol__('then');\n\n    const creationTrace = '__creationTrace__';\n\n    api.onUnhandledError = e => {\n      if (api.showUncaughtError()) {\n        const rejection = e && e.rejection;\n\n        if (rejection) {\n          console.error('Unhandled Promise rejection:', rejection instanceof Error ? rejection.message : rejection, '; Zone:', e.zone.name, '; Task:', e.task && e.task.source, '; Value:', rejection, rejection instanceof Error ? rejection.stack : undefined);\n        } else {\n          console.error(e);\n        }\n      }\n    };\n\n    api.microtaskDrainDone = () => {\n      while (_uncaughtPromiseErrors.length) {\n        const uncaughtPromiseError = _uncaughtPromiseErrors.shift();\n\n        try {\n          uncaughtPromiseError.zone.runGuarded(() => {\n            throw uncaughtPromiseError;\n          });\n        } catch (error) {\n          handleUnhandledRejection(error);\n        }\n      }\n    };\n\n    const UNHANDLED_PROMISE_REJECTION_HANDLER_SYMBOL = __symbol__('unhandledPromiseRejectionHandler');\n\n    function handleUnhandledRejection(e) {\n      api.onUnhandledError(e);\n\n      try {\n        const handler = Zone[UNHANDLED_PROMISE_REJECTION_HANDLER_SYMBOL];\n\n        if (typeof handler === 'function') {\n          handler.call(this, e);\n        }\n      } catch (err) {}\n    }\n\n    function isThenable(value) {\n      return value && value.then;\n    }\n\n    function forwardResolution(value) {\n      return value;\n    }\n\n    function forwardRejection(rejection) {\n      return ZoneAwarePromise.reject(rejection);\n    }\n\n    const symbolState = __symbol__('state');\n\n    const symbolValue = __symbol__('value');\n\n    const symbolFinally = __symbol__('finally');\n\n    const symbolParentPromiseValue = __symbol__('parentPromiseValue');\n\n    const symbolParentPromiseState = __symbol__('parentPromiseState');\n\n    const source = 'Promise.then';\n    const UNRESOLVED = null;\n    const RESOLVED = true;\n    const REJECTED = false;\n    const REJECTED_NO_CATCH = 0;\n\n    function makeResolver(promise, state) {\n      return v => {\n        try {\n          resolvePromise(promise, state, v);\n        } catch (err) {\n          resolvePromise(promise, false, err);\n        } // Do not return value or you will break the Promise spec.\n\n      };\n    }\n\n    const once = function () {\n      let wasCalled = false;\n      return function wrapper(wrappedFunction) {\n        return function () {\n          if (wasCalled) {\n            return;\n          }\n\n          wasCalled = true;\n          wrappedFunction.apply(null, arguments);\n        };\n      };\n    };\n\n    const TYPE_ERROR = 'Promise resolved with itself';\n\n    const CURRENT_TASK_TRACE_SYMBOL = __symbol__('currentTaskTrace'); // Promise Resolution\n\n\n    function resolvePromise(promise, state, value) {\n      const onceWrapper = once();\n\n      if (promise === value) {\n        throw new TypeError(TYPE_ERROR);\n      }\n\n      if (promise[symbolState] === UNRESOLVED) {\n        // should only get value.then once based on promise spec.\n        let then = null;\n\n        try {\n          if (typeof value === 'object' || typeof value === 'function') {\n            then = value && value.then;\n          }\n        } catch (err) {\n          onceWrapper(() => {\n            resolvePromise(promise, false, err);\n          })();\n          return promise;\n        } // if (value instanceof ZoneAwarePromise) {\n\n\n        if (state !== REJECTED && value instanceof ZoneAwarePromise && value.hasOwnProperty(symbolState) && value.hasOwnProperty(symbolValue) && value[symbolState] !== UNRESOLVED) {\n          clearRejectedNoCatch(value);\n          resolvePromise(promise, value[symbolState], value[symbolValue]);\n        } else if (state !== REJECTED && typeof then === 'function') {\n          try {\n            then.call(value, onceWrapper(makeResolver(promise, state)), onceWrapper(makeResolver(promise, false)));\n          } catch (err) {\n            onceWrapper(() => {\n              resolvePromise(promise, false, err);\n            })();\n          }\n        } else {\n          promise[symbolState] = state;\n          const queue = promise[symbolValue];\n          promise[symbolValue] = value;\n\n          if (promise[symbolFinally] === symbolFinally) {\n            // the promise is generated by Promise.prototype.finally\n            if (state === RESOLVED) {\n              // the state is resolved, should ignore the value\n              // and use parent promise value\n              promise[symbolState] = promise[symbolParentPromiseState];\n              promise[symbolValue] = promise[symbolParentPromiseValue];\n            }\n          } // record task information in value when error occurs, so we can\n          // do some additional work such as render longStackTrace\n\n\n          if (state === REJECTED && value instanceof Error) {\n            // check if longStackTraceZone is here\n            const trace = Zone.currentTask && Zone.currentTask.data && Zone.currentTask.data[creationTrace];\n\n            if (trace) {\n              // only keep the long stack trace into error when in longStackTraceZone\n              ObjectDefineProperty(value, CURRENT_TASK_TRACE_SYMBOL, {\n                configurable: true,\n                enumerable: false,\n                writable: true,\n                value: trace\n              });\n            }\n          }\n\n          for (let i = 0; i < queue.length;) {\n            scheduleResolveOrReject(promise, queue[i++], queue[i++], queue[i++], queue[i++]);\n          }\n\n          if (queue.length == 0 && state == REJECTED) {\n            promise[symbolState] = REJECTED_NO_CATCH;\n            let uncaughtPromiseError = value;\n\n            if (!isDisableWrappingUncaughtPromiseRejection) {\n              // If disable wrapping uncaught promise reject\n              // and the rejected value is an Error object,\n              // use the value instead of wrapping it.\n              try {\n                // Here we throws a new Error to print more readable error log\n                // and if the value is not an error, zone.js builds an `Error`\n                // Object here to attach the stack information.\n                throw new Error('Uncaught (in promise): ' + readableObjectToString(value) + (value && value.stack ? '\\n' + value.stack : ''));\n              } catch (err) {\n                uncaughtPromiseError = err;\n              }\n            }\n\n            uncaughtPromiseError.rejection = value;\n            uncaughtPromiseError.promise = promise;\n            uncaughtPromiseError.zone = Zone.current;\n            uncaughtPromiseError.task = Zone.currentTask;\n\n            _uncaughtPromiseErrors.push(uncaughtPromiseError);\n\n            api.scheduleMicroTask(); // to make sure that it is running\n          }\n        }\n      } // Resolving an already resolved promise is a noop.\n\n\n      return promise;\n    }\n\n    const REJECTION_HANDLED_HANDLER = __symbol__('rejectionHandledHandler');\n\n    function clearRejectedNoCatch(promise) {\n      if (promise[symbolState] === REJECTED_NO_CATCH) {\n        // if the promise is rejected no catch status\n        // and queue.length > 0, means there is a error handler\n        // here to handle the rejected promise, we should trigger\n        // windows.rejectionhandled eventHandler or nodejs rejectionHandled\n        // eventHandler\n        try {\n          const handler = Zone[REJECTION_HANDLED_HANDLER];\n\n          if (handler && typeof handler === 'function') {\n            handler.call(this, {\n              rejection: promise[symbolValue],\n              promise: promise\n            });\n          }\n        } catch (err) {}\n\n        promise[symbolState] = REJECTED;\n\n        for (let i = 0; i < _uncaughtPromiseErrors.length; i++) {\n          if (promise === _uncaughtPromiseErrors[i].promise) {\n            _uncaughtPromiseErrors.splice(i, 1);\n          }\n        }\n      }\n    }\n\n    function scheduleResolveOrReject(promise, zone, chainPromise, onFulfilled, onRejected) {\n      clearRejectedNoCatch(promise);\n      const promiseState = promise[symbolState];\n      const delegate = promiseState ? typeof onFulfilled === 'function' ? onFulfilled : forwardResolution : typeof onRejected === 'function' ? onRejected : forwardRejection;\n      zone.scheduleMicroTask(source, () => {\n        try {\n          const parentPromiseValue = promise[symbolValue];\n          const isFinallyPromise = !!chainPromise && symbolFinally === chainPromise[symbolFinally];\n\n          if (isFinallyPromise) {\n            // if the promise is generated from finally call, keep parent promise's state and value\n            chainPromise[symbolParentPromiseValue] = parentPromiseValue;\n            chainPromise[symbolParentPromiseState] = promiseState;\n          } // should not pass value to finally callback\n\n\n          const value = zone.run(delegate, undefined, isFinallyPromise && delegate !== forwardRejection && delegate !== forwardResolution ? [] : [parentPromiseValue]);\n          resolvePromise(chainPromise, true, value);\n        } catch (error) {\n          // if error occurs, should always return this error\n          resolvePromise(chainPromise, false, error);\n        }\n      }, chainPromise);\n    }\n\n    const ZONE_AWARE_PROMISE_TO_STRING = 'function ZoneAwarePromise() { [native code] }';\n\n    const noop = function () {};\n\n    class ZoneAwarePromise {\n      static toString() {\n        return ZONE_AWARE_PROMISE_TO_STRING;\n      }\n\n      static resolve(value) {\n        return resolvePromise(new this(null), RESOLVED, value);\n      }\n\n      static reject(error) {\n        return resolvePromise(new this(null), REJECTED, error);\n      }\n\n      static race(values) {\n        let resolve;\n        let reject;\n        let promise = new this((res, rej) => {\n          resolve = res;\n          reject = rej;\n        });\n\n        function onResolve(value) {\n          resolve(value);\n        }\n\n        function onReject(error) {\n          reject(error);\n        }\n\n        for (let value of values) {\n          if (!isThenable(value)) {\n            value = this.resolve(value);\n          }\n\n          value.then(onResolve, onReject);\n        }\n\n        return promise;\n      }\n\n      static all(values) {\n        return ZoneAwarePromise.allWithCallback(values);\n      }\n\n      static allSettled(values) {\n        const P = this && this.prototype instanceof ZoneAwarePromise ? this : ZoneAwarePromise;\n        return P.allWithCallback(values, {\n          thenCallback: value => ({\n            status: 'fulfilled',\n            value\n          }),\n          errorCallback: err => ({\n            status: 'rejected',\n            reason: err\n          })\n        });\n      }\n\n      static allWithCallback(values, callback) {\n        let resolve;\n        let reject;\n        let promise = new this((res, rej) => {\n          resolve = res;\n          reject = rej;\n        }); // Start at 2 to prevent prematurely resolving if .then is called immediately.\n\n        let unresolvedCount = 2;\n        let valueIndex = 0;\n        const resolvedValues = [];\n\n        for (let value of values) {\n          if (!isThenable(value)) {\n            value = this.resolve(value);\n          }\n\n          const curValueIndex = valueIndex;\n\n          try {\n            value.then(value => {\n              resolvedValues[curValueIndex] = callback ? callback.thenCallback(value) : value;\n              unresolvedCount--;\n\n              if (unresolvedCount === 0) {\n                resolve(resolvedValues);\n              }\n            }, err => {\n              if (!callback) {\n                reject(err);\n              } else {\n                resolvedValues[curValueIndex] = callback.errorCallback(err);\n                unresolvedCount--;\n\n                if (unresolvedCount === 0) {\n                  resolve(resolvedValues);\n                }\n              }\n            });\n          } catch (thenErr) {\n            reject(thenErr);\n          }\n\n          unresolvedCount++;\n          valueIndex++;\n        } // Make the unresolvedCount zero-based again.\n\n\n        unresolvedCount -= 2;\n\n        if (unresolvedCount === 0) {\n          resolve(resolvedValues);\n        }\n\n        return promise;\n      }\n\n      constructor(executor) {\n        const promise = this;\n\n        if (!(promise instanceof ZoneAwarePromise)) {\n          throw new Error('Must be an instanceof Promise.');\n        }\n\n        promise[symbolState] = UNRESOLVED;\n        promise[symbolValue] = []; // queue;\n\n        try {\n          executor && executor(makeResolver(promise, RESOLVED), makeResolver(promise, REJECTED));\n        } catch (error) {\n          resolvePromise(promise, false, error);\n        }\n      }\n\n      get [Symbol.toStringTag]() {\n        return 'Promise';\n      }\n\n      get [Symbol.species]() {\n        return ZoneAwarePromise;\n      }\n\n      then(onFulfilled, onRejected) {\n        let C = this.constructor[Symbol.species];\n\n        if (!C || typeof C !== 'function') {\n          C = this.constructor || ZoneAwarePromise;\n        }\n\n        const chainPromise = new C(noop);\n        const zone = Zone.current;\n\n        if (this[symbolState] == UNRESOLVED) {\n          this[symbolValue].push(zone, chainPromise, onFulfilled, onRejected);\n        } else {\n          scheduleResolveOrReject(this, zone, chainPromise, onFulfilled, onRejected);\n        }\n\n        return chainPromise;\n      }\n\n      catch(onRejected) {\n        return this.then(null, onRejected);\n      }\n\n      finally(onFinally) {\n        let C = this.constructor[Symbol.species];\n\n        if (!C || typeof C !== 'function') {\n          C = ZoneAwarePromise;\n        }\n\n        const chainPromise = new C(noop);\n        chainPromise[symbolFinally] = symbolFinally;\n        const zone = Zone.current;\n\n        if (this[symbolState] == UNRESOLVED) {\n          this[symbolValue].push(zone, chainPromise, onFinally, onFinally);\n        } else {\n          scheduleResolveOrReject(this, zone, chainPromise, onFinally, onFinally);\n        }\n\n        return chainPromise;\n      }\n\n    } // Protect against aggressive optimizers dropping seemingly unused properties.\n    // E.g. Closure Compiler in advanced mode.\n\n\n    ZoneAwarePromise['resolve'] = ZoneAwarePromise.resolve;\n    ZoneAwarePromise['reject'] = ZoneAwarePromise.reject;\n    ZoneAwarePromise['race'] = ZoneAwarePromise.race;\n    ZoneAwarePromise['all'] = ZoneAwarePromise.all;\n    const NativePromise = global[symbolPromise] = global['Promise'];\n\n    const ZONE_AWARE_PROMISE = Zone.__symbol__('ZoneAwarePromise');\n\n    let desc = ObjectGetOwnPropertyDescriptor(global, 'Promise');\n\n    if (!desc || desc.configurable) {\n      desc && delete desc.writable;\n      desc && delete desc.value;\n\n      if (!desc) {\n        desc = {\n          configurable: true,\n          enumerable: true\n        };\n      }\n\n      desc.get = function () {\n        // if we already set ZoneAwarePromise, use patched one\n        // otherwise return native one.\n        return global[ZONE_AWARE_PROMISE] ? global[ZONE_AWARE_PROMISE] : global[symbolPromise];\n      };\n\n      desc.set = function (NewNativePromise) {\n        if (NewNativePromise === ZoneAwarePromise) {\n          // if the NewNativePromise is ZoneAwarePromise\n          // save to global\n          global[ZONE_AWARE_PROMISE] = NewNativePromise;\n        } else {\n          // if the NewNativePromise is not ZoneAwarePromise\n          // for example: after load zone.js, some library just\n          // set es6-promise to global, if we set it to global\n          // directly, assertZonePatched will fail and angular\n          // will not loaded, so we just set the NewNativePromise\n          // to global[symbolPromise], so the result is just like\n          // we load ES6 Promise before zone.js\n          global[symbolPromise] = NewNativePromise;\n\n          if (!NewNativePromise.prototype[symbolThen]) {\n            patchThen(NewNativePromise);\n          }\n\n          api.setNativePromise(NewNativePromise);\n        }\n      };\n\n      ObjectDefineProperty(global, 'Promise', desc);\n    }\n\n    global['Promise'] = ZoneAwarePromise;\n\n    const symbolThenPatched = __symbol__('thenPatched');\n\n    function patchThen(Ctor) {\n      const proto = Ctor.prototype;\n      const prop = ObjectGetOwnPropertyDescriptor(proto, 'then');\n\n      if (prop && (prop.writable === false || !prop.configurable)) {\n        // check Ctor.prototype.then propertyDescriptor is writable or not\n        // in meteor env, writable is false, we should ignore such case\n        return;\n      }\n\n      const originalThen = proto.then; // Keep a reference to the original method.\n\n      proto[symbolThen] = originalThen;\n\n      Ctor.prototype.then = function (onResolve, onReject) {\n        const wrapped = new ZoneAwarePromise((resolve, reject) => {\n          originalThen.call(this, resolve, reject);\n        });\n        return wrapped.then(onResolve, onReject);\n      };\n\n      Ctor[symbolThenPatched] = true;\n    }\n\n    api.patchThen = patchThen;\n\n    function zoneify(fn) {\n      return function () {\n        let resultPromise = fn.apply(this, arguments);\n\n        if (resultPromise instanceof ZoneAwarePromise) {\n          return resultPromise;\n        }\n\n        let ctor = resultPromise.constructor;\n\n        if (!ctor[symbolThenPatched]) {\n          patchThen(ctor);\n        }\n\n        return resultPromise;\n      };\n    }\n\n    if (NativePromise) {\n      patchThen(NativePromise);\n      const fetch = global['fetch'];\n\n      if (typeof fetch == 'function') {\n        global[api.symbol('fetch')] = fetch;\n        global['fetch'] = zoneify(fetch);\n      }\n    } // This is not part of public API, but it is useful for tests, so we expose it.\n\n\n    Promise[Zone.__symbol__('uncaughtPromiseErrors')] = _uncaughtPromiseErrors;\n    return ZoneAwarePromise;\n  });\n  /**\n   * @license\n   * Copyright Google Inc. All Rights Reserved.\n   *\n   * Use of this source code is governed by an MIT-style license that can be\n   * found in the LICENSE file at https://angular.io/license\n   */\n\n  /**\n   * Suppress closure compiler errors about unknown 'Zone' variable\n   * @fileoverview\n   * @suppress {undefinedVars,globalThis,missingRequire}\n   */\n  /// <reference types=\"node\"/>\n  // issue #989, to reduce bundle size, use short name\n\n  /** Object.getOwnPropertyDescriptor */\n\n\n  const ObjectGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n  /** Object.defineProperty */\n\n  const ObjectDefineProperty = Object.defineProperty;\n  /** Object.getPrototypeOf */\n\n  const ObjectGetPrototypeOf = Object.getPrototypeOf;\n  /** Object.create */\n\n  const ObjectCreate = Object.create;\n  /** Array.prototype.slice */\n\n  const ArraySlice = Array.prototype.slice;\n  /** addEventListener string const */\n\n  const ADD_EVENT_LISTENER_STR = 'addEventListener';\n  /** removeEventListener string const */\n\n  const REMOVE_EVENT_LISTENER_STR = 'removeEventListener';\n  /** zoneSymbol addEventListener */\n\n  const ZONE_SYMBOL_ADD_EVENT_LISTENER = Zone.__symbol__(ADD_EVENT_LISTENER_STR);\n  /** zoneSymbol removeEventListener */\n\n\n  const ZONE_SYMBOL_REMOVE_EVENT_LISTENER = Zone.__symbol__(REMOVE_EVENT_LISTENER_STR);\n  /** true string const */\n\n\n  const TRUE_STR = 'true';\n  /** false string const */\n\n  const FALSE_STR = 'false';\n  /** Zone symbol prefix string const. */\n\n  const ZONE_SYMBOL_PREFIX = Zone.__symbol__('');\n\n  function wrapWithCurrentZone(callback, source) {\n    return Zone.current.wrap(callback, source);\n  }\n\n  function scheduleMacroTaskWithCurrentZone(source, callback, data, customSchedule, customCancel) {\n    return Zone.current.scheduleMacroTask(source, callback, data, customSchedule, customCancel);\n  }\n\n  const zoneSymbol = Zone.__symbol__;\n  const isWindowExists = typeof window !== 'undefined';\n  const internalWindow = isWindowExists ? window : undefined;\n\n  const _global = isWindowExists && internalWindow || typeof self === 'object' && self || global;\n\n  const REMOVE_ATTRIBUTE = 'removeAttribute';\n  const NULL_ON_PROP_VALUE = [null];\n\n  function bindArguments(args, source) {\n    for (let i = args.length - 1; i >= 0; i--) {\n      if (typeof args[i] === 'function') {\n        args[i] = wrapWithCurrentZone(args[i], source + '_' + i);\n      }\n    }\n\n    return args;\n  }\n\n  function patchPrototype(prototype, fnNames) {\n    const source = prototype.constructor['name'];\n\n    for (let i = 0; i < fnNames.length; i++) {\n      const name = fnNames[i];\n      const delegate = prototype[name];\n\n      if (delegate) {\n        const prototypeDesc = ObjectGetOwnPropertyDescriptor(prototype, name);\n\n        if (!isPropertyWritable(prototypeDesc)) {\n          continue;\n        }\n\n        prototype[name] = (delegate => {\n          const patched = function () {\n            return delegate.apply(this, bindArguments(arguments, source + '.' + name));\n          };\n\n          attachOriginToPatched(patched, delegate);\n          return patched;\n        })(delegate);\n      }\n    }\n  }\n\n  function isPropertyWritable(propertyDesc) {\n    if (!propertyDesc) {\n      return true;\n    }\n\n    if (propertyDesc.writable === false) {\n      return false;\n    }\n\n    return !(typeof propertyDesc.get === 'function' && typeof propertyDesc.set === 'undefined');\n  }\n\n  const isWebWorker = typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope; // Make sure to access `process` through `_global` so that WebPack does not accidentally browserify\n  // this code.\n\n  const isNode = !('nw' in _global) && typeof _global.process !== 'undefined' && {}.toString.call(_global.process) === '[object process]';\n  const isBrowser = !isNode && !isWebWorker && !!(isWindowExists && internalWindow['HTMLElement']); // we are in electron of nw, so we are both browser and nodejs\n  // Make sure to access `process` through `_global` so that WebPack does not accidentally browserify\n  // this code.\n\n  const isMix = typeof _global.process !== 'undefined' && {}.toString.call(_global.process) === '[object process]' && !isWebWorker && !!(isWindowExists && internalWindow['HTMLElement']);\n  const zoneSymbolEventNames = {};\n\n  const wrapFn = function (event) {\n    // https://github.com/angular/zone.js/issues/911, in IE, sometimes\n    // event will be undefined, so we need to use window.event\n    event = event || _global.event;\n\n    if (!event) {\n      return;\n    }\n\n    let eventNameSymbol = zoneSymbolEventNames[event.type];\n\n    if (!eventNameSymbol) {\n      eventNameSymbol = zoneSymbolEventNames[event.type] = zoneSymbol('ON_PROPERTY' + event.type);\n    }\n\n    const target = this || event.target || _global;\n    const listener = target[eventNameSymbol];\n    let result;\n\n    if (isBrowser && target === internalWindow && event.type === 'error') {\n      // window.onerror have different signiture\n      // https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onerror#window.onerror\n      // and onerror callback will prevent default when callback return true\n      const errorEvent = event;\n      result = listener && listener.call(this, errorEvent.message, errorEvent.filename, errorEvent.lineno, errorEvent.colno, errorEvent.error);\n\n      if (result === true) {\n        event.preventDefault();\n      }\n    } else {\n      result = listener && listener.apply(this, arguments);\n\n      if (result != undefined && !result) {\n        event.preventDefault();\n      }\n    }\n\n    return result;\n  };\n\n  function patchProperty(obj, prop, prototype) {\n    let desc = ObjectGetOwnPropertyDescriptor(obj, prop);\n\n    if (!desc && prototype) {\n      // when patch window object, use prototype to check prop exist or not\n      const prototypeDesc = ObjectGetOwnPropertyDescriptor(prototype, prop);\n\n      if (prototypeDesc) {\n        desc = {\n          enumerable: true,\n          configurable: true\n        };\n      }\n    } // if the descriptor not exists or is not configurable\n    // just return\n\n\n    if (!desc || !desc.configurable) {\n      return;\n    }\n\n    const onPropPatchedSymbol = zoneSymbol('on' + prop + 'patched');\n\n    if (obj.hasOwnProperty(onPropPatchedSymbol) && obj[onPropPatchedSymbol]) {\n      return;\n    } // A property descriptor cannot have getter/setter and be writable\n    // deleting the writable and value properties avoids this error:\n    //\n    // TypeError: property descriptors must not specify a value or be writable when a\n    // getter or setter has been specified\n\n\n    delete desc.writable;\n    delete desc.value;\n    const originalDescGet = desc.get;\n    const originalDescSet = desc.set; // substr(2) cuz 'onclick' -> 'click', etc\n\n    const eventName = prop.substr(2);\n    let eventNameSymbol = zoneSymbolEventNames[eventName];\n\n    if (!eventNameSymbol) {\n      eventNameSymbol = zoneSymbolEventNames[eventName] = zoneSymbol('ON_PROPERTY' + eventName);\n    }\n\n    desc.set = function (newValue) {\n      // in some of windows's onproperty callback, this is undefined\n      // so we need to check it\n      let target = this;\n\n      if (!target && obj === _global) {\n        target = _global;\n      }\n\n      if (!target) {\n        return;\n      }\n\n      let previousValue = target[eventNameSymbol];\n\n      if (previousValue) {\n        target.removeEventListener(eventName, wrapFn);\n      } // issue #978, when onload handler was added before loading zone.js\n      // we should remove it with originalDescSet\n\n\n      if (originalDescSet) {\n        originalDescSet.apply(target, NULL_ON_PROP_VALUE);\n      }\n\n      if (typeof newValue === 'function') {\n        target[eventNameSymbol] = newValue;\n        target.addEventListener(eventName, wrapFn, false);\n      } else {\n        target[eventNameSymbol] = null;\n      }\n    }; // The getter would return undefined for unassigned properties but the default value of an\n    // unassigned property is null\n\n\n    desc.get = function () {\n      // in some of windows's onproperty callback, this is undefined\n      // so we need to check it\n      let target = this;\n\n      if (!target && obj === _global) {\n        target = _global;\n      }\n\n      if (!target) {\n        return null;\n      }\n\n      const listener = target[eventNameSymbol];\n\n      if (listener) {\n        return listener;\n      } else if (originalDescGet) {\n        // result will be null when use inline event attribute,\n        // such as <button onclick=\"func();\">OK</button>\n        // because the onclick function is internal raw uncompiled handler\n        // the onclick will be evaluated when first time event was triggered or\n        // the property is accessed, https://github.com/angular/zone.js/issues/525\n        // so we should use original native get to retrieve the handler\n        let value = originalDescGet && originalDescGet.call(this);\n\n        if (value) {\n          desc.set.call(this, value);\n\n          if (typeof target[REMOVE_ATTRIBUTE] === 'function') {\n            target.removeAttribute(prop);\n          }\n\n          return value;\n        }\n      }\n\n      return null;\n    };\n\n    ObjectDefineProperty(obj, prop, desc);\n    obj[onPropPatchedSymbol] = true;\n  }\n\n  function patchOnProperties(obj, properties, prototype) {\n    if (properties) {\n      for (let i = 0; i < properties.length; i++) {\n        patchProperty(obj, 'on' + properties[i], prototype);\n      }\n    } else {\n      const onProperties = [];\n\n      for (const prop in obj) {\n        if (prop.substr(0, 2) == 'on') {\n          onProperties.push(prop);\n        }\n      }\n\n      for (let j = 0; j < onProperties.length; j++) {\n        patchProperty(obj, onProperties[j], prototype);\n      }\n    }\n  }\n\n  const originalInstanceKey = zoneSymbol('originalInstance'); // wrap some native API on `window`\n\n  function patchClass(className) {\n    const OriginalClass = _global[className];\n    if (!OriginalClass) return; // keep original class in global\n\n    _global[zoneSymbol(className)] = OriginalClass;\n\n    _global[className] = function () {\n      const a = bindArguments(arguments, className);\n\n      switch (a.length) {\n        case 0:\n          this[originalInstanceKey] = new OriginalClass();\n          break;\n\n        case 1:\n          this[originalInstanceKey] = new OriginalClass(a[0]);\n          break;\n\n        case 2:\n          this[originalInstanceKey] = new OriginalClass(a[0], a[1]);\n          break;\n\n        case 3:\n          this[originalInstanceKey] = new OriginalClass(a[0], a[1], a[2]);\n          break;\n\n        case 4:\n          this[originalInstanceKey] = new OriginalClass(a[0], a[1], a[2], a[3]);\n          break;\n\n        default:\n          throw new Error('Arg list too long.');\n      }\n    }; // attach original delegate to patched function\n\n\n    attachOriginToPatched(_global[className], OriginalClass);\n    const instance = new OriginalClass(function () {});\n    let prop;\n\n    for (prop in instance) {\n      // https://bugs.webkit.org/show_bug.cgi?id=44721\n      if (className === 'XMLHttpRequest' && prop === 'responseBlob') continue;\n\n      (function (prop) {\n        if (typeof instance[prop] === 'function') {\n          _global[className].prototype[prop] = function () {\n            return this[originalInstanceKey][prop].apply(this[originalInstanceKey], arguments);\n          };\n        } else {\n          ObjectDefineProperty(_global[className].prototype, prop, {\n            set: function (fn) {\n              if (typeof fn === 'function') {\n                this[originalInstanceKey][prop] = wrapWithCurrentZone(fn, className + '.' + prop); // keep callback in wrapped function so we can\n                // use it in Function.prototype.toString to return\n                // the native one.\n\n                attachOriginToPatched(this[originalInstanceKey][prop], fn);\n              } else {\n                this[originalInstanceKey][prop] = fn;\n              }\n            },\n            get: function () {\n              return this[originalInstanceKey][prop];\n            }\n          });\n        }\n      })(prop);\n    }\n\n    for (prop in OriginalClass) {\n      if (prop !== 'prototype' && OriginalClass.hasOwnProperty(prop)) {\n        _global[className][prop] = OriginalClass[prop];\n      }\n    }\n  }\n\n  function copySymbolProperties(src, dest) {\n    if (typeof Object.getOwnPropertySymbols !== 'function') {\n      return;\n    }\n\n    const symbols = Object.getOwnPropertySymbols(src);\n    symbols.forEach(symbol => {\n      const desc = Object.getOwnPropertyDescriptor(src, symbol);\n      Object.defineProperty(dest, symbol, {\n        get: function () {\n          return src[symbol];\n        },\n        set: function (value) {\n          if (desc && (!desc.writable || typeof desc.set !== 'function')) {\n            // if src[symbol] is not writable or not have a setter, just return\n            return;\n          }\n\n          src[symbol] = value;\n        },\n        enumerable: desc ? desc.enumerable : true,\n        configurable: desc ? desc.configurable : true\n      });\n    });\n  }\n\n  let shouldCopySymbolProperties = false;\n\n  function patchMethod(target, name, patchFn) {\n    let proto = target;\n\n    while (proto && !proto.hasOwnProperty(name)) {\n      proto = ObjectGetPrototypeOf(proto);\n    }\n\n    if (!proto && target[name]) {\n      // somehow we did not find it, but we can see it. This happens on IE for Window properties.\n      proto = target;\n    }\n\n    const delegateName = zoneSymbol(name);\n    let delegate = null;\n\n    if (proto && !(delegate = proto[delegateName])) {\n      delegate = proto[delegateName] = proto[name]; // check whether proto[name] is writable\n      // some property is readonly in safari, such as HtmlCanvasElement.prototype.toBlob\n\n      const desc = proto && ObjectGetOwnPropertyDescriptor(proto, name);\n\n      if (isPropertyWritable(desc)) {\n        const patchDelegate = patchFn(delegate, delegateName, name);\n\n        proto[name] = function () {\n          return patchDelegate(this, arguments);\n        };\n\n        attachOriginToPatched(proto[name], delegate);\n\n        if (shouldCopySymbolProperties) {\n          copySymbolProperties(delegate, proto[name]);\n        }\n      }\n    }\n\n    return delegate;\n  } // TODO: @JiaLiPassion, support cancel task later if necessary\n\n\n  function patchMacroTask(obj, funcName, metaCreator) {\n    let setNative = null;\n\n    function scheduleTask(task) {\n      const data = task.data;\n\n      data.args[data.cbIdx] = function () {\n        task.invoke.apply(this, arguments);\n      };\n\n      setNative.apply(data.target, data.args);\n      return task;\n    }\n\n    setNative = patchMethod(obj, funcName, delegate => function (self, args) {\n      const meta = metaCreator(self, args);\n\n      if (meta.cbIdx >= 0 && typeof args[meta.cbIdx] === 'function') {\n        return scheduleMacroTaskWithCurrentZone(meta.name, args[meta.cbIdx], meta, scheduleTask);\n      } else {\n        // cause an error by calling it directly.\n        return delegate.apply(self, args);\n      }\n    });\n  }\n\n  function attachOriginToPatched(patched, original) {\n    patched[zoneSymbol('OriginalDelegate')] = original;\n  }\n\n  let isDetectedIEOrEdge = false;\n  let ieOrEdge = false;\n\n  function isIE() {\n    try {\n      const ua = internalWindow.navigator.userAgent;\n\n      if (ua.indexOf('MSIE ') !== -1 || ua.indexOf('Trident/') !== -1) {\n        return true;\n      }\n    } catch (error) {}\n\n    return false;\n  }\n\n  function isIEOrEdge() {\n    if (isDetectedIEOrEdge) {\n      return ieOrEdge;\n    }\n\n    isDetectedIEOrEdge = true;\n\n    try {\n      const ua = internalWindow.navigator.userAgent;\n\n      if (ua.indexOf('MSIE ') !== -1 || ua.indexOf('Trident/') !== -1 || ua.indexOf('Edge/') !== -1) {\n        ieOrEdge = true;\n      }\n    } catch (error) {}\n\n    return ieOrEdge;\n  }\n  /**\n   * @license\n   * Copyright Google Inc. All Rights Reserved.\n   *\n   * Use of this source code is governed by an MIT-style license that can be\n   * found in the LICENSE file at https://angular.io/license\n   */\n  // override Function.prototype.toString to make zone.js patched function\n  // look like native function\n\n\n  Zone.__load_patch('toString', global => {\n    // patch Func.prototype.toString to let them look like native\n    const originalFunctionToString = Function.prototype.toString;\n    const ORIGINAL_DELEGATE_SYMBOL = zoneSymbol('OriginalDelegate');\n    const PROMISE_SYMBOL = zoneSymbol('Promise');\n    const ERROR_SYMBOL = zoneSymbol('Error');\n\n    const newFunctionToString = function toString() {\n      if (typeof this === 'function') {\n        const originalDelegate = this[ORIGINAL_DELEGATE_SYMBOL];\n\n        if (originalDelegate) {\n          if (typeof originalDelegate === 'function') {\n            return originalFunctionToString.call(originalDelegate);\n          } else {\n            return Object.prototype.toString.call(originalDelegate);\n          }\n        }\n\n        if (this === Promise) {\n          const nativePromise = global[PROMISE_SYMBOL];\n\n          if (nativePromise) {\n            return originalFunctionToString.call(nativePromise);\n          }\n        }\n\n        if (this === Error) {\n          const nativeError = global[ERROR_SYMBOL];\n\n          if (nativeError) {\n            return originalFunctionToString.call(nativeError);\n          }\n        }\n      }\n\n      return originalFunctionToString.call(this);\n    };\n\n    newFunctionToString[ORIGINAL_DELEGATE_SYMBOL] = originalFunctionToString;\n    Function.prototype.toString = newFunctionToString; // patch Object.prototype.toString to let them look like native\n\n    const originalObjectToString = Object.prototype.toString;\n    const PROMISE_OBJECT_TO_STRING = '[object Promise]';\n\n    Object.prototype.toString = function () {\n      if (this instanceof Promise) {\n        return PROMISE_OBJECT_TO_STRING;\n      }\n\n      return originalObjectToString.call(this);\n    };\n  });\n  /**\n   * @license\n   * Copyright Google Inc. All Rights Reserved.\n   *\n   * Use of this source code is governed by an MIT-style license that can be\n   * found in the LICENSE file at https://angular.io/license\n   */\n\n\n  let passiveSupported = false;\n\n  if (typeof window !== 'undefined') {\n    try {\n      const options = Object.defineProperty({}, 'passive', {\n        get: function () {\n          passiveSupported = true;\n        }\n      });\n      window.addEventListener('test', options, options);\n      window.removeEventListener('test', options, options);\n    } catch (err) {\n      passiveSupported = false;\n    }\n  } // an identifier to tell ZoneTask do not create a new invoke closure\n\n\n  const OPTIMIZED_ZONE_EVENT_TASK_DATA = {\n    useG: true\n  };\n  const zoneSymbolEventNames$1 = {};\n  const globalSources = {};\n  const EVENT_NAME_SYMBOL_REGX = new RegExp('^' + ZONE_SYMBOL_PREFIX + '(\\\\w+)(true|false)$');\n  const IMMEDIATE_PROPAGATION_SYMBOL = zoneSymbol('propagationStopped');\n\n  function prepareEventNames(eventName, eventNameToString) {\n    const falseEventName = (eventNameToString ? eventNameToString(eventName) : eventName) + FALSE_STR;\n    const trueEventName = (eventNameToString ? eventNameToString(eventName) : eventName) + TRUE_STR;\n    const symbol = ZONE_SYMBOL_PREFIX + falseEventName;\n    const symbolCapture = ZONE_SYMBOL_PREFIX + trueEventName;\n    zoneSymbolEventNames$1[eventName] = {};\n    zoneSymbolEventNames$1[eventName][FALSE_STR] = symbol;\n    zoneSymbolEventNames$1[eventName][TRUE_STR] = symbolCapture;\n  }\n\n  function patchEventTarget(_global, apis, patchOptions) {\n    const ADD_EVENT_LISTENER = patchOptions && patchOptions.add || ADD_EVENT_LISTENER_STR;\n    const REMOVE_EVENT_LISTENER = patchOptions && patchOptions.rm || REMOVE_EVENT_LISTENER_STR;\n    const LISTENERS_EVENT_LISTENER = patchOptions && patchOptions.listeners || 'eventListeners';\n    const REMOVE_ALL_LISTENERS_EVENT_LISTENER = patchOptions && patchOptions.rmAll || 'removeAllListeners';\n    const zoneSymbolAddEventListener = zoneSymbol(ADD_EVENT_LISTENER);\n    const ADD_EVENT_LISTENER_SOURCE = '.' + ADD_EVENT_LISTENER + ':';\n    const PREPEND_EVENT_LISTENER = 'prependListener';\n    const PREPEND_EVENT_LISTENER_SOURCE = '.' + PREPEND_EVENT_LISTENER + ':';\n\n    const invokeTask = function (task, target, event) {\n      // for better performance, check isRemoved which is set\n      // by removeEventListener\n      if (task.isRemoved) {\n        return;\n      }\n\n      const delegate = task.callback;\n\n      if (typeof delegate === 'object' && delegate.handleEvent) {\n        // create the bind version of handleEvent when invoke\n        task.callback = event => delegate.handleEvent(event);\n\n        task.originalDelegate = delegate;\n      } // invoke static task.invoke\n\n\n      task.invoke(task, target, [event]);\n      const options = task.options;\n\n      if (options && typeof options === 'object' && options.once) {\n        // if options.once is true, after invoke once remove listener here\n        // only browser need to do this, nodejs eventEmitter will cal removeListener\n        // inside EventEmitter.once\n        const delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n        target[REMOVE_EVENT_LISTENER].call(target, event.type, delegate, options);\n      }\n    }; // global shared zoneAwareCallback to handle all event callback with capture = false\n\n\n    const globalZoneAwareCallback = function (event) {\n      // https://github.com/angular/zone.js/issues/911, in IE, sometimes\n      // event will be undefined, so we need to use window.event\n      event = event || _global.event;\n\n      if (!event) {\n        return;\n      } // event.target is needed for Samsung TV and SourceBuffer\n      // || global is needed https://github.com/angular/zone.js/issues/190\n\n\n      const target = this || event.target || _global;\n      const tasks = target[zoneSymbolEventNames$1[event.type][FALSE_STR]];\n\n      if (tasks) {\n        // invoke all tasks which attached to current target with given event.type and capture = false\n        // for performance concern, if task.length === 1, just invoke\n        if (tasks.length === 1) {\n          invokeTask(tasks[0], target, event);\n        } else {\n          // https://github.com/angular/zone.js/issues/836\n          // copy the tasks array before invoke, to avoid\n          // the callback will remove itself or other listener\n          const copyTasks = tasks.slice();\n\n          for (let i = 0; i < copyTasks.length; i++) {\n            if (event && event[IMMEDIATE_PROPAGATION_SYMBOL] === true) {\n              break;\n            }\n\n            invokeTask(copyTasks[i], target, event);\n          }\n        }\n      }\n    }; // global shared zoneAwareCallback to handle all event callback with capture = true\n\n\n    const globalZoneAwareCaptureCallback = function (event) {\n      // https://github.com/angular/zone.js/issues/911, in IE, sometimes\n      // event will be undefined, so we need to use window.event\n      event = event || _global.event;\n\n      if (!event) {\n        return;\n      } // event.target is needed for Samsung TV and SourceBuffer\n      // || global is needed https://github.com/angular/zone.js/issues/190\n\n\n      const target = this || event.target || _global;\n      const tasks = target[zoneSymbolEventNames$1[event.type][TRUE_STR]];\n\n      if (tasks) {\n        // invoke all tasks which attached to current target with given event.type and capture = false\n        // for performance concern, if task.length === 1, just invoke\n        if (tasks.length === 1) {\n          invokeTask(tasks[0], target, event);\n        } else {\n          // https://github.com/angular/zone.js/issues/836\n          // copy the tasks array before invoke, to avoid\n          // the callback will remove itself or other listener\n          const copyTasks = tasks.slice();\n\n          for (let i = 0; i < copyTasks.length; i++) {\n            if (event && event[IMMEDIATE_PROPAGATION_SYMBOL] === true) {\n              break;\n            }\n\n            invokeTask(copyTasks[i], target, event);\n          }\n        }\n      }\n    };\n\n    function patchEventTargetMethods(obj, patchOptions) {\n      if (!obj) {\n        return false;\n      }\n\n      let useGlobalCallback = true;\n\n      if (patchOptions && patchOptions.useG !== undefined) {\n        useGlobalCallback = patchOptions.useG;\n      }\n\n      const validateHandler = patchOptions && patchOptions.vh;\n      let checkDuplicate = true;\n\n      if (patchOptions && patchOptions.chkDup !== undefined) {\n        checkDuplicate = patchOptions.chkDup;\n      }\n\n      let returnTarget = false;\n\n      if (patchOptions && patchOptions.rt !== undefined) {\n        returnTarget = patchOptions.rt;\n      }\n\n      let proto = obj;\n\n      while (proto && !proto.hasOwnProperty(ADD_EVENT_LISTENER)) {\n        proto = ObjectGetPrototypeOf(proto);\n      }\n\n      if (!proto && obj[ADD_EVENT_LISTENER]) {\n        // somehow we did not find it, but we can see it. This happens on IE for Window properties.\n        proto = obj;\n      }\n\n      if (!proto) {\n        return false;\n      }\n\n      if (proto[zoneSymbolAddEventListener]) {\n        return false;\n      }\n\n      const eventNameToString = patchOptions && patchOptions.eventNameToString; // a shared global taskData to pass data for scheduleEventTask\n      // so we do not need to create a new object just for pass some data\n\n      const taskData = {};\n      const nativeAddEventListener = proto[zoneSymbolAddEventListener] = proto[ADD_EVENT_LISTENER];\n      const nativeRemoveEventListener = proto[zoneSymbol(REMOVE_EVENT_LISTENER)] = proto[REMOVE_EVENT_LISTENER];\n      const nativeListeners = proto[zoneSymbol(LISTENERS_EVENT_LISTENER)] = proto[LISTENERS_EVENT_LISTENER];\n      const nativeRemoveAllListeners = proto[zoneSymbol(REMOVE_ALL_LISTENERS_EVENT_LISTENER)] = proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER];\n      let nativePrependEventListener;\n\n      if (patchOptions && patchOptions.prepend) {\n        nativePrependEventListener = proto[zoneSymbol(patchOptions.prepend)] = proto[patchOptions.prepend];\n      }\n      /**\n       * This util function will build an option object with passive option\n       * to handle all possible input from the user.\n       */\n\n\n      function buildEventListenerOptions(options, passive) {\n        if (!passiveSupported && typeof options === 'object' && options) {\n          // doesn't support passive but user want to pass an object as options.\n          // this will not work on some old browser, so we just pass a boolean\n          // as useCapture parameter\n          return !!options.capture;\n        }\n\n        if (!passiveSupported || !passive) {\n          return options;\n        }\n\n        if (typeof options === 'boolean') {\n          return {\n            capture: options,\n            passive: true\n          };\n        }\n\n        if (!options) {\n          return {\n            passive: true\n          };\n        }\n\n        if (typeof options === 'object' && options.passive !== false) {\n          return Object.assign(Object.assign({}, options), {\n            passive: true\n          });\n        }\n\n        return options;\n      }\n\n      const customScheduleGlobal = function (task) {\n        // if there is already a task for the eventName + capture,\n        // just return, because we use the shared globalZoneAwareCallback here.\n        if (taskData.isExisting) {\n          return;\n        }\n\n        return nativeAddEventListener.call(taskData.target, taskData.eventName, taskData.capture ? globalZoneAwareCaptureCallback : globalZoneAwareCallback, taskData.options);\n      };\n\n      const customCancelGlobal = function (task) {\n        // if task is not marked as isRemoved, this call is directly\n        // from Zone.prototype.cancelTask, we should remove the task\n        // from tasksList of target first\n        if (!task.isRemoved) {\n          const symbolEventNames = zoneSymbolEventNames$1[task.eventName];\n          let symbolEventName;\n\n          if (symbolEventNames) {\n            symbolEventName = symbolEventNames[task.capture ? TRUE_STR : FALSE_STR];\n          }\n\n          const existingTasks = symbolEventName && task.target[symbolEventName];\n\n          if (existingTasks) {\n            for (let i = 0; i < existingTasks.length; i++) {\n              const existingTask = existingTasks[i];\n\n              if (existingTask === task) {\n                existingTasks.splice(i, 1); // set isRemoved to data for faster invokeTask check\n\n                task.isRemoved = true;\n\n                if (existingTasks.length === 0) {\n                  // all tasks for the eventName + capture have gone,\n                  // remove globalZoneAwareCallback and remove the task cache from target\n                  task.allRemoved = true;\n                  task.target[symbolEventName] = null;\n                }\n\n                break;\n              }\n            }\n          }\n        } // if all tasks for the eventName + capture have gone,\n        // we will really remove the global event callback,\n        // if not, return\n\n\n        if (!task.allRemoved) {\n          return;\n        }\n\n        return nativeRemoveEventListener.call(task.target, task.eventName, task.capture ? globalZoneAwareCaptureCallback : globalZoneAwareCallback, task.options);\n      };\n\n      const customScheduleNonGlobal = function (task) {\n        return nativeAddEventListener.call(taskData.target, taskData.eventName, task.invoke, taskData.options);\n      };\n\n      const customSchedulePrepend = function (task) {\n        return nativePrependEventListener.call(taskData.target, taskData.eventName, task.invoke, taskData.options);\n      };\n\n      const customCancelNonGlobal = function (task) {\n        return nativeRemoveEventListener.call(task.target, task.eventName, task.invoke, task.options);\n      };\n\n      const customSchedule = useGlobalCallback ? customScheduleGlobal : customScheduleNonGlobal;\n      const customCancel = useGlobalCallback ? customCancelGlobal : customCancelNonGlobal;\n\n      const compareTaskCallbackVsDelegate = function (task, delegate) {\n        const typeOfDelegate = typeof delegate;\n        return typeOfDelegate === 'function' && task.callback === delegate || typeOfDelegate === 'object' && task.originalDelegate === delegate;\n      };\n\n      const compare = patchOptions && patchOptions.diff ? patchOptions.diff : compareTaskCallbackVsDelegate;\n      const blackListedEvents = Zone[zoneSymbol('BLACK_LISTED_EVENTS')];\n\n      const passiveEvents = _global[zoneSymbol('PASSIVE_EVENTS')];\n\n      const makeAddListener = function (nativeListener, addSource, customScheduleFn, customCancelFn, returnTarget = false, prepend = false) {\n        return function () {\n          const target = this || _global;\n          let eventName = arguments[0];\n\n          if (patchOptions && patchOptions.transferEventName) {\n            eventName = patchOptions.transferEventName(eventName);\n          }\n\n          let delegate = arguments[1];\n\n          if (!delegate) {\n            return nativeListener.apply(this, arguments);\n          }\n\n          if (isNode && eventName === 'uncaughtException') {\n            // don't patch uncaughtException of nodejs to prevent endless loop\n            return nativeListener.apply(this, arguments);\n          } // don't create the bind delegate function for handleEvent\n          // case here to improve addEventListener performance\n          // we will create the bind delegate when invoke\n\n\n          let isHandleEvent = false;\n\n          if (typeof delegate !== 'function') {\n            if (!delegate.handleEvent) {\n              return nativeListener.apply(this, arguments);\n            }\n\n            isHandleEvent = true;\n          }\n\n          if (validateHandler && !validateHandler(nativeListener, delegate, target, arguments)) {\n            return;\n          }\n\n          const passive = passiveSupported && !!passiveEvents && passiveEvents.indexOf(eventName) !== -1;\n          const options = buildEventListenerOptions(arguments[2], passive);\n\n          if (blackListedEvents) {\n            // check black list\n            for (let i = 0; i < blackListedEvents.length; i++) {\n              if (eventName === blackListedEvents[i]) {\n                if (passive) {\n                  return nativeListener.call(target, eventName, delegate, options);\n                } else {\n                  return nativeListener.apply(this, arguments);\n                }\n              }\n            }\n          }\n\n          const capture = !options ? false : typeof options === 'boolean' ? true : options.capture;\n          const once = options && typeof options === 'object' ? options.once : false;\n          const zone = Zone.current;\n          let symbolEventNames = zoneSymbolEventNames$1[eventName];\n\n          if (!symbolEventNames) {\n            prepareEventNames(eventName, eventNameToString);\n            symbolEventNames = zoneSymbolEventNames$1[eventName];\n          }\n\n          const symbolEventName = symbolEventNames[capture ? TRUE_STR : FALSE_STR];\n          let existingTasks = target[symbolEventName];\n          let isExisting = false;\n\n          if (existingTasks) {\n            // already have task registered\n            isExisting = true;\n\n            if (checkDuplicate) {\n              for (let i = 0; i < existingTasks.length; i++) {\n                if (compare(existingTasks[i], delegate)) {\n                  // same callback, same capture, same event name, just return\n                  return;\n                }\n              }\n            }\n          } else {\n            existingTasks = target[symbolEventName] = [];\n          }\n\n          let source;\n          const constructorName = target.constructor['name'];\n          const targetSource = globalSources[constructorName];\n\n          if (targetSource) {\n            source = targetSource[eventName];\n          }\n\n          if (!source) {\n            source = constructorName + addSource + (eventNameToString ? eventNameToString(eventName) : eventName);\n          } // do not create a new object as task.data to pass those things\n          // just use the global shared one\n\n\n          taskData.options = options;\n\n          if (once) {\n            // if addEventListener with once options, we don't pass it to\n            // native addEventListener, instead we keep the once setting\n            // and handle ourselves.\n            taskData.options.once = false;\n          }\n\n          taskData.target = target;\n          taskData.capture = capture;\n          taskData.eventName = eventName;\n          taskData.isExisting = isExisting;\n          const data = useGlobalCallback ? OPTIMIZED_ZONE_EVENT_TASK_DATA : undefined; // keep taskData into data to allow onScheduleEventTask to access the task information\n\n          if (data) {\n            data.taskData = taskData;\n          }\n\n          const task = zone.scheduleEventTask(source, delegate, data, customScheduleFn, customCancelFn); // should clear taskData.target to avoid memory leak\n          // issue, https://github.com/angular/angular/issues/20442\n\n          taskData.target = null; // need to clear up taskData because it is a global object\n\n          if (data) {\n            data.taskData = null;\n          } // have to save those information to task in case\n          // application may call task.zone.cancelTask() directly\n\n\n          if (once) {\n            options.once = true;\n          }\n\n          if (!(!passiveSupported && typeof task.options === 'boolean')) {\n            // if not support passive, and we pass an option object\n            // to addEventListener, we should save the options to task\n            task.options = options;\n          }\n\n          task.target = target;\n          task.capture = capture;\n          task.eventName = eventName;\n\n          if (isHandleEvent) {\n            // save original delegate for compare to check duplicate\n            task.originalDelegate = delegate;\n          }\n\n          if (!prepend) {\n            existingTasks.push(task);\n          } else {\n            existingTasks.unshift(task);\n          }\n\n          if (returnTarget) {\n            return target;\n          }\n        };\n      };\n\n      proto[ADD_EVENT_LISTENER] = makeAddListener(nativeAddEventListener, ADD_EVENT_LISTENER_SOURCE, customSchedule, customCancel, returnTarget);\n\n      if (nativePrependEventListener) {\n        proto[PREPEND_EVENT_LISTENER] = makeAddListener(nativePrependEventListener, PREPEND_EVENT_LISTENER_SOURCE, customSchedulePrepend, customCancel, returnTarget, true);\n      }\n\n      proto[REMOVE_EVENT_LISTENER] = function () {\n        const target = this || _global;\n        let eventName = arguments[0];\n\n        if (patchOptions && patchOptions.transferEventName) {\n          eventName = patchOptions.transferEventName(eventName);\n        }\n\n        const options = arguments[2];\n        const capture = !options ? false : typeof options === 'boolean' ? true : options.capture;\n        const delegate = arguments[1];\n\n        if (!delegate) {\n          return nativeRemoveEventListener.apply(this, arguments);\n        }\n\n        if (validateHandler && !validateHandler(nativeRemoveEventListener, delegate, target, arguments)) {\n          return;\n        }\n\n        const symbolEventNames = zoneSymbolEventNames$1[eventName];\n        let symbolEventName;\n\n        if (symbolEventNames) {\n          symbolEventName = symbolEventNames[capture ? TRUE_STR : FALSE_STR];\n        }\n\n        const existingTasks = symbolEventName && target[symbolEventName];\n\n        if (existingTasks) {\n          for (let i = 0; i < existingTasks.length; i++) {\n            const existingTask = existingTasks[i];\n\n            if (compare(existingTask, delegate)) {\n              existingTasks.splice(i, 1); // set isRemoved to data for faster invokeTask check\n\n              existingTask.isRemoved = true;\n\n              if (existingTasks.length === 0) {\n                // all tasks for the eventName + capture have gone,\n                // remove globalZoneAwareCallback and remove the task cache from target\n                existingTask.allRemoved = true;\n                target[symbolEventName] = null; // in the target, we have an event listener which is added by on_property\n                // such as target.onclick = function() {}, so we need to clear this internal\n                // property too if all delegates all removed\n\n                if (typeof eventName === 'string') {\n                  const onPropertySymbol = ZONE_SYMBOL_PREFIX + 'ON_PROPERTY' + eventName;\n                  target[onPropertySymbol] = null;\n                }\n              }\n\n              existingTask.zone.cancelTask(existingTask);\n\n              if (returnTarget) {\n                return target;\n              }\n\n              return;\n            }\n          }\n        } // issue 930, didn't find the event name or callback\n        // from zone kept existingTasks, the callback maybe\n        // added outside of zone, we need to call native removeEventListener\n        // to try to remove it.\n\n\n        return nativeRemoveEventListener.apply(this, arguments);\n      };\n\n      proto[LISTENERS_EVENT_LISTENER] = function () {\n        const target = this || _global;\n        let eventName = arguments[0];\n\n        if (patchOptions && patchOptions.transferEventName) {\n          eventName = patchOptions.transferEventName(eventName);\n        }\n\n        const listeners = [];\n        const tasks = findEventTasks(target, eventNameToString ? eventNameToString(eventName) : eventName);\n\n        for (let i = 0; i < tasks.length; i++) {\n          const task = tasks[i];\n          let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n          listeners.push(delegate);\n        }\n\n        return listeners;\n      };\n\n      proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER] = function () {\n        const target = this || _global;\n        let eventName = arguments[0];\n\n        if (!eventName) {\n          const keys = Object.keys(target);\n\n          for (let i = 0; i < keys.length; i++) {\n            const prop = keys[i];\n            const match = EVENT_NAME_SYMBOL_REGX.exec(prop);\n            let evtName = match && match[1]; // in nodejs EventEmitter, removeListener event is\n            // used for monitoring the removeListener call,\n            // so just keep removeListener eventListener until\n            // all other eventListeners are removed\n\n            if (evtName && evtName !== 'removeListener') {\n              this[REMOVE_ALL_LISTENERS_EVENT_LISTENER].call(this, evtName);\n            }\n          } // remove removeListener listener finally\n\n\n          this[REMOVE_ALL_LISTENERS_EVENT_LISTENER].call(this, 'removeListener');\n        } else {\n          if (patchOptions && patchOptions.transferEventName) {\n            eventName = patchOptions.transferEventName(eventName);\n          }\n\n          const symbolEventNames = zoneSymbolEventNames$1[eventName];\n\n          if (symbolEventNames) {\n            const symbolEventName = symbolEventNames[FALSE_STR];\n            const symbolCaptureEventName = symbolEventNames[TRUE_STR];\n            const tasks = target[symbolEventName];\n            const captureTasks = target[symbolCaptureEventName];\n\n            if (tasks) {\n              const removeTasks = tasks.slice();\n\n              for (let i = 0; i < removeTasks.length; i++) {\n                const task = removeTasks[i];\n                let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                this[REMOVE_EVENT_LISTENER].call(this, eventName, delegate, task.options);\n              }\n            }\n\n            if (captureTasks) {\n              const removeTasks = captureTasks.slice();\n\n              for (let i = 0; i < removeTasks.length; i++) {\n                const task = removeTasks[i];\n                let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                this[REMOVE_EVENT_LISTENER].call(this, eventName, delegate, task.options);\n              }\n            }\n          }\n        }\n\n        if (returnTarget) {\n          return this;\n        }\n      }; // for native toString patch\n\n\n      attachOriginToPatched(proto[ADD_EVENT_LISTENER], nativeAddEventListener);\n      attachOriginToPatched(proto[REMOVE_EVENT_LISTENER], nativeRemoveEventListener);\n\n      if (nativeRemoveAllListeners) {\n        attachOriginToPatched(proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER], nativeRemoveAllListeners);\n      }\n\n      if (nativeListeners) {\n        attachOriginToPatched(proto[LISTENERS_EVENT_LISTENER], nativeListeners);\n      }\n\n      return true;\n    }\n\n    let results = [];\n\n    for (let i = 0; i < apis.length; i++) {\n      results[i] = patchEventTargetMethods(apis[i], patchOptions);\n    }\n\n    return results;\n  }\n\n  function findEventTasks(target, eventName) {\n    if (!eventName) {\n      const foundTasks = [];\n\n      for (let prop in target) {\n        const match = EVENT_NAME_SYMBOL_REGX.exec(prop);\n        let evtName = match && match[1];\n\n        if (evtName && (!eventName || evtName === eventName)) {\n          const tasks = target[prop];\n\n          if (tasks) {\n            for (let i = 0; i < tasks.length; i++) {\n              foundTasks.push(tasks[i]);\n            }\n          }\n        }\n      }\n\n      return foundTasks;\n    }\n\n    let symbolEventName = zoneSymbolEventNames$1[eventName];\n\n    if (!symbolEventName) {\n      prepareEventNames(eventName);\n      symbolEventName = zoneSymbolEventNames$1[eventName];\n    }\n\n    const captureFalseTasks = target[symbolEventName[FALSE_STR]];\n    const captureTrueTasks = target[symbolEventName[TRUE_STR]];\n\n    if (!captureFalseTasks) {\n      return captureTrueTasks ? captureTrueTasks.slice() : [];\n    } else {\n      return captureTrueTasks ? captureFalseTasks.concat(captureTrueTasks) : captureFalseTasks.slice();\n    }\n  }\n\n  function patchEventPrototype(global, api) {\n    const Event = global['Event'];\n\n    if (Event && Event.prototype) {\n      api.patchMethod(Event.prototype, 'stopImmediatePropagation', delegate => function (self, args) {\n        self[IMMEDIATE_PROPAGATION_SYMBOL] = true; // we need to call the native stopImmediatePropagation\n        // in case in some hybrid application, some part of\n        // application will be controlled by zone, some are not\n\n        delegate && delegate.apply(self, args);\n      });\n    }\n  }\n  /**\n   * @license\n   * Copyright Google Inc. All Rights Reserved.\n   *\n   * Use of this source code is governed by an MIT-style license that can be\n   * found in the LICENSE file at https://angular.io/license\n   */\n\n\n  function patchCallbacks(api, target, targetName, method, callbacks) {\n    const symbol = Zone.__symbol__(method);\n\n    if (target[symbol]) {\n      return;\n    }\n\n    const nativeDelegate = target[symbol] = target[method];\n\n    target[method] = function (name, opts, options) {\n      if (opts && opts.prototype) {\n        callbacks.forEach(function (callback) {\n          const source = `${targetName}.${method}::` + callback;\n          const prototype = opts.prototype;\n\n          if (prototype.hasOwnProperty(callback)) {\n            const descriptor = api.ObjectGetOwnPropertyDescriptor(prototype, callback);\n\n            if (descriptor && descriptor.value) {\n              descriptor.value = api.wrapWithCurrentZone(descriptor.value, source);\n\n              api._redefineProperty(opts.prototype, callback, descriptor);\n            } else if (prototype[callback]) {\n              prototype[callback] = api.wrapWithCurrentZone(prototype[callback], source);\n            }\n          } else if (prototype[callback]) {\n            prototype[callback] = api.wrapWithCurrentZone(prototype[callback], source);\n          }\n        });\n      }\n\n      return nativeDelegate.call(target, name, opts, options);\n    };\n\n    api.attachOriginToPatched(target[method], nativeDelegate);\n  }\n  /**\n   * @license\n   * Copyright Google Inc. All Rights Reserved.\n   *\n   * Use of this source code is governed by an MIT-style license that can be\n   * found in the LICENSE file at https://angular.io/license\n   */\n\n\n  const globalEventHandlersEventNames = ['abort', 'animationcancel', 'animationend', 'animationiteration', 'auxclick', 'beforeinput', 'blur', 'cancel', 'canplay', 'canplaythrough', 'change', 'compositionstart', 'compositionupdate', 'compositionend', 'cuechange', 'click', 'close', 'contextmenu', 'curechange', 'dblclick', 'drag', 'dragend', 'dragenter', 'dragexit', 'dragleave', 'dragover', 'drop', 'durationchange', 'emptied', 'ended', 'error', 'focus', 'focusin', 'focusout', 'gotpointercapture', 'input', 'invalid', 'keydown', 'keypress', 'keyup', 'load', 'loadstart', 'loadeddata', 'loadedmetadata', 'lostpointercapture', 'mousedown', 'mouseenter', 'mouseleave', 'mousemove', 'mouseout', 'mouseover', 'mouseup', 'mousewheel', 'orientationchange', 'pause', 'play', 'playing', 'pointercancel', 'pointerdown', 'pointerenter', 'pointerleave', 'pointerlockchange', 'mozpointerlockchange', 'webkitpointerlockerchange', 'pointerlockerror', 'mozpointerlockerror', 'webkitpointerlockerror', 'pointermove', 'pointout', 'pointerover', 'pointerup', 'progress', 'ratechange', 'reset', 'resize', 'scroll', 'seeked', 'seeking', 'select', 'selectionchange', 'selectstart', 'show', 'sort', 'stalled', 'submit', 'suspend', 'timeupdate', 'volumechange', 'touchcancel', 'touchmove', 'touchstart', 'touchend', 'transitioncancel', 'transitionend', 'waiting', 'wheel'];\n  const documentEventNames = ['afterscriptexecute', 'beforescriptexecute', 'DOMContentLoaded', 'freeze', 'fullscreenchange', 'mozfullscreenchange', 'webkitfullscreenchange', 'msfullscreenchange', 'fullscreenerror', 'mozfullscreenerror', 'webkitfullscreenerror', 'msfullscreenerror', 'readystatechange', 'visibilitychange', 'resume'];\n  const windowEventNames = ['absolutedeviceorientation', 'afterinput', 'afterprint', 'appinstalled', 'beforeinstallprompt', 'beforeprint', 'beforeunload', 'devicelight', 'devicemotion', 'deviceorientation', 'deviceorientationabsolute', 'deviceproximity', 'hashchange', 'languagechange', 'message', 'mozbeforepaint', 'offline', 'online', 'paint', 'pageshow', 'pagehide', 'popstate', 'rejectionhandled', 'storage', 'unhandledrejection', 'unload', 'userproximity', 'vrdisplayconnected', 'vrdisplaydisconnected', 'vrdisplaypresentchange'];\n  const htmlElementEventNames = ['beforecopy', 'beforecut', 'beforepaste', 'copy', 'cut', 'paste', 'dragstart', 'loadend', 'animationstart', 'search', 'transitionrun', 'transitionstart', 'webkitanimationend', 'webkitanimationiteration', 'webkitanimationstart', 'webkittransitionend'];\n  const mediaElementEventNames = ['encrypted', 'waitingforkey', 'msneedkey', 'mozinterruptbegin', 'mozinterruptend'];\n  const ieElementEventNames = ['activate', 'afterupdate', 'ariarequest', 'beforeactivate', 'beforedeactivate', 'beforeeditfocus', 'beforeupdate', 'cellchange', 'controlselect', 'dataavailable', 'datasetchanged', 'datasetcomplete', 'errorupdate', 'filterchange', 'layoutcomplete', 'losecapture', 'move', 'moveend', 'movestart', 'propertychange', 'resizeend', 'resizestart', 'rowenter', 'rowexit', 'rowsdelete', 'rowsinserted', 'command', 'compassneedscalibration', 'deactivate', 'help', 'mscontentzoom', 'msmanipulationstatechanged', 'msgesturechange', 'msgesturedoubletap', 'msgestureend', 'msgesturehold', 'msgesturestart', 'msgesturetap', 'msgotpointercapture', 'msinertiastart', 'mslostpointercapture', 'mspointercancel', 'mspointerdown', 'mspointerenter', 'mspointerhover', 'mspointerleave', 'mspointermove', 'mspointerout', 'mspointerover', 'mspointerup', 'pointerout', 'mssitemodejumplistitemremoved', 'msthumbnailclick', 'stop', 'storagecommit'];\n  const webglEventNames = ['webglcontextrestored', 'webglcontextlost', 'webglcontextcreationerror'];\n  const formEventNames = ['autocomplete', 'autocompleteerror'];\n  const detailEventNames = ['toggle'];\n  const frameEventNames = ['load'];\n  const frameSetEventNames = ['blur', 'error', 'focus', 'load', 'resize', 'scroll', 'messageerror'];\n  const marqueeEventNames = ['bounce', 'finish', 'start'];\n  const XMLHttpRequestEventNames = ['loadstart', 'progress', 'abort', 'error', 'load', 'progress', 'timeout', 'loadend', 'readystatechange'];\n  const IDBIndexEventNames = ['upgradeneeded', 'complete', 'abort', 'success', 'error', 'blocked', 'versionchange', 'close'];\n  const websocketEventNames = ['close', 'error', 'open', 'message'];\n  const workerEventNames = ['error', 'message'];\n  const eventNames = globalEventHandlersEventNames.concat(webglEventNames, formEventNames, detailEventNames, documentEventNames, windowEventNames, htmlElementEventNames, ieElementEventNames);\n\n  function filterProperties(target, onProperties, ignoreProperties) {\n    if (!ignoreProperties || ignoreProperties.length === 0) {\n      return onProperties;\n    }\n\n    const tip = ignoreProperties.filter(ip => ip.target === target);\n\n    if (!tip || tip.length === 0) {\n      return onProperties;\n    }\n\n    const targetIgnoreProperties = tip[0].ignoreProperties;\n    return onProperties.filter(op => targetIgnoreProperties.indexOf(op) === -1);\n  }\n\n  function patchFilteredProperties(target, onProperties, ignoreProperties, prototype) {\n    // check whether target is available, sometimes target will be undefined\n    // because different browser or some 3rd party plugin.\n    if (!target) {\n      return;\n    }\n\n    const filteredProperties = filterProperties(target, onProperties, ignoreProperties);\n    patchOnProperties(target, filteredProperties, prototype);\n  }\n\n  function propertyDescriptorPatch(api, _global) {\n    if (isNode && !isMix) {\n      return;\n    }\n\n    if (Zone[api.symbol('patchEvents')]) {\n      // events are already been patched by legacy patch.\n      return;\n    }\n\n    const supportsWebSocket = typeof WebSocket !== 'undefined';\n    const ignoreProperties = _global['__Zone_ignore_on_properties']; // for browsers that we can patch the descriptor:  Chrome & Firefox\n\n    if (isBrowser) {\n      const internalWindow = window;\n      const ignoreErrorProperties = isIE ? [{\n        target: internalWindow,\n        ignoreProperties: ['error']\n      }] : []; // in IE/Edge, onProp not exist in window object, but in WindowPrototype\n      // so we need to pass WindowPrototype to check onProp exist or not\n\n      patchFilteredProperties(internalWindow, eventNames.concat(['messageerror']), ignoreProperties ? ignoreProperties.concat(ignoreErrorProperties) : ignoreProperties, ObjectGetPrototypeOf(internalWindow));\n      patchFilteredProperties(Document.prototype, eventNames, ignoreProperties);\n\n      if (typeof internalWindow['SVGElement'] !== 'undefined') {\n        patchFilteredProperties(internalWindow['SVGElement'].prototype, eventNames, ignoreProperties);\n      }\n\n      patchFilteredProperties(Element.prototype, eventNames, ignoreProperties);\n      patchFilteredProperties(HTMLElement.prototype, eventNames, ignoreProperties);\n      patchFilteredProperties(HTMLMediaElement.prototype, mediaElementEventNames, ignoreProperties);\n      patchFilteredProperties(HTMLFrameSetElement.prototype, windowEventNames.concat(frameSetEventNames), ignoreProperties);\n      patchFilteredProperties(HTMLBodyElement.prototype, windowEventNames.concat(frameSetEventNames), ignoreProperties);\n      patchFilteredProperties(HTMLFrameElement.prototype, frameEventNames, ignoreProperties);\n      patchFilteredProperties(HTMLIFrameElement.prototype, frameEventNames, ignoreProperties);\n      const HTMLMarqueeElement = internalWindow['HTMLMarqueeElement'];\n\n      if (HTMLMarqueeElement) {\n        patchFilteredProperties(HTMLMarqueeElement.prototype, marqueeEventNames, ignoreProperties);\n      }\n\n      const Worker = internalWindow['Worker'];\n\n      if (Worker) {\n        patchFilteredProperties(Worker.prototype, workerEventNames, ignoreProperties);\n      }\n    }\n\n    const XMLHttpRequest = _global['XMLHttpRequest'];\n\n    if (XMLHttpRequest) {\n      // XMLHttpRequest is not available in ServiceWorker, so we need to check here\n      patchFilteredProperties(XMLHttpRequest.prototype, XMLHttpRequestEventNames, ignoreProperties);\n    }\n\n    const XMLHttpRequestEventTarget = _global['XMLHttpRequestEventTarget'];\n\n    if (XMLHttpRequestEventTarget) {\n      patchFilteredProperties(XMLHttpRequestEventTarget && XMLHttpRequestEventTarget.prototype, XMLHttpRequestEventNames, ignoreProperties);\n    }\n\n    if (typeof IDBIndex !== 'undefined') {\n      patchFilteredProperties(IDBIndex.prototype, IDBIndexEventNames, ignoreProperties);\n      patchFilteredProperties(IDBRequest.prototype, IDBIndexEventNames, ignoreProperties);\n      patchFilteredProperties(IDBOpenDBRequest.prototype, IDBIndexEventNames, ignoreProperties);\n      patchFilteredProperties(IDBDatabase.prototype, IDBIndexEventNames, ignoreProperties);\n      patchFilteredProperties(IDBTransaction.prototype, IDBIndexEventNames, ignoreProperties);\n      patchFilteredProperties(IDBCursor.prototype, IDBIndexEventNames, ignoreProperties);\n    }\n\n    if (supportsWebSocket) {\n      patchFilteredProperties(WebSocket.prototype, websocketEventNames, ignoreProperties);\n    }\n  }\n  /**\n   * @license\n   * Copyright Google Inc. All Rights Reserved.\n   *\n   * Use of this source code is governed by an MIT-style license that can be\n   * found in the LICENSE file at https://angular.io/license\n   */\n\n\n  Zone.__load_patch('util', (global, Zone, api) => {\n    api.patchOnProperties = patchOnProperties;\n    api.patchMethod = patchMethod;\n    api.bindArguments = bindArguments;\n    api.patchMacroTask = patchMacroTask; // In earlier version of zone.js (<0.9.0), we use env name `__zone_symbol__BLACK_LISTED_EVENTS` to\n    // define which events will not be patched by `Zone.js`.\n    // In newer version (>=0.9.0), we change the env name to `__zone_symbol__UNPATCHED_EVENTS` to keep\n    // the name consistent with angular repo.\n    // The  `__zone_symbol__BLACK_LISTED_EVENTS` is deprecated, but it is still be supported for\n    // backwards compatibility.\n\n    const SYMBOL_BLACK_LISTED_EVENTS = Zone.__symbol__('BLACK_LISTED_EVENTS');\n\n    const SYMBOL_UNPATCHED_EVENTS = Zone.__symbol__('UNPATCHED_EVENTS');\n\n    if (global[SYMBOL_UNPATCHED_EVENTS]) {\n      global[SYMBOL_BLACK_LISTED_EVENTS] = global[SYMBOL_UNPATCHED_EVENTS];\n    }\n\n    if (global[SYMBOL_BLACK_LISTED_EVENTS]) {\n      Zone[SYMBOL_BLACK_LISTED_EVENTS] = Zone[SYMBOL_UNPATCHED_EVENTS] = global[SYMBOL_BLACK_LISTED_EVENTS];\n    }\n\n    api.patchEventPrototype = patchEventPrototype;\n    api.patchEventTarget = patchEventTarget;\n    api.isIEOrEdge = isIEOrEdge;\n    api.ObjectDefineProperty = ObjectDefineProperty;\n    api.ObjectGetOwnPropertyDescriptor = ObjectGetOwnPropertyDescriptor;\n    api.ObjectCreate = ObjectCreate;\n    api.ArraySlice = ArraySlice;\n    api.patchClass = patchClass;\n    api.wrapWithCurrentZone = wrapWithCurrentZone;\n    api.filterProperties = filterProperties;\n    api.attachOriginToPatched = attachOriginToPatched;\n    api._redefineProperty = Object.defineProperty;\n    api.patchCallbacks = patchCallbacks;\n\n    api.getGlobalObjects = () => ({\n      globalSources,\n      zoneSymbolEventNames: zoneSymbolEventNames$1,\n      eventNames,\n      isBrowser,\n      isMix,\n      isNode,\n      TRUE_STR,\n      FALSE_STR,\n      ZONE_SYMBOL_PREFIX,\n      ADD_EVENT_LISTENER_STR,\n      REMOVE_EVENT_LISTENER_STR\n    });\n  });\n  /**\n   * @license\n   * Copyright Google Inc. All Rights Reserved.\n   *\n   * Use of this source code is governed by an MIT-style license that can be\n   * found in the LICENSE file at https://angular.io/license\n   */\n\n\n  const taskSymbol = zoneSymbol('zoneTask');\n\n  function patchTimer(window, setName, cancelName, nameSuffix) {\n    let setNative = null;\n    let clearNative = null;\n    setName += nameSuffix;\n    cancelName += nameSuffix;\n    const tasksByHandleId = {};\n\n    function scheduleTask(task) {\n      const data = task.data;\n\n      function timer() {\n        try {\n          task.invoke.apply(this, arguments);\n        } finally {\n          // issue-934, task will be cancelled\n          // even it is a periodic task such as\n          // setInterval\n          if (!(task.data && task.data.isPeriodic)) {\n            if (typeof data.handleId === 'number') {\n              // in non-nodejs env, we remove timerId\n              // from local cache\n              delete tasksByHandleId[data.handleId];\n            } else if (data.handleId) {\n              // Node returns complex objects as handleIds\n              // we remove task reference from timer object\n              data.handleId[taskSymbol] = null;\n            }\n          }\n        }\n      }\n\n      data.args[0] = timer;\n      data.handleId = setNative.apply(window, data.args);\n      return task;\n    }\n\n    function clearTask(task) {\n      return clearNative(task.data.handleId);\n    }\n\n    setNative = patchMethod(window, setName, delegate => function (self, args) {\n      if (typeof args[0] === 'function') {\n        const options = {\n          isPeriodic: nameSuffix === 'Interval',\n          delay: nameSuffix === 'Timeout' || nameSuffix === 'Interval' ? args[1] || 0 : undefined,\n          args: args\n        };\n        const task = scheduleMacroTaskWithCurrentZone(setName, args[0], options, scheduleTask, clearTask);\n\n        if (!task) {\n          return task;\n        } // Node.js must additionally support the ref and unref functions.\n\n\n        const handle = task.data.handleId;\n\n        if (typeof handle === 'number') {\n          // for non nodejs env, we save handleId: task\n          // mapping in local cache for clearTimeout\n          tasksByHandleId[handle] = task;\n        } else if (handle) {\n          // for nodejs env, we save task\n          // reference in timerId Object for clearTimeout\n          handle[taskSymbol] = task;\n        } // check whether handle is null, because some polyfill or browser\n        // may return undefined from setTimeout/setInterval/setImmediate/requestAnimationFrame\n\n\n        if (handle && handle.ref && handle.unref && typeof handle.ref === 'function' && typeof handle.unref === 'function') {\n          task.ref = handle.ref.bind(handle);\n          task.unref = handle.unref.bind(handle);\n        }\n\n        if (typeof handle === 'number' || handle) {\n          return handle;\n        }\n\n        return task;\n      } else {\n        // cause an error by calling it directly.\n        return delegate.apply(window, args);\n      }\n    });\n    clearNative = patchMethod(window, cancelName, delegate => function (self, args) {\n      const id = args[0];\n      let task;\n\n      if (typeof id === 'number') {\n        // non nodejs env.\n        task = tasksByHandleId[id];\n      } else {\n        // nodejs env.\n        task = id && id[taskSymbol]; // other environments.\n\n        if (!task) {\n          task = id;\n        }\n      }\n\n      if (task && typeof task.type === 'string') {\n        if (task.state !== 'notScheduled' && (task.cancelFn && task.data.isPeriodic || task.runCount === 0)) {\n          if (typeof id === 'number') {\n            delete tasksByHandleId[id];\n          } else if (id) {\n            id[taskSymbol] = null;\n          } // Do not cancel already canceled functions\n\n\n          task.zone.cancelTask(task);\n        }\n      } else {\n        // cause an error by calling it directly.\n        delegate.apply(window, args);\n      }\n    });\n  }\n  /**\n   * @license\n   * Copyright Google Inc. All Rights Reserved.\n   *\n   * Use of this source code is governed by an MIT-style license that can be\n   * found in the LICENSE file at https://angular.io/license\n   */\n\n\n  function patchCustomElements(_global, api) {\n    const {\n      isBrowser,\n      isMix\n    } = api.getGlobalObjects();\n\n    if (!isBrowser && !isMix || !_global['customElements'] || !('customElements' in _global)) {\n      return;\n    }\n\n    const callbacks = ['connectedCallback', 'disconnectedCallback', 'adoptedCallback', 'attributeChangedCallback'];\n    api.patchCallbacks(api, _global.customElements, 'customElements', 'define', callbacks);\n  }\n  /**\n   * @license\n   * Copyright Google Inc. All Rights Reserved.\n   *\n   * Use of this source code is governed by an MIT-style license that can be\n   * found in the LICENSE file at https://angular.io/license\n   */\n\n\n  function eventTargetPatch(_global, api) {\n    if (Zone[api.symbol('patchEventTarget')]) {\n      // EventTarget is already patched.\n      return;\n    }\n\n    const {\n      eventNames,\n      zoneSymbolEventNames,\n      TRUE_STR,\n      FALSE_STR,\n      ZONE_SYMBOL_PREFIX\n    } = api.getGlobalObjects(); //  predefine all __zone_symbol__ + eventName + true/false string\n\n    for (let i = 0; i < eventNames.length; i++) {\n      const eventName = eventNames[i];\n      const falseEventName = eventName + FALSE_STR;\n      const trueEventName = eventName + TRUE_STR;\n      const symbol = ZONE_SYMBOL_PREFIX + falseEventName;\n      const symbolCapture = ZONE_SYMBOL_PREFIX + trueEventName;\n      zoneSymbolEventNames[eventName] = {};\n      zoneSymbolEventNames[eventName][FALSE_STR] = symbol;\n      zoneSymbolEventNames[eventName][TRUE_STR] = symbolCapture;\n    }\n\n    const EVENT_TARGET = _global['EventTarget'];\n\n    if (!EVENT_TARGET || !EVENT_TARGET.prototype) {\n      return;\n    }\n\n    api.patchEventTarget(_global, [EVENT_TARGET && EVENT_TARGET.prototype]);\n    return true;\n  }\n\n  function patchEvent(global, api) {\n    api.patchEventPrototype(global, api);\n  }\n  /**\n   * @license\n   * Copyright Google Inc. All Rights Reserved.\n   *\n   * Use of this source code is governed by an MIT-style license that can be\n   * found in the LICENSE file at https://angular.io/license\n   */\n\n\n  Zone.__load_patch('legacy', global => {\n    const legacyPatch = global[Zone.__symbol__('legacyPatch')];\n\n    if (legacyPatch) {\n      legacyPatch();\n    }\n  });\n\n  Zone.__load_patch('timers', global => {\n    const set = 'set';\n    const clear = 'clear';\n    patchTimer(global, set, clear, 'Timeout');\n    patchTimer(global, set, clear, 'Interval');\n    patchTimer(global, set, clear, 'Immediate');\n  });\n\n  Zone.__load_patch('requestAnimationFrame', global => {\n    patchTimer(global, 'request', 'cancel', 'AnimationFrame');\n    patchTimer(global, 'mozRequest', 'mozCancel', 'AnimationFrame');\n    patchTimer(global, 'webkitRequest', 'webkitCancel', 'AnimationFrame');\n  });\n\n  Zone.__load_patch('blocking', (global, Zone) => {\n    const blockingMethods = ['alert', 'prompt', 'confirm'];\n\n    for (let i = 0; i < blockingMethods.length; i++) {\n      const name = blockingMethods[i];\n      patchMethod(global, name, (delegate, symbol, name) => {\n        return function (s, args) {\n          return Zone.current.run(delegate, global, args, name);\n        };\n      });\n    }\n  });\n\n  Zone.__load_patch('EventTarget', (global, Zone, api) => {\n    patchEvent(global, api);\n    eventTargetPatch(global, api); // patch XMLHttpRequestEventTarget's addEventListener/removeEventListener\n\n    const XMLHttpRequestEventTarget = global['XMLHttpRequestEventTarget'];\n\n    if (XMLHttpRequestEventTarget && XMLHttpRequestEventTarget.prototype) {\n      api.patchEventTarget(global, [XMLHttpRequestEventTarget.prototype]);\n    }\n\n    patchClass('MutationObserver');\n    patchClass('WebKitMutationObserver');\n    patchClass('IntersectionObserver');\n    patchClass('FileReader');\n  });\n\n  Zone.__load_patch('on_property', (global, Zone, api) => {\n    propertyDescriptorPatch(api, global);\n  });\n\n  Zone.__load_patch('customElements', (global, Zone, api) => {\n    patchCustomElements(global, api);\n  });\n\n  Zone.__load_patch('XHR', (global, Zone) => {\n    // Treat XMLHttpRequest as a macrotask.\n    patchXHR(global);\n    const XHR_TASK = zoneSymbol('xhrTask');\n    const XHR_SYNC = zoneSymbol('xhrSync');\n    const XHR_LISTENER = zoneSymbol('xhrListener');\n    const XHR_SCHEDULED = zoneSymbol('xhrScheduled');\n    const XHR_URL = zoneSymbol('xhrURL');\n    const XHR_ERROR_BEFORE_SCHEDULED = zoneSymbol('xhrErrorBeforeScheduled');\n\n    function patchXHR(window) {\n      const XMLHttpRequest = window['XMLHttpRequest'];\n\n      if (!XMLHttpRequest) {\n        // XMLHttpRequest is not available in service worker\n        return;\n      }\n\n      const XMLHttpRequestPrototype = XMLHttpRequest.prototype;\n\n      function findPendingTask(target) {\n        return target[XHR_TASK];\n      }\n\n      let oriAddListener = XMLHttpRequestPrototype[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n      let oriRemoveListener = XMLHttpRequestPrototype[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n\n      if (!oriAddListener) {\n        const XMLHttpRequestEventTarget = window['XMLHttpRequestEventTarget'];\n\n        if (XMLHttpRequestEventTarget) {\n          const XMLHttpRequestEventTargetPrototype = XMLHttpRequestEventTarget.prototype;\n          oriAddListener = XMLHttpRequestEventTargetPrototype[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n          oriRemoveListener = XMLHttpRequestEventTargetPrototype[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n        }\n      }\n\n      const READY_STATE_CHANGE = 'readystatechange';\n      const SCHEDULED = 'scheduled';\n\n      function scheduleTask(task) {\n        const data = task.data;\n        const target = data.target;\n        target[XHR_SCHEDULED] = false;\n        target[XHR_ERROR_BEFORE_SCHEDULED] = false; // remove existing event listener\n\n        const listener = target[XHR_LISTENER];\n\n        if (!oriAddListener) {\n          oriAddListener = target[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n          oriRemoveListener = target[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n        }\n\n        if (listener) {\n          oriRemoveListener.call(target, READY_STATE_CHANGE, listener);\n        }\n\n        const newListener = target[XHR_LISTENER] = () => {\n          if (target.readyState === target.DONE) {\n            // sometimes on some browsers XMLHttpRequest will fire onreadystatechange with\n            // readyState=4 multiple times, so we need to check task state here\n            if (!data.aborted && target[XHR_SCHEDULED] && task.state === SCHEDULED) {\n              // check whether the xhr has registered onload listener\n              // if that is the case, the task should invoke after all\n              // onload listeners finish.\n              const loadTasks = target[Zone.__symbol__('loadfalse')];\n\n              if (loadTasks && loadTasks.length > 0) {\n                const oriInvoke = task.invoke;\n\n                task.invoke = function () {\n                  // need to load the tasks again, because in other\n                  // load listener, they may remove themselves\n                  const loadTasks = target[Zone.__symbol__('loadfalse')];\n\n                  for (let i = 0; i < loadTasks.length; i++) {\n                    if (loadTasks[i] === task) {\n                      loadTasks.splice(i, 1);\n                    }\n                  }\n\n                  if (!data.aborted && task.state === SCHEDULED) {\n                    oriInvoke.call(task);\n                  }\n                };\n\n                loadTasks.push(task);\n              } else {\n                task.invoke();\n              }\n            } else if (!data.aborted && target[XHR_SCHEDULED] === false) {\n              // error occurs when xhr.send()\n              target[XHR_ERROR_BEFORE_SCHEDULED] = true;\n            }\n          }\n        };\n\n        oriAddListener.call(target, READY_STATE_CHANGE, newListener);\n        const storedTask = target[XHR_TASK];\n\n        if (!storedTask) {\n          target[XHR_TASK] = task;\n        }\n\n        sendNative.apply(target, data.args);\n        target[XHR_SCHEDULED] = true;\n        return task;\n      }\n\n      function placeholderCallback() {}\n\n      function clearTask(task) {\n        const data = task.data; // Note - ideally, we would call data.target.removeEventListener here, but it's too late\n        // to prevent it from firing. So instead, we store info for the event listener.\n\n        data.aborted = true;\n        return abortNative.apply(data.target, data.args);\n      }\n\n      const openNative = patchMethod(XMLHttpRequestPrototype, 'open', () => function (self, args) {\n        self[XHR_SYNC] = args[2] == false;\n        self[XHR_URL] = args[1];\n        return openNative.apply(self, args);\n      });\n      const XMLHTTPREQUEST_SOURCE = 'XMLHttpRequest.send';\n      const fetchTaskAborting = zoneSymbol('fetchTaskAborting');\n      const fetchTaskScheduling = zoneSymbol('fetchTaskScheduling');\n      const sendNative = patchMethod(XMLHttpRequestPrototype, 'send', () => function (self, args) {\n        if (Zone.current[fetchTaskScheduling] === true) {\n          // a fetch is scheduling, so we are using xhr to polyfill fetch\n          // and because we already schedule macroTask for fetch, we should\n          // not schedule a macroTask for xhr again\n          return sendNative.apply(self, args);\n        }\n\n        if (self[XHR_SYNC]) {\n          // if the XHR is sync there is no task to schedule, just execute the code.\n          return sendNative.apply(self, args);\n        } else {\n          const options = {\n            target: self,\n            url: self[XHR_URL],\n            isPeriodic: false,\n            args: args,\n            aborted: false\n          };\n          const task = scheduleMacroTaskWithCurrentZone(XMLHTTPREQUEST_SOURCE, placeholderCallback, options, scheduleTask, clearTask);\n\n          if (self && self[XHR_ERROR_BEFORE_SCHEDULED] === true && !options.aborted && task.state === SCHEDULED) {\n            // xhr request throw error when send\n            // we should invoke task instead of leaving a scheduled\n            // pending macroTask\n            task.invoke();\n          }\n        }\n      });\n      const abortNative = patchMethod(XMLHttpRequestPrototype, 'abort', () => function (self, args) {\n        const task = findPendingTask(self);\n\n        if (task && typeof task.type == 'string') {\n          // If the XHR has already completed, do nothing.\n          // If the XHR has already been aborted, do nothing.\n          // Fix #569, call abort multiple times before done will cause\n          // macroTask task count be negative number\n          if (task.cancelFn == null || task.data && task.data.aborted) {\n            return;\n          }\n\n          task.zone.cancelTask(task);\n        } else if (Zone.current[fetchTaskAborting] === true) {\n          // the abort is called from fetch polyfill, we need to call native abort of XHR.\n          return abortNative.apply(self, args);\n        } // Otherwise, we are trying to abort an XHR which has not yet been sent, so there is no\n        // task\n        // to cancel. Do nothing.\n\n      });\n    }\n  });\n\n  Zone.__load_patch('geolocation', global => {\n    /// GEO_LOCATION\n    if (global['navigator'] && global['navigator'].geolocation) {\n      patchPrototype(global['navigator'].geolocation, ['getCurrentPosition', 'watchPosition']);\n    }\n  });\n\n  Zone.__load_patch('PromiseRejectionEvent', (global, Zone) => {\n    // handle unhandled promise rejection\n    function findPromiseRejectionHandler(evtName) {\n      return function (e) {\n        const eventTasks = findEventTasks(global, evtName);\n        eventTasks.forEach(eventTask => {\n          // windows has added unhandledrejection event listener\n          // trigger the event listener\n          const PromiseRejectionEvent = global['PromiseRejectionEvent'];\n\n          if (PromiseRejectionEvent) {\n            const evt = new PromiseRejectionEvent(evtName, {\n              promise: e.promise,\n              reason: e.rejection\n            });\n            eventTask.invoke(evt);\n          }\n        });\n      };\n    }\n\n    if (global['PromiseRejectionEvent']) {\n      Zone[zoneSymbol('unhandledPromiseRejectionHandler')] = findPromiseRejectionHandler('unhandledrejection');\n      Zone[zoneSymbol('rejectionHandledHandler')] = findPromiseRejectionHandler('rejectionhandled');\n    }\n  });\n});","map":{"version":3,"sources":["/home/r1701/Downloads/i18n/node_modules/zone.js/dist/zone-evergreen.js"],"names":["factory","define","amd","Zone$1","global","performance","mark","name","performanceMeasure","label","symbolPrefix","__symbol__","checkDuplicate","Error","Zone","constructor","parent","zoneSpec","_parent","_name","_properties","properties","_zoneDelegate","ZoneDelegate","assertZonePatched","patches","root","zone","current","_currentZoneFrame","currentTask","_currentTask","__load_patch","fn","hasOwnProperty","perfName","_api","get","key","getZoneWith","fork","wrap","callback","source","_callback","intercept","runGuarded","arguments","run","applyThis","applyArgs","invoke","error","handleError","runTask","task","NO_ZONE","state","notScheduled","type","eventTask","macroTask","reEntryGuard","running","_transitionTo","scheduled","runCount","previousTask","data","isPeriodic","cancelFn","undefined","invokeTask","unknown","_updateTaskCount","scheduleTask","newZone","scheduling","zoneDelegates","_zoneDelegates","_zone","err","scheduleMicroTask","customSchedule","ZoneTask","microTask","scheduleMacroTask","customCancel","scheduleEventTask","cancelTask","canceling","count","i","length","DELEGATE_ZS","onHasTask","delegate","_","target","hasTaskState","hasTask","onScheduleTask","onInvokeTask","onCancelTask","parentDelegate","_taskCounts","_parentDelegate","_forkZS","onFork","_forkDlgt","_forkCurrZone","_interceptZS","onIntercept","_interceptDlgt","_interceptCurrZone","_invokeZS","onInvoke","_invokeDlgt","_invokeCurrZone","_handleErrorZS","onHandleError","_handleErrorDlgt","_handleErrorCurrZone","_scheduleTaskZS","_scheduleTaskDlgt","_scheduleTaskCurrZone","_invokeTaskZS","_invokeTaskDlgt","_invokeTaskCurrZone","_cancelTaskZS","_cancelTaskDlgt","_cancelTaskCurrZone","_hasTaskZS","_hasTaskDlgt","_hasTaskDlgtOwner","_hasTaskCurrZone","zoneSpecHasTask","parentHasTask","targetZone","apply","returnTask","push","scheduleFn","value","isEmpty","counts","prev","next","change","options","_state","self","useG","call","args","_numberOfNestedTaskFrames","drainMicroTaskQueue","cancelScheduleRequest","toState","fromState1","fromState2","toString","handleId","Object","prototype","toJSON","symbolSetTimeout","symbolPromise","symbolThen","_microTaskQueue","_isDrainingMicrotaskQueue","nativeMicroTaskQueuePromise","resolve","nativeThen","queue","onUnhandledError","microtaskDrainDone","symbol","currentZoneFrame","noop","showUncaughtError","patchEventTarget","patchOnProperties","patchMethod","bindArguments","patchThen","patchMacroTask","setNativePromise","NativePromise","patchEventPrototype","isIEOrEdge","getGlobalObjects","ObjectDefineProperty","ObjectGetOwnPropertyDescriptor","ObjectCreate","ArraySlice","patchClass","wrapWithCurrentZone","filterProperties","attachOriginToPatched","_redefineProperty","patchCallbacks","window","api","getOwnPropertyDescriptor","defineProperty","readableObjectToString","obj","className","JSON","stringify","_uncaughtPromiseErrors","isDisableWrappingUncaughtPromiseRejection","creationTrace","e","rejection","console","message","stack","uncaughtPromiseError","shift","handleUnhandledRejection","UNHANDLED_PROMISE_REJECTION_HANDLER_SYMBOL","handler","isThenable","then","forwardResolution","forwardRejection","ZoneAwarePromise","reject","symbolState","symbolValue","symbolFinally","symbolParentPromiseValue","symbolParentPromiseState","UNRESOLVED","RESOLVED","REJECTED","REJECTED_NO_CATCH","makeResolver","promise","v","resolvePromise","once","wasCalled","wrapper","wrappedFunction","TYPE_ERROR","CURRENT_TASK_TRACE_SYMBOL","onceWrapper","TypeError","clearRejectedNoCatch","trace","configurable","enumerable","writable","scheduleResolveOrReject","REJECTION_HANDLED_HANDLER","splice","chainPromise","onFulfilled","onRejected","promiseState","parentPromiseValue","isFinallyPromise","ZONE_AWARE_PROMISE_TO_STRING","race","values","res","rej","onResolve","onReject","all","allWithCallback","allSettled","P","thenCallback","status","errorCallback","reason","unresolvedCount","valueIndex","resolvedValues","curValueIndex","thenErr","executor","Symbol","toStringTag","species","C","catch","finally","onFinally","ZONE_AWARE_PROMISE","desc","set","NewNativePromise","symbolThenPatched","Ctor","proto","prop","originalThen","wrapped","zoneify","resultPromise","ctor","fetch","Promise","ObjectGetPrototypeOf","getPrototypeOf","create","Array","slice","ADD_EVENT_LISTENER_STR","REMOVE_EVENT_LISTENER_STR","ZONE_SYMBOL_ADD_EVENT_LISTENER","ZONE_SYMBOL_REMOVE_EVENT_LISTENER","TRUE_STR","FALSE_STR","ZONE_SYMBOL_PREFIX","scheduleMacroTaskWithCurrentZone","zoneSymbol","isWindowExists","internalWindow","_global","REMOVE_ATTRIBUTE","NULL_ON_PROP_VALUE","patchPrototype","fnNames","prototypeDesc","isPropertyWritable","patched","propertyDesc","isWebWorker","WorkerGlobalScope","isNode","process","isBrowser","isMix","zoneSymbolEventNames","wrapFn","event","eventNameSymbol","listener","result","errorEvent","filename","lineno","colno","preventDefault","patchProperty","onPropPatchedSymbol","originalDescGet","originalDescSet","eventName","substr","newValue","previousValue","removeEventListener","addEventListener","removeAttribute","onProperties","j","originalInstanceKey","OriginalClass","a","instance","copySymbolProperties","src","dest","getOwnPropertySymbols","symbols","forEach","shouldCopySymbolProperties","patchFn","delegateName","patchDelegate","funcName","metaCreator","setNative","cbIdx","meta","original","isDetectedIEOrEdge","ieOrEdge","isIE","ua","navigator","userAgent","indexOf","originalFunctionToString","Function","ORIGINAL_DELEGATE_SYMBOL","PROMISE_SYMBOL","ERROR_SYMBOL","newFunctionToString","originalDelegate","nativePromise","nativeError","originalObjectToString","PROMISE_OBJECT_TO_STRING","passiveSupported","OPTIMIZED_ZONE_EVENT_TASK_DATA","zoneSymbolEventNames$1","globalSources","EVENT_NAME_SYMBOL_REGX","RegExp","IMMEDIATE_PROPAGATION_SYMBOL","prepareEventNames","eventNameToString","falseEventName","trueEventName","symbolCapture","apis","patchOptions","ADD_EVENT_LISTENER","add","REMOVE_EVENT_LISTENER","rm","LISTENERS_EVENT_LISTENER","listeners","REMOVE_ALL_LISTENERS_EVENT_LISTENER","rmAll","zoneSymbolAddEventListener","ADD_EVENT_LISTENER_SOURCE","PREPEND_EVENT_LISTENER","PREPEND_EVENT_LISTENER_SOURCE","isRemoved","handleEvent","globalZoneAwareCallback","tasks","copyTasks","globalZoneAwareCaptureCallback","patchEventTargetMethods","useGlobalCallback","validateHandler","vh","chkDup","returnTarget","rt","taskData","nativeAddEventListener","nativeRemoveEventListener","nativeListeners","nativeRemoveAllListeners","nativePrependEventListener","prepend","buildEventListenerOptions","passive","capture","assign","customScheduleGlobal","isExisting","customCancelGlobal","symbolEventNames","symbolEventName","existingTasks","existingTask","allRemoved","customScheduleNonGlobal","customSchedulePrepend","customCancelNonGlobal","compareTaskCallbackVsDelegate","typeOfDelegate","compare","diff","blackListedEvents","passiveEvents","makeAddListener","nativeListener","addSource","customScheduleFn","customCancelFn","transferEventName","isHandleEvent","constructorName","targetSource","unshift","onPropertySymbol","findEventTasks","keys","match","exec","evtName","symbolCaptureEventName","captureTasks","removeTasks","results","foundTasks","captureFalseTasks","captureTrueTasks","concat","Event","targetName","method","callbacks","nativeDelegate","opts","descriptor","globalEventHandlersEventNames","documentEventNames","windowEventNames","htmlElementEventNames","mediaElementEventNames","ieElementEventNames","webglEventNames","formEventNames","detailEventNames","frameEventNames","frameSetEventNames","marqueeEventNames","XMLHttpRequestEventNames","IDBIndexEventNames","websocketEventNames","workerEventNames","eventNames","ignoreProperties","tip","filter","ip","targetIgnoreProperties","op","patchFilteredProperties","filteredProperties","propertyDescriptorPatch","supportsWebSocket","WebSocket","ignoreErrorProperties","Document","Element","HTMLElement","HTMLMediaElement","HTMLFrameSetElement","HTMLBodyElement","HTMLFrameElement","HTMLIFrameElement","HTMLMarqueeElement","Worker","XMLHttpRequest","XMLHttpRequestEventTarget","IDBIndex","IDBRequest","IDBOpenDBRequest","IDBDatabase","IDBTransaction","IDBCursor","SYMBOL_BLACK_LISTED_EVENTS","SYMBOL_UNPATCHED_EVENTS","taskSymbol","patchTimer","setName","cancelName","nameSuffix","clearNative","tasksByHandleId","timer","clearTask","delay","handle","ref","unref","bind","id","patchCustomElements","customElements","eventTargetPatch","EVENT_TARGET","patchEvent","legacyPatch","clear","blockingMethods","s","patchXHR","XHR_TASK","XHR_SYNC","XHR_LISTENER","XHR_SCHEDULED","XHR_URL","XHR_ERROR_BEFORE_SCHEDULED","XMLHttpRequestPrototype","findPendingTask","oriAddListener","oriRemoveListener","XMLHttpRequestEventTargetPrototype","READY_STATE_CHANGE","SCHEDULED","newListener","readyState","DONE","aborted","loadTasks","oriInvoke","storedTask","sendNative","placeholderCallback","abortNative","openNative","XMLHTTPREQUEST_SOURCE","fetchTaskAborting","fetchTaskScheduling","url","geolocation","findPromiseRejectionHandler","eventTasks","PromiseRejectionEvent","evt"],"mappings":"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","sourcesContent":["/**\n* @license Angular v9.1.0-next.4+61.sha-e552591.with-local-changes\n* (c) 2010-2020 Google LLC. https://angular.io/\n* License: MIT\n*/\n(function (factory) {\n    typeof define === 'function' && define.amd ? define(factory) :\n    factory();\n}((function () { 'use strict';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    const Zone$1 = (function (global) {\n        const performance = global['performance'];\n        function mark(name) { performance && performance['mark'] && performance['mark'](name); }\n        function performanceMeasure(name, label) {\n            performance && performance['measure'] && performance['measure'](name, label);\n        }\n        mark('Zone');\n        // Initialize before it's accessed below.\n        // __Zone_symbol_prefix global can be used to override the default zone\n        // symbol prefix with a custom one if needed.\n        const symbolPrefix = global['__Zone_symbol_prefix'] || '__zone_symbol__';\n        function __symbol__(name) { return symbolPrefix + name; }\n        const checkDuplicate = global[__symbol__('forceDuplicateZoneCheck')] === true;\n        if (global['Zone']) {\n            // if global['Zone'] already exists (maybe zone.js was already loaded or\n            // some other lib also registered a global object named Zone), we may need\n            // to throw an error, but sometimes user may not want this error.\n            // For example,\n            // we have two web pages, page1 includes zone.js, page2 doesn't.\n            // and the 1st time user load page1 and page2, everything work fine,\n            // but when user load page2 again, error occurs because global['Zone'] already exists.\n            // so we add a flag to let user choose whether to throw this error or not.\n            // By default, if existing Zone is from zone.js, we will not throw the error.\n            if (checkDuplicate || typeof global['Zone'].__symbol__ !== 'function') {\n                throw new Error('Zone already loaded.');\n            }\n            else {\n                return global['Zone'];\n            }\n        }\n        class Zone {\n            constructor(parent, zoneSpec) {\n                this._parent = parent;\n                this._name = zoneSpec ? zoneSpec.name || 'unnamed' : '<root>';\n                this._properties = zoneSpec && zoneSpec.properties || {};\n                this._zoneDelegate =\n                    new ZoneDelegate(this, this._parent && this._parent._zoneDelegate, zoneSpec);\n            }\n            static assertZonePatched() {\n                if (global['Promise'] !== patches['ZoneAwarePromise']) {\n                    throw new Error('Zone.js has detected that ZoneAwarePromise `(window|global).Promise` ' +\n                        'has been overwritten.\\n' +\n                        'Most likely cause is that a Promise polyfill has been loaded ' +\n                        'after Zone.js (Polyfilling Promise api is not necessary when zone.js is loaded. ' +\n                        'If you must load one, do so before loading zone.js.)');\n                }\n            }\n            static get root() {\n                let zone = Zone.current;\n                while (zone.parent) {\n                    zone = zone.parent;\n                }\n                return zone;\n            }\n            static get current() { return _currentZoneFrame.zone; }\n            static get currentTask() { return _currentTask; }\n            // tslint:disable-next-line:require-internal-with-underscore\n            static __load_patch(name, fn) {\n                if (patches.hasOwnProperty(name)) {\n                    if (checkDuplicate) {\n                        throw Error('Already loaded patch: ' + name);\n                    }\n                }\n                else if (!global['__Zone_disable_' + name]) {\n                    const perfName = 'Zone:' + name;\n                    mark(perfName);\n                    patches[name] = fn(global, Zone, _api);\n                    performanceMeasure(perfName, perfName);\n                }\n            }\n            get parent() { return this._parent; }\n            get name() { return this._name; }\n            get(key) {\n                const zone = this.getZoneWith(key);\n                if (zone)\n                    return zone._properties[key];\n            }\n            getZoneWith(key) {\n                let current = this;\n                while (current) {\n                    if (current._properties.hasOwnProperty(key)) {\n                        return current;\n                    }\n                    current = current._parent;\n                }\n                return null;\n            }\n            fork(zoneSpec) {\n                if (!zoneSpec)\n                    throw new Error('ZoneSpec required!');\n                return this._zoneDelegate.fork(this, zoneSpec);\n            }\n            wrap(callback, source) {\n                if (typeof callback !== 'function') {\n                    throw new Error('Expecting function got: ' + callback);\n                }\n                const _callback = this._zoneDelegate.intercept(this, callback, source);\n                const zone = this;\n                return function () {\n                    return zone.runGuarded(_callback, this, arguments, source);\n                };\n            }\n            run(callback, applyThis, applyArgs, source) {\n                _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n                try {\n                    return this._zoneDelegate.invoke(this, callback, applyThis, applyArgs, source);\n                }\n                finally {\n                    _currentZoneFrame = _currentZoneFrame.parent;\n                }\n            }\n            runGuarded(callback, applyThis = null, applyArgs, source) {\n                _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n                try {\n                    try {\n                        return this._zoneDelegate.invoke(this, callback, applyThis, applyArgs, source);\n                    }\n                    catch (error) {\n                        if (this._zoneDelegate.handleError(this, error)) {\n                            throw error;\n                        }\n                    }\n                }\n                finally {\n                    _currentZoneFrame = _currentZoneFrame.parent;\n                }\n            }\n            runTask(task, applyThis, applyArgs) {\n                if (task.zone != this) {\n                    throw new Error('A task can only be run in the zone of creation! (Creation: ' +\n                        (task.zone || NO_ZONE).name + '; Execution: ' + this.name + ')');\n                }\n                // https://github.com/angular/zone.js/issues/778, sometimes eventTask\n                // will run in notScheduled(canceled) state, we should not try to\n                // run such kind of task but just return\n                if (task.state === notScheduled && (task.type === eventTask || task.type === macroTask)) {\n                    return;\n                }\n                const reEntryGuard = task.state != running;\n                reEntryGuard && task._transitionTo(running, scheduled);\n                task.runCount++;\n                const previousTask = _currentTask;\n                _currentTask = task;\n                _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n                try {\n                    if (task.type == macroTask && task.data && !task.data.isPeriodic) {\n                        task.cancelFn = undefined;\n                    }\n                    try {\n                        return this._zoneDelegate.invokeTask(this, task, applyThis, applyArgs);\n                    }\n                    catch (error) {\n                        if (this._zoneDelegate.handleError(this, error)) {\n                            throw error;\n                        }\n                    }\n                }\n                finally {\n                    // if the task's state is notScheduled or unknown, then it has already been cancelled\n                    // we should not reset the state to scheduled\n                    if (task.state !== notScheduled && task.state !== unknown) {\n                        if (task.type == eventTask || (task.data && task.data.isPeriodic)) {\n                            reEntryGuard && task._transitionTo(scheduled, running);\n                        }\n                        else {\n                            task.runCount = 0;\n                            this._updateTaskCount(task, -1);\n                            reEntryGuard &&\n                                task._transitionTo(notScheduled, running, notScheduled);\n                        }\n                    }\n                    _currentZoneFrame = _currentZoneFrame.parent;\n                    _currentTask = previousTask;\n                }\n            }\n            scheduleTask(task) {\n                if (task.zone && task.zone !== this) {\n                    // check if the task was rescheduled, the newZone\n                    // should not be the children of the original zone\n                    let newZone = this;\n                    while (newZone) {\n                        if (newZone === task.zone) {\n                            throw Error(`can not reschedule task to ${this.name} which is descendants of the original zone ${task.zone.name}`);\n                        }\n                        newZone = newZone.parent;\n                    }\n                }\n                task._transitionTo(scheduling, notScheduled);\n                const zoneDelegates = [];\n                task._zoneDelegates = zoneDelegates;\n                task._zone = this;\n                try {\n                    task = this._zoneDelegate.scheduleTask(this, task);\n                }\n                catch (err) {\n                    // should set task's state to unknown when scheduleTask throw error\n                    // because the err may from reschedule, so the fromState maybe notScheduled\n                    task._transitionTo(unknown, scheduling, notScheduled);\n                    // TODO: @JiaLiPassion, should we check the result from handleError?\n                    this._zoneDelegate.handleError(this, err);\n                    throw err;\n                }\n                if (task._zoneDelegates === zoneDelegates) {\n                    // we have to check because internally the delegate can reschedule the task.\n                    this._updateTaskCount(task, 1);\n                }\n                if (task.state == scheduling) {\n                    task._transitionTo(scheduled, scheduling);\n                }\n                return task;\n            }\n            scheduleMicroTask(source, callback, data, customSchedule) {\n                return this.scheduleTask(new ZoneTask(microTask, source, callback, data, customSchedule, undefined));\n            }\n            scheduleMacroTask(source, callback, data, customSchedule, customCancel) {\n                return this.scheduleTask(new ZoneTask(macroTask, source, callback, data, customSchedule, customCancel));\n            }\n            scheduleEventTask(source, callback, data, customSchedule, customCancel) {\n                return this.scheduleTask(new ZoneTask(eventTask, source, callback, data, customSchedule, customCancel));\n            }\n            cancelTask(task) {\n                if (task.zone != this)\n                    throw new Error('A task can only be cancelled in the zone of creation! (Creation: ' +\n                        (task.zone || NO_ZONE).name + '; Execution: ' + this.name + ')');\n                task._transitionTo(canceling, scheduled, running);\n                try {\n                    this._zoneDelegate.cancelTask(this, task);\n                }\n                catch (err) {\n                    // if error occurs when cancelTask, transit the state to unknown\n                    task._transitionTo(unknown, canceling);\n                    this._zoneDelegate.handleError(this, err);\n                    throw err;\n                }\n                this._updateTaskCount(task, -1);\n                task._transitionTo(notScheduled, canceling);\n                task.runCount = 0;\n                return task;\n            }\n            _updateTaskCount(task, count) {\n                const zoneDelegates = task._zoneDelegates;\n                if (count == -1) {\n                    task._zoneDelegates = null;\n                }\n                for (let i = 0; i < zoneDelegates.length; i++) {\n                    zoneDelegates[i]._updateTaskCount(task.type, count);\n                }\n            }\n        }\n        // tslint:disable-next-line:require-internal-with-underscore\n        Zone.__symbol__ = __symbol__;\n        const DELEGATE_ZS = {\n            name: '',\n            onHasTask: (delegate, _, target, hasTaskState) => delegate.hasTask(target, hasTaskState),\n            onScheduleTask: (delegate, _, target, task) => delegate.scheduleTask(target, task),\n            onInvokeTask: (delegate, _, target, task, applyThis, applyArgs) => delegate.invokeTask(target, task, applyThis, applyArgs),\n            onCancelTask: (delegate, _, target, task) => delegate.cancelTask(target, task)\n        };\n        class ZoneDelegate {\n            constructor(zone, parentDelegate, zoneSpec) {\n                this._taskCounts = { 'microTask': 0, 'macroTask': 0, 'eventTask': 0 };\n                this.zone = zone;\n                this._parentDelegate = parentDelegate;\n                this._forkZS =\n                    zoneSpec && (zoneSpec && zoneSpec.onFork ? zoneSpec : parentDelegate._forkZS);\n                this._forkDlgt = zoneSpec && (zoneSpec.onFork ? parentDelegate : parentDelegate._forkDlgt);\n                this._forkCurrZone =\n                    zoneSpec && (zoneSpec.onFork ? this.zone : parentDelegate._forkCurrZone);\n                this._interceptZS =\n                    zoneSpec && (zoneSpec.onIntercept ? zoneSpec : parentDelegate._interceptZS);\n                this._interceptDlgt =\n                    zoneSpec && (zoneSpec.onIntercept ? parentDelegate : parentDelegate._interceptDlgt);\n                this._interceptCurrZone =\n                    zoneSpec && (zoneSpec.onIntercept ? this.zone : parentDelegate._interceptCurrZone);\n                this._invokeZS = zoneSpec && (zoneSpec.onInvoke ? zoneSpec : parentDelegate._invokeZS);\n                this._invokeDlgt =\n                    zoneSpec && (zoneSpec.onInvoke ? parentDelegate : parentDelegate._invokeDlgt);\n                this._invokeCurrZone =\n                    zoneSpec && (zoneSpec.onInvoke ? this.zone : parentDelegate._invokeCurrZone);\n                this._handleErrorZS =\n                    zoneSpec && (zoneSpec.onHandleError ? zoneSpec : parentDelegate._handleErrorZS);\n                this._handleErrorDlgt = zoneSpec &&\n                    (zoneSpec.onHandleError ? parentDelegate : parentDelegate._handleErrorDlgt);\n                this._handleErrorCurrZone =\n                    zoneSpec && (zoneSpec.onHandleError ? this.zone : parentDelegate._handleErrorCurrZone);\n                this._scheduleTaskZS =\n                    zoneSpec && (zoneSpec.onScheduleTask ? zoneSpec : parentDelegate._scheduleTaskZS);\n                this._scheduleTaskDlgt = zoneSpec &&\n                    (zoneSpec.onScheduleTask ? parentDelegate : parentDelegate._scheduleTaskDlgt);\n                this._scheduleTaskCurrZone = zoneSpec &&\n                    (zoneSpec.onScheduleTask ? this.zone : parentDelegate._scheduleTaskCurrZone);\n                this._invokeTaskZS =\n                    zoneSpec && (zoneSpec.onInvokeTask ? zoneSpec : parentDelegate._invokeTaskZS);\n                this._invokeTaskDlgt =\n                    zoneSpec && (zoneSpec.onInvokeTask ? parentDelegate : parentDelegate._invokeTaskDlgt);\n                this._invokeTaskCurrZone =\n                    zoneSpec && (zoneSpec.onInvokeTask ? this.zone : parentDelegate._invokeTaskCurrZone);\n                this._cancelTaskZS =\n                    zoneSpec && (zoneSpec.onCancelTask ? zoneSpec : parentDelegate._cancelTaskZS);\n                this._cancelTaskDlgt =\n                    zoneSpec && (zoneSpec.onCancelTask ? parentDelegate : parentDelegate._cancelTaskDlgt);\n                this._cancelTaskCurrZone =\n                    zoneSpec && (zoneSpec.onCancelTask ? this.zone : parentDelegate._cancelTaskCurrZone);\n                this._hasTaskZS = null;\n                this._hasTaskDlgt = null;\n                this._hasTaskDlgtOwner = null;\n                this._hasTaskCurrZone = null;\n                const zoneSpecHasTask = zoneSpec && zoneSpec.onHasTask;\n                const parentHasTask = parentDelegate && parentDelegate._hasTaskZS;\n                if (zoneSpecHasTask || parentHasTask) {\n                    // If we need to report hasTask, than this ZS needs to do ref counting on tasks. In such\n                    // a case all task related interceptors must go through this ZD. We can't short circuit it.\n                    this._hasTaskZS = zoneSpecHasTask ? zoneSpec : DELEGATE_ZS;\n                    this._hasTaskDlgt = parentDelegate;\n                    this._hasTaskDlgtOwner = this;\n                    this._hasTaskCurrZone = zone;\n                    if (!zoneSpec.onScheduleTask) {\n                        this._scheduleTaskZS = DELEGATE_ZS;\n                        this._scheduleTaskDlgt = parentDelegate;\n                        this._scheduleTaskCurrZone = this.zone;\n                    }\n                    if (!zoneSpec.onInvokeTask) {\n                        this._invokeTaskZS = DELEGATE_ZS;\n                        this._invokeTaskDlgt = parentDelegate;\n                        this._invokeTaskCurrZone = this.zone;\n                    }\n                    if (!zoneSpec.onCancelTask) {\n                        this._cancelTaskZS = DELEGATE_ZS;\n                        this._cancelTaskDlgt = parentDelegate;\n                        this._cancelTaskCurrZone = this.zone;\n                    }\n                }\n            }\n            fork(targetZone, zoneSpec) {\n                return this._forkZS ?\n                    this._forkZS.onFork(this._forkDlgt, this.zone, targetZone, zoneSpec) :\n                    new Zone(targetZone, zoneSpec);\n            }\n            intercept(targetZone, callback, source) {\n                return this._interceptZS ?\n                    this._interceptZS.onIntercept(this._interceptDlgt, this._interceptCurrZone, targetZone, callback, source) :\n                    callback;\n            }\n            invoke(targetZone, callback, applyThis, applyArgs, source) {\n                return this._invokeZS ?\n                    this._invokeZS.onInvoke(this._invokeDlgt, this._invokeCurrZone, targetZone, callback, applyThis, applyArgs, source) :\n                    callback.apply(applyThis, applyArgs);\n            }\n            handleError(targetZone, error) {\n                return this._handleErrorZS ?\n                    this._handleErrorZS.onHandleError(this._handleErrorDlgt, this._handleErrorCurrZone, targetZone, error) :\n                    true;\n            }\n            scheduleTask(targetZone, task) {\n                let returnTask = task;\n                if (this._scheduleTaskZS) {\n                    if (this._hasTaskZS) {\n                        returnTask._zoneDelegates.push(this._hasTaskDlgtOwner);\n                    }\n                    // clang-format off\n                    returnTask = this._scheduleTaskZS.onScheduleTask(this._scheduleTaskDlgt, this._scheduleTaskCurrZone, targetZone, task);\n                    // clang-format on\n                    if (!returnTask)\n                        returnTask = task;\n                }\n                else {\n                    if (task.scheduleFn) {\n                        task.scheduleFn(task);\n                    }\n                    else if (task.type == microTask) {\n                        scheduleMicroTask(task);\n                    }\n                    else {\n                        throw new Error('Task is missing scheduleFn.');\n                    }\n                }\n                return returnTask;\n            }\n            invokeTask(targetZone, task, applyThis, applyArgs) {\n                return this._invokeTaskZS ?\n                    this._invokeTaskZS.onInvokeTask(this._invokeTaskDlgt, this._invokeTaskCurrZone, targetZone, task, applyThis, applyArgs) :\n                    task.callback.apply(applyThis, applyArgs);\n            }\n            cancelTask(targetZone, task) {\n                let value;\n                if (this._cancelTaskZS) {\n                    value = this._cancelTaskZS.onCancelTask(this._cancelTaskDlgt, this._cancelTaskCurrZone, targetZone, task);\n                }\n                else {\n                    if (!task.cancelFn) {\n                        throw Error('Task is not cancelable');\n                    }\n                    value = task.cancelFn(task);\n                }\n                return value;\n            }\n            hasTask(targetZone, isEmpty) {\n                // hasTask should not throw error so other ZoneDelegate\n                // can still trigger hasTask callback\n                try {\n                    this._hasTaskZS &&\n                        this._hasTaskZS.onHasTask(this._hasTaskDlgt, this._hasTaskCurrZone, targetZone, isEmpty);\n                }\n                catch (err) {\n                    this.handleError(targetZone, err);\n                }\n            }\n            // tslint:disable-next-line:require-internal-with-underscore\n            _updateTaskCount(type, count) {\n                const counts = this._taskCounts;\n                const prev = counts[type];\n                const next = counts[type] = prev + count;\n                if (next < 0) {\n                    throw new Error('More tasks executed then were scheduled.');\n                }\n                if (prev == 0 || next == 0) {\n                    const isEmpty = {\n                        microTask: counts['microTask'] > 0,\n                        macroTask: counts['macroTask'] > 0,\n                        eventTask: counts['eventTask'] > 0,\n                        change: type\n                    };\n                    this.hasTask(this.zone, isEmpty);\n                }\n            }\n        }\n        class ZoneTask {\n            constructor(type, source, callback, options, scheduleFn, cancelFn) {\n                // tslint:disable-next-line:require-internal-with-underscore\n                this._zone = null;\n                this.runCount = 0;\n                // tslint:disable-next-line:require-internal-with-underscore\n                this._zoneDelegates = null;\n                // tslint:disable-next-line:require-internal-with-underscore\n                this._state = 'notScheduled';\n                this.type = type;\n                this.source = source;\n                this.data = options;\n                this.scheduleFn = scheduleFn;\n                this.cancelFn = cancelFn;\n                if (!callback) {\n                    throw new Error('callback is not defined');\n                }\n                this.callback = callback;\n                const self = this;\n                // TODO: @JiaLiPassion options should have interface\n                if (type === eventTask && options && options.useG) {\n                    this.invoke = ZoneTask.invokeTask;\n                }\n                else {\n                    this.invoke = function () {\n                        return ZoneTask.invokeTask.call(global, self, this, arguments);\n                    };\n                }\n            }\n            static invokeTask(task, target, args) {\n                if (!task) {\n                    task = this;\n                }\n                _numberOfNestedTaskFrames++;\n                try {\n                    task.runCount++;\n                    return task.zone.runTask(task, target, args);\n                }\n                finally {\n                    if (_numberOfNestedTaskFrames == 1) {\n                        drainMicroTaskQueue();\n                    }\n                    _numberOfNestedTaskFrames--;\n                }\n            }\n            get zone() { return this._zone; }\n            get state() { return this._state; }\n            cancelScheduleRequest() { this._transitionTo(notScheduled, scheduling); }\n            // tslint:disable-next-line:require-internal-with-underscore\n            _transitionTo(toState, fromState1, fromState2) {\n                if (this._state === fromState1 || this._state === fromState2) {\n                    this._state = toState;\n                    if (toState == notScheduled) {\n                        this._zoneDelegates = null;\n                    }\n                }\n                else {\n                    throw new Error(`${this.type} '${this.source}': can not transition to '${toState}', expecting state '${fromState1}'${fromState2 ? ' or \\'' + fromState2 + '\\'' : ''}, was '${this._state}'.`);\n                }\n            }\n            toString() {\n                if (this.data && typeof this.data.handleId !== 'undefined') {\n                    return this.data.handleId.toString();\n                }\n                else {\n                    return Object.prototype.toString.call(this);\n                }\n            }\n            // add toJSON method to prevent cyclic error when\n            // call JSON.stringify(zoneTask)\n            toJSON() {\n                return {\n                    type: this.type,\n                    state: this.state,\n                    source: this.source,\n                    zone: this.zone.name,\n                    runCount: this.runCount\n                };\n            }\n        }\n        //////////////////////////////////////////////////////\n        //////////////////////////////////////////////////////\n        ///  MICROTASK QUEUE\n        //////////////////////////////////////////////////////\n        //////////////////////////////////////////////////////\n        const symbolSetTimeout = __symbol__('setTimeout');\n        const symbolPromise = __symbol__('Promise');\n        const symbolThen = __symbol__('then');\n        let _microTaskQueue = [];\n        let _isDrainingMicrotaskQueue = false;\n        let nativeMicroTaskQueuePromise;\n        function scheduleMicroTask(task) {\n            // if we are not running in any task, and there has not been anything scheduled\n            // we must bootstrap the initial task creation by manually scheduling the drain\n            if (_numberOfNestedTaskFrames === 0 && _microTaskQueue.length === 0) {\n                // We are not running in Task, so we need to kickstart the microtask queue.\n                if (!nativeMicroTaskQueuePromise) {\n                    if (global[symbolPromise]) {\n                        nativeMicroTaskQueuePromise = global[symbolPromise].resolve(0);\n                    }\n                }\n                if (nativeMicroTaskQueuePromise) {\n                    let nativeThen = nativeMicroTaskQueuePromise[symbolThen];\n                    if (!nativeThen) {\n                        // native Promise is not patchable, we need to use `then` directly\n                        // issue 1078\n                        nativeThen = nativeMicroTaskQueuePromise['then'];\n                    }\n                    nativeThen.call(nativeMicroTaskQueuePromise, drainMicroTaskQueue);\n                }\n                else {\n                    global[symbolSetTimeout](drainMicroTaskQueue, 0);\n                }\n            }\n            task && _microTaskQueue.push(task);\n        }\n        function drainMicroTaskQueue() {\n            if (!_isDrainingMicrotaskQueue) {\n                _isDrainingMicrotaskQueue = true;\n                while (_microTaskQueue.length) {\n                    const queue = _microTaskQueue;\n                    _microTaskQueue = [];\n                    for (let i = 0; i < queue.length; i++) {\n                        const task = queue[i];\n                        try {\n                            task.zone.runTask(task, null, null);\n                        }\n                        catch (error) {\n                            _api.onUnhandledError(error);\n                        }\n                    }\n                }\n                _api.microtaskDrainDone();\n                _isDrainingMicrotaskQueue = false;\n            }\n        }\n        //////////////////////////////////////////////////////\n        //////////////////////////////////////////////////////\n        ///  BOOTSTRAP\n        //////////////////////////////////////////////////////\n        //////////////////////////////////////////////////////\n        const NO_ZONE = { name: 'NO ZONE' };\n        const notScheduled = 'notScheduled', scheduling = 'scheduling', scheduled = 'scheduled', running = 'running', canceling = 'canceling', unknown = 'unknown';\n        const microTask = 'microTask', macroTask = 'macroTask', eventTask = 'eventTask';\n        const patches = {};\n        const _api = {\n            symbol: __symbol__,\n            currentZoneFrame: () => _currentZoneFrame,\n            onUnhandledError: noop,\n            microtaskDrainDone: noop,\n            scheduleMicroTask: scheduleMicroTask,\n            showUncaughtError: () => !Zone[__symbol__('ignoreConsoleErrorUncaughtError')],\n            patchEventTarget: () => [],\n            patchOnProperties: noop,\n            patchMethod: () => noop,\n            bindArguments: () => [],\n            patchThen: () => noop,\n            patchMacroTask: () => noop,\n            setNativePromise: (NativePromise) => {\n                // sometimes NativePromise.resolve static function\n                // is not ready yet, (such as core-js/es6.promise)\n                // so we need to check here.\n                if (NativePromise && typeof NativePromise.resolve === 'function') {\n                    nativeMicroTaskQueuePromise = NativePromise.resolve(0);\n                }\n            },\n            patchEventPrototype: () => noop,\n            isIEOrEdge: () => false,\n            getGlobalObjects: () => undefined,\n            ObjectDefineProperty: () => noop,\n            ObjectGetOwnPropertyDescriptor: () => undefined,\n            ObjectCreate: () => undefined,\n            ArraySlice: () => [],\n            patchClass: () => noop,\n            wrapWithCurrentZone: () => noop,\n            filterProperties: () => [],\n            attachOriginToPatched: () => noop,\n            _redefineProperty: () => noop,\n            patchCallbacks: () => noop\n        };\n        let _currentZoneFrame = { parent: null, zone: new Zone(null, null) };\n        let _currentTask = null;\n        let _numberOfNestedTaskFrames = 0;\n        function noop() { }\n        performanceMeasure('Zone', 'Zone');\n        return global['Zone'] = Zone;\n    })(typeof window !== 'undefined' && window || typeof self !== 'undefined' && self || global);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    Zone.__load_patch('ZoneAwarePromise', (global, Zone, api) => {\n        const ObjectGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n        const ObjectDefineProperty = Object.defineProperty;\n        function readableObjectToString(obj) {\n            if (obj && obj.toString === Object.prototype.toString) {\n                const className = obj.constructor && obj.constructor.name;\n                return (className ? className : '') + ': ' + JSON.stringify(obj);\n            }\n            return obj ? obj.toString() : Object.prototype.toString.call(obj);\n        }\n        const __symbol__ = api.symbol;\n        const _uncaughtPromiseErrors = [];\n        const isDisableWrappingUncaughtPromiseRejection = global[__symbol__('DISABLE_WRAPPING_UNCAUGHT_PROMISE_REJECTION')] === true;\n        const symbolPromise = __symbol__('Promise');\n        const symbolThen = __symbol__('then');\n        const creationTrace = '__creationTrace__';\n        api.onUnhandledError = (e) => {\n            if (api.showUncaughtError()) {\n                const rejection = e && e.rejection;\n                if (rejection) {\n                    console.error('Unhandled Promise rejection:', rejection instanceof Error ? rejection.message : rejection, '; Zone:', e.zone.name, '; Task:', e.task && e.task.source, '; Value:', rejection, rejection instanceof Error ? rejection.stack : undefined);\n                }\n                else {\n                    console.error(e);\n                }\n            }\n        };\n        api.microtaskDrainDone = () => {\n            while (_uncaughtPromiseErrors.length) {\n                const uncaughtPromiseError = _uncaughtPromiseErrors.shift();\n                try {\n                    uncaughtPromiseError.zone.runGuarded(() => { throw uncaughtPromiseError; });\n                }\n                catch (error) {\n                    handleUnhandledRejection(error);\n                }\n            }\n        };\n        const UNHANDLED_PROMISE_REJECTION_HANDLER_SYMBOL = __symbol__('unhandledPromiseRejectionHandler');\n        function handleUnhandledRejection(e) {\n            api.onUnhandledError(e);\n            try {\n                const handler = Zone[UNHANDLED_PROMISE_REJECTION_HANDLER_SYMBOL];\n                if (typeof handler === 'function') {\n                    handler.call(this, e);\n                }\n            }\n            catch (err) {\n            }\n        }\n        function isThenable(value) { return value && value.then; }\n        function forwardResolution(value) { return value; }\n        function forwardRejection(rejection) { return ZoneAwarePromise.reject(rejection); }\n        const symbolState = __symbol__('state');\n        const symbolValue = __symbol__('value');\n        const symbolFinally = __symbol__('finally');\n        const symbolParentPromiseValue = __symbol__('parentPromiseValue');\n        const symbolParentPromiseState = __symbol__('parentPromiseState');\n        const source = 'Promise.then';\n        const UNRESOLVED = null;\n        const RESOLVED = true;\n        const REJECTED = false;\n        const REJECTED_NO_CATCH = 0;\n        function makeResolver(promise, state) {\n            return (v) => {\n                try {\n                    resolvePromise(promise, state, v);\n                }\n                catch (err) {\n                    resolvePromise(promise, false, err);\n                }\n                // Do not return value or you will break the Promise spec.\n            };\n        }\n        const once = function () {\n            let wasCalled = false;\n            return function wrapper(wrappedFunction) {\n                return function () {\n                    if (wasCalled) {\n                        return;\n                    }\n                    wasCalled = true;\n                    wrappedFunction.apply(null, arguments);\n                };\n            };\n        };\n        const TYPE_ERROR = 'Promise resolved with itself';\n        const CURRENT_TASK_TRACE_SYMBOL = __symbol__('currentTaskTrace');\n        // Promise Resolution\n        function resolvePromise(promise, state, value) {\n            const onceWrapper = once();\n            if (promise === value) {\n                throw new TypeError(TYPE_ERROR);\n            }\n            if (promise[symbolState] === UNRESOLVED) {\n                // should only get value.then once based on promise spec.\n                let then = null;\n                try {\n                    if (typeof value === 'object' || typeof value === 'function') {\n                        then = value && value.then;\n                    }\n                }\n                catch (err) {\n                    onceWrapper(() => { resolvePromise(promise, false, err); })();\n                    return promise;\n                }\n                // if (value instanceof ZoneAwarePromise) {\n                if (state !== REJECTED && value instanceof ZoneAwarePromise &&\n                    value.hasOwnProperty(symbolState) && value.hasOwnProperty(symbolValue) &&\n                    value[symbolState] !== UNRESOLVED) {\n                    clearRejectedNoCatch(value);\n                    resolvePromise(promise, value[symbolState], value[symbolValue]);\n                }\n                else if (state !== REJECTED && typeof then === 'function') {\n                    try {\n                        then.call(value, onceWrapper(makeResolver(promise, state)), onceWrapper(makeResolver(promise, false)));\n                    }\n                    catch (err) {\n                        onceWrapper(() => { resolvePromise(promise, false, err); })();\n                    }\n                }\n                else {\n                    promise[symbolState] = state;\n                    const queue = promise[symbolValue];\n                    promise[symbolValue] = value;\n                    if (promise[symbolFinally] === symbolFinally) {\n                        // the promise is generated by Promise.prototype.finally\n                        if (state === RESOLVED) {\n                            // the state is resolved, should ignore the value\n                            // and use parent promise value\n                            promise[symbolState] = promise[symbolParentPromiseState];\n                            promise[symbolValue] = promise[symbolParentPromiseValue];\n                        }\n                    }\n                    // record task information in value when error occurs, so we can\n                    // do some additional work such as render longStackTrace\n                    if (state === REJECTED && value instanceof Error) {\n                        // check if longStackTraceZone is here\n                        const trace = Zone.currentTask && Zone.currentTask.data &&\n                            Zone.currentTask.data[creationTrace];\n                        if (trace) {\n                            // only keep the long stack trace into error when in longStackTraceZone\n                            ObjectDefineProperty(value, CURRENT_TASK_TRACE_SYMBOL, { configurable: true, enumerable: false, writable: true, value: trace });\n                        }\n                    }\n                    for (let i = 0; i < queue.length;) {\n                        scheduleResolveOrReject(promise, queue[i++], queue[i++], queue[i++], queue[i++]);\n                    }\n                    if (queue.length == 0 && state == REJECTED) {\n                        promise[symbolState] = REJECTED_NO_CATCH;\n                        let uncaughtPromiseError = value;\n                        if (!isDisableWrappingUncaughtPromiseRejection) {\n                            // If disable wrapping uncaught promise reject\n                            // and the rejected value is an Error object,\n                            // use the value instead of wrapping it.\n                            try {\n                                // Here we throws a new Error to print more readable error log\n                                // and if the value is not an error, zone.js builds an `Error`\n                                // Object here to attach the stack information.\n                                throw new Error('Uncaught (in promise): ' + readableObjectToString(value) +\n                                    (value && value.stack ? '\\n' + value.stack : ''));\n                            }\n                            catch (err) {\n                                uncaughtPromiseError = err;\n                            }\n                        }\n                        uncaughtPromiseError.rejection = value;\n                        uncaughtPromiseError.promise = promise;\n                        uncaughtPromiseError.zone = Zone.current;\n                        uncaughtPromiseError.task = Zone.currentTask;\n                        _uncaughtPromiseErrors.push(uncaughtPromiseError);\n                        api.scheduleMicroTask(); // to make sure that it is running\n                    }\n                }\n            }\n            // Resolving an already resolved promise is a noop.\n            return promise;\n        }\n        const REJECTION_HANDLED_HANDLER = __symbol__('rejectionHandledHandler');\n        function clearRejectedNoCatch(promise) {\n            if (promise[symbolState] === REJECTED_NO_CATCH) {\n                // if the promise is rejected no catch status\n                // and queue.length > 0, means there is a error handler\n                // here to handle the rejected promise, we should trigger\n                // windows.rejectionhandled eventHandler or nodejs rejectionHandled\n                // eventHandler\n                try {\n                    const handler = Zone[REJECTION_HANDLED_HANDLER];\n                    if (handler && typeof handler === 'function') {\n                        handler.call(this, { rejection: promise[symbolValue], promise: promise });\n                    }\n                }\n                catch (err) {\n                }\n                promise[symbolState] = REJECTED;\n                for (let i = 0; i < _uncaughtPromiseErrors.length; i++) {\n                    if (promise === _uncaughtPromiseErrors[i].promise) {\n                        _uncaughtPromiseErrors.splice(i, 1);\n                    }\n                }\n            }\n        }\n        function scheduleResolveOrReject(promise, zone, chainPromise, onFulfilled, onRejected) {\n            clearRejectedNoCatch(promise);\n            const promiseState = promise[symbolState];\n            const delegate = promiseState ?\n                (typeof onFulfilled === 'function') ? onFulfilled : forwardResolution :\n                (typeof onRejected === 'function') ? onRejected : forwardRejection;\n            zone.scheduleMicroTask(source, () => {\n                try {\n                    const parentPromiseValue = promise[symbolValue];\n                    const isFinallyPromise = !!chainPromise && symbolFinally === chainPromise[symbolFinally];\n                    if (isFinallyPromise) {\n                        // if the promise is generated from finally call, keep parent promise's state and value\n                        chainPromise[symbolParentPromiseValue] = parentPromiseValue;\n                        chainPromise[symbolParentPromiseState] = promiseState;\n                    }\n                    // should not pass value to finally callback\n                    const value = zone.run(delegate, undefined, isFinallyPromise && delegate !== forwardRejection && delegate !== forwardResolution ?\n                        [] :\n                        [parentPromiseValue]);\n                    resolvePromise(chainPromise, true, value);\n                }\n                catch (error) {\n                    // if error occurs, should always return this error\n                    resolvePromise(chainPromise, false, error);\n                }\n            }, chainPromise);\n        }\n        const ZONE_AWARE_PROMISE_TO_STRING = 'function ZoneAwarePromise() { [native code] }';\n        const noop = function () { };\n        class ZoneAwarePromise {\n            static toString() { return ZONE_AWARE_PROMISE_TO_STRING; }\n            static resolve(value) {\n                return resolvePromise(new this(null), RESOLVED, value);\n            }\n            static reject(error) {\n                return resolvePromise(new this(null), REJECTED, error);\n            }\n            static race(values) {\n                let resolve;\n                let reject;\n                let promise = new this((res, rej) => {\n                    resolve = res;\n                    reject = rej;\n                });\n                function onResolve(value) { resolve(value); }\n                function onReject(error) { reject(error); }\n                for (let value of values) {\n                    if (!isThenable(value)) {\n                        value = this.resolve(value);\n                    }\n                    value.then(onResolve, onReject);\n                }\n                return promise;\n            }\n            static all(values) { return ZoneAwarePromise.allWithCallback(values); }\n            static allSettled(values) {\n                const P = this && this.prototype instanceof ZoneAwarePromise ? this : ZoneAwarePromise;\n                return P.allWithCallback(values, {\n                    thenCallback: (value) => ({ status: 'fulfilled', value }),\n                    errorCallback: (err) => ({ status: 'rejected', reason: err })\n                });\n            }\n            static allWithCallback(values, callback) {\n                let resolve;\n                let reject;\n                let promise = new this((res, rej) => {\n                    resolve = res;\n                    reject = rej;\n                });\n                // Start at 2 to prevent prematurely resolving if .then is called immediately.\n                let unresolvedCount = 2;\n                let valueIndex = 0;\n                const resolvedValues = [];\n                for (let value of values) {\n                    if (!isThenable(value)) {\n                        value = this.resolve(value);\n                    }\n                    const curValueIndex = valueIndex;\n                    try {\n                        value.then((value) => {\n                            resolvedValues[curValueIndex] = callback ? callback.thenCallback(value) : value;\n                            unresolvedCount--;\n                            if (unresolvedCount === 0) {\n                                resolve(resolvedValues);\n                            }\n                        }, (err) => {\n                            if (!callback) {\n                                reject(err);\n                            }\n                            else {\n                                resolvedValues[curValueIndex] = callback.errorCallback(err);\n                                unresolvedCount--;\n                                if (unresolvedCount === 0) {\n                                    resolve(resolvedValues);\n                                }\n                            }\n                        });\n                    }\n                    catch (thenErr) {\n                        reject(thenErr);\n                    }\n                    unresolvedCount++;\n                    valueIndex++;\n                }\n                // Make the unresolvedCount zero-based again.\n                unresolvedCount -= 2;\n                if (unresolvedCount === 0) {\n                    resolve(resolvedValues);\n                }\n                return promise;\n            }\n            constructor(executor) {\n                const promise = this;\n                if (!(promise instanceof ZoneAwarePromise)) {\n                    throw new Error('Must be an instanceof Promise.');\n                }\n                promise[symbolState] = UNRESOLVED;\n                promise[symbolValue] = []; // queue;\n                try {\n                    executor && executor(makeResolver(promise, RESOLVED), makeResolver(promise, REJECTED));\n                }\n                catch (error) {\n                    resolvePromise(promise, false, error);\n                }\n            }\n            get [Symbol.toStringTag]() { return 'Promise'; }\n            get [Symbol.species]() { return ZoneAwarePromise; }\n            then(onFulfilled, onRejected) {\n                let C = this.constructor[Symbol.species];\n                if (!C || typeof C !== 'function') {\n                    C = this.constructor || ZoneAwarePromise;\n                }\n                const chainPromise = new C(noop);\n                const zone = Zone.current;\n                if (this[symbolState] == UNRESOLVED) {\n                    this[symbolValue].push(zone, chainPromise, onFulfilled, onRejected);\n                }\n                else {\n                    scheduleResolveOrReject(this, zone, chainPromise, onFulfilled, onRejected);\n                }\n                return chainPromise;\n            }\n            catch(onRejected) {\n                return this.then(null, onRejected);\n            }\n            finally(onFinally) {\n                let C = this.constructor[Symbol.species];\n                if (!C || typeof C !== 'function') {\n                    C = ZoneAwarePromise;\n                }\n                const chainPromise = new C(noop);\n                chainPromise[symbolFinally] = symbolFinally;\n                const zone = Zone.current;\n                if (this[symbolState] == UNRESOLVED) {\n                    this[symbolValue].push(zone, chainPromise, onFinally, onFinally);\n                }\n                else {\n                    scheduleResolveOrReject(this, zone, chainPromise, onFinally, onFinally);\n                }\n                return chainPromise;\n            }\n        }\n        // Protect against aggressive optimizers dropping seemingly unused properties.\n        // E.g. Closure Compiler in advanced mode.\n        ZoneAwarePromise['resolve'] = ZoneAwarePromise.resolve;\n        ZoneAwarePromise['reject'] = ZoneAwarePromise.reject;\n        ZoneAwarePromise['race'] = ZoneAwarePromise.race;\n        ZoneAwarePromise['all'] = ZoneAwarePromise.all;\n        const NativePromise = global[symbolPromise] = global['Promise'];\n        const ZONE_AWARE_PROMISE = Zone.__symbol__('ZoneAwarePromise');\n        let desc = ObjectGetOwnPropertyDescriptor(global, 'Promise');\n        if (!desc || desc.configurable) {\n            desc && delete desc.writable;\n            desc && delete desc.value;\n            if (!desc) {\n                desc = { configurable: true, enumerable: true };\n            }\n            desc.get = function () {\n                // if we already set ZoneAwarePromise, use patched one\n                // otherwise return native one.\n                return global[ZONE_AWARE_PROMISE] ? global[ZONE_AWARE_PROMISE] : global[symbolPromise];\n            };\n            desc.set = function (NewNativePromise) {\n                if (NewNativePromise === ZoneAwarePromise) {\n                    // if the NewNativePromise is ZoneAwarePromise\n                    // save to global\n                    global[ZONE_AWARE_PROMISE] = NewNativePromise;\n                }\n                else {\n                    // if the NewNativePromise is not ZoneAwarePromise\n                    // for example: after load zone.js, some library just\n                    // set es6-promise to global, if we set it to global\n                    // directly, assertZonePatched will fail and angular\n                    // will not loaded, so we just set the NewNativePromise\n                    // to global[symbolPromise], so the result is just like\n                    // we load ES6 Promise before zone.js\n                    global[symbolPromise] = NewNativePromise;\n                    if (!NewNativePromise.prototype[symbolThen]) {\n                        patchThen(NewNativePromise);\n                    }\n                    api.setNativePromise(NewNativePromise);\n                }\n            };\n            ObjectDefineProperty(global, 'Promise', desc);\n        }\n        global['Promise'] = ZoneAwarePromise;\n        const symbolThenPatched = __symbol__('thenPatched');\n        function patchThen(Ctor) {\n            const proto = Ctor.prototype;\n            const prop = ObjectGetOwnPropertyDescriptor(proto, 'then');\n            if (prop && (prop.writable === false || !prop.configurable)) {\n                // check Ctor.prototype.then propertyDescriptor is writable or not\n                // in meteor env, writable is false, we should ignore such case\n                return;\n            }\n            const originalThen = proto.then;\n            // Keep a reference to the original method.\n            proto[symbolThen] = originalThen;\n            Ctor.prototype.then = function (onResolve, onReject) {\n                const wrapped = new ZoneAwarePromise((resolve, reject) => { originalThen.call(this, resolve, reject); });\n                return wrapped.then(onResolve, onReject);\n            };\n            Ctor[symbolThenPatched] = true;\n        }\n        api.patchThen = patchThen;\n        function zoneify(fn) {\n            return function () {\n                let resultPromise = fn.apply(this, arguments);\n                if (resultPromise instanceof ZoneAwarePromise) {\n                    return resultPromise;\n                }\n                let ctor = resultPromise.constructor;\n                if (!ctor[symbolThenPatched]) {\n                    patchThen(ctor);\n                }\n                return resultPromise;\n            };\n        }\n        if (NativePromise) {\n            patchThen(NativePromise);\n            const fetch = global['fetch'];\n            if (typeof fetch == 'function') {\n                global[api.symbol('fetch')] = fetch;\n                global['fetch'] = zoneify(fetch);\n            }\n        }\n        // This is not part of public API, but it is useful for tests, so we expose it.\n        Promise[Zone.__symbol__('uncaughtPromiseErrors')] = _uncaughtPromiseErrors;\n        return ZoneAwarePromise;\n    });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Suppress closure compiler errors about unknown 'Zone' variable\n     * @fileoverview\n     * @suppress {undefinedVars,globalThis,missingRequire}\n     */\n    /// <reference types=\"node\"/>\n    // issue #989, to reduce bundle size, use short name\n    /** Object.getOwnPropertyDescriptor */\n    const ObjectGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n    /** Object.defineProperty */\n    const ObjectDefineProperty = Object.defineProperty;\n    /** Object.getPrototypeOf */\n    const ObjectGetPrototypeOf = Object.getPrototypeOf;\n    /** Object.create */\n    const ObjectCreate = Object.create;\n    /** Array.prototype.slice */\n    const ArraySlice = Array.prototype.slice;\n    /** addEventListener string const */\n    const ADD_EVENT_LISTENER_STR = 'addEventListener';\n    /** removeEventListener string const */\n    const REMOVE_EVENT_LISTENER_STR = 'removeEventListener';\n    /** zoneSymbol addEventListener */\n    const ZONE_SYMBOL_ADD_EVENT_LISTENER = Zone.__symbol__(ADD_EVENT_LISTENER_STR);\n    /** zoneSymbol removeEventListener */\n    const ZONE_SYMBOL_REMOVE_EVENT_LISTENER = Zone.__symbol__(REMOVE_EVENT_LISTENER_STR);\n    /** true string const */\n    const TRUE_STR = 'true';\n    /** false string const */\n    const FALSE_STR = 'false';\n    /** Zone symbol prefix string const. */\n    const ZONE_SYMBOL_PREFIX = Zone.__symbol__('');\n    function wrapWithCurrentZone(callback, source) {\n        return Zone.current.wrap(callback, source);\n    }\n    function scheduleMacroTaskWithCurrentZone(source, callback, data, customSchedule, customCancel) {\n        return Zone.current.scheduleMacroTask(source, callback, data, customSchedule, customCancel);\n    }\n    const zoneSymbol = Zone.__symbol__;\n    const isWindowExists = typeof window !== 'undefined';\n    const internalWindow = isWindowExists ? window : undefined;\n    const _global = isWindowExists && internalWindow || typeof self === 'object' && self || global;\n    const REMOVE_ATTRIBUTE = 'removeAttribute';\n    const NULL_ON_PROP_VALUE = [null];\n    function bindArguments(args, source) {\n        for (let i = args.length - 1; i >= 0; i--) {\n            if (typeof args[i] === 'function') {\n                args[i] = wrapWithCurrentZone(args[i], source + '_' + i);\n            }\n        }\n        return args;\n    }\n    function patchPrototype(prototype, fnNames) {\n        const source = prototype.constructor['name'];\n        for (let i = 0; i < fnNames.length; i++) {\n            const name = fnNames[i];\n            const delegate = prototype[name];\n            if (delegate) {\n                const prototypeDesc = ObjectGetOwnPropertyDescriptor(prototype, name);\n                if (!isPropertyWritable(prototypeDesc)) {\n                    continue;\n                }\n                prototype[name] = ((delegate) => {\n                    const patched = function () {\n                        return delegate.apply(this, bindArguments(arguments, source + '.' + name));\n                    };\n                    attachOriginToPatched(patched, delegate);\n                    return patched;\n                })(delegate);\n            }\n        }\n    }\n    function isPropertyWritable(propertyDesc) {\n        if (!propertyDesc) {\n            return true;\n        }\n        if (propertyDesc.writable === false) {\n            return false;\n        }\n        return !(typeof propertyDesc.get === 'function' && typeof propertyDesc.set === 'undefined');\n    }\n    const isWebWorker = (typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope);\n    // Make sure to access `process` through `_global` so that WebPack does not accidentally browserify\n    // this code.\n    const isNode = (!('nw' in _global) && typeof _global.process !== 'undefined' &&\n        {}.toString.call(_global.process) === '[object process]');\n    const isBrowser = !isNode && !isWebWorker && !!(isWindowExists && internalWindow['HTMLElement']);\n    // we are in electron of nw, so we are both browser and nodejs\n    // Make sure to access `process` through `_global` so that WebPack does not accidentally browserify\n    // this code.\n    const isMix = typeof _global.process !== 'undefined' &&\n        {}.toString.call(_global.process) === '[object process]' && !isWebWorker &&\n        !!(isWindowExists && internalWindow['HTMLElement']);\n    const zoneSymbolEventNames = {};\n    const wrapFn = function (event) {\n        // https://github.com/angular/zone.js/issues/911, in IE, sometimes\n        // event will be undefined, so we need to use window.event\n        event = event || _global.event;\n        if (!event) {\n            return;\n        }\n        let eventNameSymbol = zoneSymbolEventNames[event.type];\n        if (!eventNameSymbol) {\n            eventNameSymbol = zoneSymbolEventNames[event.type] = zoneSymbol('ON_PROPERTY' + event.type);\n        }\n        const target = this || event.target || _global;\n        const listener = target[eventNameSymbol];\n        let result;\n        if (isBrowser && target === internalWindow && event.type === 'error') {\n            // window.onerror have different signiture\n            // https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onerror#window.onerror\n            // and onerror callback will prevent default when callback return true\n            const errorEvent = event;\n            result = listener &&\n                listener.call(this, errorEvent.message, errorEvent.filename, errorEvent.lineno, errorEvent.colno, errorEvent.error);\n            if (result === true) {\n                event.preventDefault();\n            }\n        }\n        else {\n            result = listener && listener.apply(this, arguments);\n            if (result != undefined && !result) {\n                event.preventDefault();\n            }\n        }\n        return result;\n    };\n    function patchProperty(obj, prop, prototype) {\n        let desc = ObjectGetOwnPropertyDescriptor(obj, prop);\n        if (!desc && prototype) {\n            // when patch window object, use prototype to check prop exist or not\n            const prototypeDesc = ObjectGetOwnPropertyDescriptor(prototype, prop);\n            if (prototypeDesc) {\n                desc = { enumerable: true, configurable: true };\n            }\n        }\n        // if the descriptor not exists or is not configurable\n        // just return\n        if (!desc || !desc.configurable) {\n            return;\n        }\n        const onPropPatchedSymbol = zoneSymbol('on' + prop + 'patched');\n        if (obj.hasOwnProperty(onPropPatchedSymbol) && obj[onPropPatchedSymbol]) {\n            return;\n        }\n        // A property descriptor cannot have getter/setter and be writable\n        // deleting the writable and value properties avoids this error:\n        //\n        // TypeError: property descriptors must not specify a value or be writable when a\n        // getter or setter has been specified\n        delete desc.writable;\n        delete desc.value;\n        const originalDescGet = desc.get;\n        const originalDescSet = desc.set;\n        // substr(2) cuz 'onclick' -> 'click', etc\n        const eventName = prop.substr(2);\n        let eventNameSymbol = zoneSymbolEventNames[eventName];\n        if (!eventNameSymbol) {\n            eventNameSymbol = zoneSymbolEventNames[eventName] = zoneSymbol('ON_PROPERTY' + eventName);\n        }\n        desc.set = function (newValue) {\n            // in some of windows's onproperty callback, this is undefined\n            // so we need to check it\n            let target = this;\n            if (!target && obj === _global) {\n                target = _global;\n            }\n            if (!target) {\n                return;\n            }\n            let previousValue = target[eventNameSymbol];\n            if (previousValue) {\n                target.removeEventListener(eventName, wrapFn);\n            }\n            // issue #978, when onload handler was added before loading zone.js\n            // we should remove it with originalDescSet\n            if (originalDescSet) {\n                originalDescSet.apply(target, NULL_ON_PROP_VALUE);\n            }\n            if (typeof newValue === 'function') {\n                target[eventNameSymbol] = newValue;\n                target.addEventListener(eventName, wrapFn, false);\n            }\n            else {\n                target[eventNameSymbol] = null;\n            }\n        };\n        // The getter would return undefined for unassigned properties but the default value of an\n        // unassigned property is null\n        desc.get = function () {\n            // in some of windows's onproperty callback, this is undefined\n            // so we need to check it\n            let target = this;\n            if (!target && obj === _global) {\n                target = _global;\n            }\n            if (!target) {\n                return null;\n            }\n            const listener = target[eventNameSymbol];\n            if (listener) {\n                return listener;\n            }\n            else if (originalDescGet) {\n                // result will be null when use inline event attribute,\n                // such as <button onclick=\"func();\">OK</button>\n                // because the onclick function is internal raw uncompiled handler\n                // the onclick will be evaluated when first time event was triggered or\n                // the property is accessed, https://github.com/angular/zone.js/issues/525\n                // so we should use original native get to retrieve the handler\n                let value = originalDescGet && originalDescGet.call(this);\n                if (value) {\n                    desc.set.call(this, value);\n                    if (typeof target[REMOVE_ATTRIBUTE] === 'function') {\n                        target.removeAttribute(prop);\n                    }\n                    return value;\n                }\n            }\n            return null;\n        };\n        ObjectDefineProperty(obj, prop, desc);\n        obj[onPropPatchedSymbol] = true;\n    }\n    function patchOnProperties(obj, properties, prototype) {\n        if (properties) {\n            for (let i = 0; i < properties.length; i++) {\n                patchProperty(obj, 'on' + properties[i], prototype);\n            }\n        }\n        else {\n            const onProperties = [];\n            for (const prop in obj) {\n                if (prop.substr(0, 2) == 'on') {\n                    onProperties.push(prop);\n                }\n            }\n            for (let j = 0; j < onProperties.length; j++) {\n                patchProperty(obj, onProperties[j], prototype);\n            }\n        }\n    }\n    const originalInstanceKey = zoneSymbol('originalInstance');\n    // wrap some native API on `window`\n    function patchClass(className) {\n        const OriginalClass = _global[className];\n        if (!OriginalClass)\n            return;\n        // keep original class in global\n        _global[zoneSymbol(className)] = OriginalClass;\n        _global[className] = function () {\n            const a = bindArguments(arguments, className);\n            switch (a.length) {\n                case 0:\n                    this[originalInstanceKey] = new OriginalClass();\n                    break;\n                case 1:\n                    this[originalInstanceKey] = new OriginalClass(a[0]);\n                    break;\n                case 2:\n                    this[originalInstanceKey] = new OriginalClass(a[0], a[1]);\n                    break;\n                case 3:\n                    this[originalInstanceKey] = new OriginalClass(a[0], a[1], a[2]);\n                    break;\n                case 4:\n                    this[originalInstanceKey] = new OriginalClass(a[0], a[1], a[2], a[3]);\n                    break;\n                default:\n                    throw new Error('Arg list too long.');\n            }\n        };\n        // attach original delegate to patched function\n        attachOriginToPatched(_global[className], OriginalClass);\n        const instance = new OriginalClass(function () { });\n        let prop;\n        for (prop in instance) {\n            // https://bugs.webkit.org/show_bug.cgi?id=44721\n            if (className === 'XMLHttpRequest' && prop === 'responseBlob')\n                continue;\n            (function (prop) {\n                if (typeof instance[prop] === 'function') {\n                    _global[className].prototype[prop] = function () {\n                        return this[originalInstanceKey][prop].apply(this[originalInstanceKey], arguments);\n                    };\n                }\n                else {\n                    ObjectDefineProperty(_global[className].prototype, prop, {\n                        set: function (fn) {\n                            if (typeof fn === 'function') {\n                                this[originalInstanceKey][prop] = wrapWithCurrentZone(fn, className + '.' + prop);\n                                // keep callback in wrapped function so we can\n                                // use it in Function.prototype.toString to return\n                                // the native one.\n                                attachOriginToPatched(this[originalInstanceKey][prop], fn);\n                            }\n                            else {\n                                this[originalInstanceKey][prop] = fn;\n                            }\n                        },\n                        get: function () { return this[originalInstanceKey][prop]; }\n                    });\n                }\n            }(prop));\n        }\n        for (prop in OriginalClass) {\n            if (prop !== 'prototype' && OriginalClass.hasOwnProperty(prop)) {\n                _global[className][prop] = OriginalClass[prop];\n            }\n        }\n    }\n    function copySymbolProperties(src, dest) {\n        if (typeof Object.getOwnPropertySymbols !== 'function') {\n            return;\n        }\n        const symbols = Object.getOwnPropertySymbols(src);\n        symbols.forEach((symbol) => {\n            const desc = Object.getOwnPropertyDescriptor(src, symbol);\n            Object.defineProperty(dest, symbol, {\n                get: function () { return src[symbol]; },\n                set: function (value) {\n                    if (desc && (!desc.writable || typeof desc.set !== 'function')) {\n                        // if src[symbol] is not writable or not have a setter, just return\n                        return;\n                    }\n                    src[symbol] = value;\n                },\n                enumerable: desc ? desc.enumerable : true,\n                configurable: desc ? desc.configurable : true\n            });\n        });\n    }\n    let shouldCopySymbolProperties = false;\n    function patchMethod(target, name, patchFn) {\n        let proto = target;\n        while (proto && !proto.hasOwnProperty(name)) {\n            proto = ObjectGetPrototypeOf(proto);\n        }\n        if (!proto && target[name]) {\n            // somehow we did not find it, but we can see it. This happens on IE for Window properties.\n            proto = target;\n        }\n        const delegateName = zoneSymbol(name);\n        let delegate = null;\n        if (proto && !(delegate = proto[delegateName])) {\n            delegate = proto[delegateName] = proto[name];\n            // check whether proto[name] is writable\n            // some property is readonly in safari, such as HtmlCanvasElement.prototype.toBlob\n            const desc = proto && ObjectGetOwnPropertyDescriptor(proto, name);\n            if (isPropertyWritable(desc)) {\n                const patchDelegate = patchFn(delegate, delegateName, name);\n                proto[name] = function () { return patchDelegate(this, arguments); };\n                attachOriginToPatched(proto[name], delegate);\n                if (shouldCopySymbolProperties) {\n                    copySymbolProperties(delegate, proto[name]);\n                }\n            }\n        }\n        return delegate;\n    }\n    // TODO: @JiaLiPassion, support cancel task later if necessary\n    function patchMacroTask(obj, funcName, metaCreator) {\n        let setNative = null;\n        function scheduleTask(task) {\n            const data = task.data;\n            data.args[data.cbIdx] = function () { task.invoke.apply(this, arguments); };\n            setNative.apply(data.target, data.args);\n            return task;\n        }\n        setNative = patchMethod(obj, funcName, (delegate) => function (self, args) {\n            const meta = metaCreator(self, args);\n            if (meta.cbIdx >= 0 && typeof args[meta.cbIdx] === 'function') {\n                return scheduleMacroTaskWithCurrentZone(meta.name, args[meta.cbIdx], meta, scheduleTask);\n            }\n            else {\n                // cause an error by calling it directly.\n                return delegate.apply(self, args);\n            }\n        });\n    }\n    function attachOriginToPatched(patched, original) {\n        patched[zoneSymbol('OriginalDelegate')] = original;\n    }\n    let isDetectedIEOrEdge = false;\n    let ieOrEdge = false;\n    function isIE() {\n        try {\n            const ua = internalWindow.navigator.userAgent;\n            if (ua.indexOf('MSIE ') !== -1 || ua.indexOf('Trident/') !== -1) {\n                return true;\n            }\n        }\n        catch (error) {\n        }\n        return false;\n    }\n    function isIEOrEdge() {\n        if (isDetectedIEOrEdge) {\n            return ieOrEdge;\n        }\n        isDetectedIEOrEdge = true;\n        try {\n            const ua = internalWindow.navigator.userAgent;\n            if (ua.indexOf('MSIE ') !== -1 || ua.indexOf('Trident/') !== -1 || ua.indexOf('Edge/') !== -1) {\n                ieOrEdge = true;\n            }\n        }\n        catch (error) {\n        }\n        return ieOrEdge;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // override Function.prototype.toString to make zone.js patched function\n    // look like native function\n    Zone.__load_patch('toString', (global) => {\n        // patch Func.prototype.toString to let them look like native\n        const originalFunctionToString = Function.prototype.toString;\n        const ORIGINAL_DELEGATE_SYMBOL = zoneSymbol('OriginalDelegate');\n        const PROMISE_SYMBOL = zoneSymbol('Promise');\n        const ERROR_SYMBOL = zoneSymbol('Error');\n        const newFunctionToString = function toString() {\n            if (typeof this === 'function') {\n                const originalDelegate = this[ORIGINAL_DELEGATE_SYMBOL];\n                if (originalDelegate) {\n                    if (typeof originalDelegate === 'function') {\n                        return originalFunctionToString.call(originalDelegate);\n                    }\n                    else {\n                        return Object.prototype.toString.call(originalDelegate);\n                    }\n                }\n                if (this === Promise) {\n                    const nativePromise = global[PROMISE_SYMBOL];\n                    if (nativePromise) {\n                        return originalFunctionToString.call(nativePromise);\n                    }\n                }\n                if (this === Error) {\n                    const nativeError = global[ERROR_SYMBOL];\n                    if (nativeError) {\n                        return originalFunctionToString.call(nativeError);\n                    }\n                }\n            }\n            return originalFunctionToString.call(this);\n        };\n        newFunctionToString[ORIGINAL_DELEGATE_SYMBOL] = originalFunctionToString;\n        Function.prototype.toString = newFunctionToString;\n        // patch Object.prototype.toString to let them look like native\n        const originalObjectToString = Object.prototype.toString;\n        const PROMISE_OBJECT_TO_STRING = '[object Promise]';\n        Object.prototype.toString = function () {\n            if (this instanceof Promise) {\n                return PROMISE_OBJECT_TO_STRING;\n            }\n            return originalObjectToString.call(this);\n        };\n    });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    let passiveSupported = false;\n    if (typeof window !== 'undefined') {\n        try {\n            const options = Object.defineProperty({}, 'passive', { get: function () { passiveSupported = true; } });\n            window.addEventListener('test', options, options);\n            window.removeEventListener('test', options, options);\n        }\n        catch (err) {\n            passiveSupported = false;\n        }\n    }\n    // an identifier to tell ZoneTask do not create a new invoke closure\n    const OPTIMIZED_ZONE_EVENT_TASK_DATA = {\n        useG: true\n    };\n    const zoneSymbolEventNames$1 = {};\n    const globalSources = {};\n    const EVENT_NAME_SYMBOL_REGX = new RegExp('^' + ZONE_SYMBOL_PREFIX + '(\\\\w+)(true|false)$');\n    const IMMEDIATE_PROPAGATION_SYMBOL = zoneSymbol('propagationStopped');\n    function prepareEventNames(eventName, eventNameToString) {\n        const falseEventName = (eventNameToString ? eventNameToString(eventName) : eventName) + FALSE_STR;\n        const trueEventName = (eventNameToString ? eventNameToString(eventName) : eventName) + TRUE_STR;\n        const symbol = ZONE_SYMBOL_PREFIX + falseEventName;\n        const symbolCapture = ZONE_SYMBOL_PREFIX + trueEventName;\n        zoneSymbolEventNames$1[eventName] = {};\n        zoneSymbolEventNames$1[eventName][FALSE_STR] = symbol;\n        zoneSymbolEventNames$1[eventName][TRUE_STR] = symbolCapture;\n    }\n    function patchEventTarget(_global, apis, patchOptions) {\n        const ADD_EVENT_LISTENER = (patchOptions && patchOptions.add) || ADD_EVENT_LISTENER_STR;\n        const REMOVE_EVENT_LISTENER = (patchOptions && patchOptions.rm) || REMOVE_EVENT_LISTENER_STR;\n        const LISTENERS_EVENT_LISTENER = (patchOptions && patchOptions.listeners) || 'eventListeners';\n        const REMOVE_ALL_LISTENERS_EVENT_LISTENER = (patchOptions && patchOptions.rmAll) || 'removeAllListeners';\n        const zoneSymbolAddEventListener = zoneSymbol(ADD_EVENT_LISTENER);\n        const ADD_EVENT_LISTENER_SOURCE = '.' + ADD_EVENT_LISTENER + ':';\n        const PREPEND_EVENT_LISTENER = 'prependListener';\n        const PREPEND_EVENT_LISTENER_SOURCE = '.' + PREPEND_EVENT_LISTENER + ':';\n        const invokeTask = function (task, target, event) {\n            // for better performance, check isRemoved which is set\n            // by removeEventListener\n            if (task.isRemoved) {\n                return;\n            }\n            const delegate = task.callback;\n            if (typeof delegate === 'object' && delegate.handleEvent) {\n                // create the bind version of handleEvent when invoke\n                task.callback = (event) => delegate.handleEvent(event);\n                task.originalDelegate = delegate;\n            }\n            // invoke static task.invoke\n            task.invoke(task, target, [event]);\n            const options = task.options;\n            if (options && typeof options === 'object' && options.once) {\n                // if options.once is true, after invoke once remove listener here\n                // only browser need to do this, nodejs eventEmitter will cal removeListener\n                // inside EventEmitter.once\n                const delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                target[REMOVE_EVENT_LISTENER].call(target, event.type, delegate, options);\n            }\n        };\n        // global shared zoneAwareCallback to handle all event callback with capture = false\n        const globalZoneAwareCallback = function (event) {\n            // https://github.com/angular/zone.js/issues/911, in IE, sometimes\n            // event will be undefined, so we need to use window.event\n            event = event || _global.event;\n            if (!event) {\n                return;\n            }\n            // event.target is needed for Samsung TV and SourceBuffer\n            // || global is needed https://github.com/angular/zone.js/issues/190\n            const target = this || event.target || _global;\n            const tasks = target[zoneSymbolEventNames$1[event.type][FALSE_STR]];\n            if (tasks) {\n                // invoke all tasks which attached to current target with given event.type and capture = false\n                // for performance concern, if task.length === 1, just invoke\n                if (tasks.length === 1) {\n                    invokeTask(tasks[0], target, event);\n                }\n                else {\n                    // https://github.com/angular/zone.js/issues/836\n                    // copy the tasks array before invoke, to avoid\n                    // the callback will remove itself or other listener\n                    const copyTasks = tasks.slice();\n                    for (let i = 0; i < copyTasks.length; i++) {\n                        if (event && event[IMMEDIATE_PROPAGATION_SYMBOL] === true) {\n                            break;\n                        }\n                        invokeTask(copyTasks[i], target, event);\n                    }\n                }\n            }\n        };\n        // global shared zoneAwareCallback to handle all event callback with capture = true\n        const globalZoneAwareCaptureCallback = function (event) {\n            // https://github.com/angular/zone.js/issues/911, in IE, sometimes\n            // event will be undefined, so we need to use window.event\n            event = event || _global.event;\n            if (!event) {\n                return;\n            }\n            // event.target is needed for Samsung TV and SourceBuffer\n            // || global is needed https://github.com/angular/zone.js/issues/190\n            const target = this || event.target || _global;\n            const tasks = target[zoneSymbolEventNames$1[event.type][TRUE_STR]];\n            if (tasks) {\n                // invoke all tasks which attached to current target with given event.type and capture = false\n                // for performance concern, if task.length === 1, just invoke\n                if (tasks.length === 1) {\n                    invokeTask(tasks[0], target, event);\n                }\n                else {\n                    // https://github.com/angular/zone.js/issues/836\n                    // copy the tasks array before invoke, to avoid\n                    // the callback will remove itself or other listener\n                    const copyTasks = tasks.slice();\n                    for (let i = 0; i < copyTasks.length; i++) {\n                        if (event && event[IMMEDIATE_PROPAGATION_SYMBOL] === true) {\n                            break;\n                        }\n                        invokeTask(copyTasks[i], target, event);\n                    }\n                }\n            }\n        };\n        function patchEventTargetMethods(obj, patchOptions) {\n            if (!obj) {\n                return false;\n            }\n            let useGlobalCallback = true;\n            if (patchOptions && patchOptions.useG !== undefined) {\n                useGlobalCallback = patchOptions.useG;\n            }\n            const validateHandler = patchOptions && patchOptions.vh;\n            let checkDuplicate = true;\n            if (patchOptions && patchOptions.chkDup !== undefined) {\n                checkDuplicate = patchOptions.chkDup;\n            }\n            let returnTarget = false;\n            if (patchOptions && patchOptions.rt !== undefined) {\n                returnTarget = patchOptions.rt;\n            }\n            let proto = obj;\n            while (proto && !proto.hasOwnProperty(ADD_EVENT_LISTENER)) {\n                proto = ObjectGetPrototypeOf(proto);\n            }\n            if (!proto && obj[ADD_EVENT_LISTENER]) {\n                // somehow we did not find it, but we can see it. This happens on IE for Window properties.\n                proto = obj;\n            }\n            if (!proto) {\n                return false;\n            }\n            if (proto[zoneSymbolAddEventListener]) {\n                return false;\n            }\n            const eventNameToString = patchOptions && patchOptions.eventNameToString;\n            // a shared global taskData to pass data for scheduleEventTask\n            // so we do not need to create a new object just for pass some data\n            const taskData = {};\n            const nativeAddEventListener = proto[zoneSymbolAddEventListener] = proto[ADD_EVENT_LISTENER];\n            const nativeRemoveEventListener = proto[zoneSymbol(REMOVE_EVENT_LISTENER)] =\n                proto[REMOVE_EVENT_LISTENER];\n            const nativeListeners = proto[zoneSymbol(LISTENERS_EVENT_LISTENER)] =\n                proto[LISTENERS_EVENT_LISTENER];\n            const nativeRemoveAllListeners = proto[zoneSymbol(REMOVE_ALL_LISTENERS_EVENT_LISTENER)] =\n                proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER];\n            let nativePrependEventListener;\n            if (patchOptions && patchOptions.prepend) {\n                nativePrependEventListener = proto[zoneSymbol(patchOptions.prepend)] =\n                    proto[patchOptions.prepend];\n            }\n            /**\n             * This util function will build an option object with passive option\n             * to handle all possible input from the user.\n             */\n            function buildEventListenerOptions(options, passive) {\n                if (!passiveSupported && typeof options === 'object' && options) {\n                    // doesn't support passive but user want to pass an object as options.\n                    // this will not work on some old browser, so we just pass a boolean\n                    // as useCapture parameter\n                    return !!options.capture;\n                }\n                if (!passiveSupported || !passive) {\n                    return options;\n                }\n                if (typeof options === 'boolean') {\n                    return { capture: options, passive: true };\n                }\n                if (!options) {\n                    return { passive: true };\n                }\n                if (typeof options === 'object' && options.passive !== false) {\n                    return Object.assign(Object.assign({}, options), { passive: true });\n                }\n                return options;\n            }\n            const customScheduleGlobal = function (task) {\n                // if there is already a task for the eventName + capture,\n                // just return, because we use the shared globalZoneAwareCallback here.\n                if (taskData.isExisting) {\n                    return;\n                }\n                return nativeAddEventListener.call(taskData.target, taskData.eventName, taskData.capture ? globalZoneAwareCaptureCallback : globalZoneAwareCallback, taskData.options);\n            };\n            const customCancelGlobal = function (task) {\n                // if task is not marked as isRemoved, this call is directly\n                // from Zone.prototype.cancelTask, we should remove the task\n                // from tasksList of target first\n                if (!task.isRemoved) {\n                    const symbolEventNames = zoneSymbolEventNames$1[task.eventName];\n                    let symbolEventName;\n                    if (symbolEventNames) {\n                        symbolEventName = symbolEventNames[task.capture ? TRUE_STR : FALSE_STR];\n                    }\n                    const existingTasks = symbolEventName && task.target[symbolEventName];\n                    if (existingTasks) {\n                        for (let i = 0; i < existingTasks.length; i++) {\n                            const existingTask = existingTasks[i];\n                            if (existingTask === task) {\n                                existingTasks.splice(i, 1);\n                                // set isRemoved to data for faster invokeTask check\n                                task.isRemoved = true;\n                                if (existingTasks.length === 0) {\n                                    // all tasks for the eventName + capture have gone,\n                                    // remove globalZoneAwareCallback and remove the task cache from target\n                                    task.allRemoved = true;\n                                    task.target[symbolEventName] = null;\n                                }\n                                break;\n                            }\n                        }\n                    }\n                }\n                // if all tasks for the eventName + capture have gone,\n                // we will really remove the global event callback,\n                // if not, return\n                if (!task.allRemoved) {\n                    return;\n                }\n                return nativeRemoveEventListener.call(task.target, task.eventName, task.capture ? globalZoneAwareCaptureCallback : globalZoneAwareCallback, task.options);\n            };\n            const customScheduleNonGlobal = function (task) {\n                return nativeAddEventListener.call(taskData.target, taskData.eventName, task.invoke, taskData.options);\n            };\n            const customSchedulePrepend = function (task) {\n                return nativePrependEventListener.call(taskData.target, taskData.eventName, task.invoke, taskData.options);\n            };\n            const customCancelNonGlobal = function (task) {\n                return nativeRemoveEventListener.call(task.target, task.eventName, task.invoke, task.options);\n            };\n            const customSchedule = useGlobalCallback ? customScheduleGlobal : customScheduleNonGlobal;\n            const customCancel = useGlobalCallback ? customCancelGlobal : customCancelNonGlobal;\n            const compareTaskCallbackVsDelegate = function (task, delegate) {\n                const typeOfDelegate = typeof delegate;\n                return (typeOfDelegate === 'function' && task.callback === delegate) ||\n                    (typeOfDelegate === 'object' && task.originalDelegate === delegate);\n            };\n            const compare = (patchOptions && patchOptions.diff) ? patchOptions.diff : compareTaskCallbackVsDelegate;\n            const blackListedEvents = Zone[zoneSymbol('BLACK_LISTED_EVENTS')];\n            const passiveEvents = _global[zoneSymbol('PASSIVE_EVENTS')];\n            const makeAddListener = function (nativeListener, addSource, customScheduleFn, customCancelFn, returnTarget = false, prepend = false) {\n                return function () {\n                    const target = this || _global;\n                    let eventName = arguments[0];\n                    if (patchOptions && patchOptions.transferEventName) {\n                        eventName = patchOptions.transferEventName(eventName);\n                    }\n                    let delegate = arguments[1];\n                    if (!delegate) {\n                        return nativeListener.apply(this, arguments);\n                    }\n                    if (isNode && eventName === 'uncaughtException') {\n                        // don't patch uncaughtException of nodejs to prevent endless loop\n                        return nativeListener.apply(this, arguments);\n                    }\n                    // don't create the bind delegate function for handleEvent\n                    // case here to improve addEventListener performance\n                    // we will create the bind delegate when invoke\n                    let isHandleEvent = false;\n                    if (typeof delegate !== 'function') {\n                        if (!delegate.handleEvent) {\n                            return nativeListener.apply(this, arguments);\n                        }\n                        isHandleEvent = true;\n                    }\n                    if (validateHandler && !validateHandler(nativeListener, delegate, target, arguments)) {\n                        return;\n                    }\n                    const passive = passiveSupported && !!passiveEvents && passiveEvents.indexOf(eventName) !== -1;\n                    const options = buildEventListenerOptions(arguments[2], passive);\n                    if (blackListedEvents) {\n                        // check black list\n                        for (let i = 0; i < blackListedEvents.length; i++) {\n                            if (eventName === blackListedEvents[i]) {\n                                if (passive) {\n                                    return nativeListener.call(target, eventName, delegate, options);\n                                }\n                                else {\n                                    return nativeListener.apply(this, arguments);\n                                }\n                            }\n                        }\n                    }\n                    const capture = !options ? false : typeof options === 'boolean' ? true : options.capture;\n                    const once = options && typeof options === 'object' ? options.once : false;\n                    const zone = Zone.current;\n                    let symbolEventNames = zoneSymbolEventNames$1[eventName];\n                    if (!symbolEventNames) {\n                        prepareEventNames(eventName, eventNameToString);\n                        symbolEventNames = zoneSymbolEventNames$1[eventName];\n                    }\n                    const symbolEventName = symbolEventNames[capture ? TRUE_STR : FALSE_STR];\n                    let existingTasks = target[symbolEventName];\n                    let isExisting = false;\n                    if (existingTasks) {\n                        // already have task registered\n                        isExisting = true;\n                        if (checkDuplicate) {\n                            for (let i = 0; i < existingTasks.length; i++) {\n                                if (compare(existingTasks[i], delegate)) {\n                                    // same callback, same capture, same event name, just return\n                                    return;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        existingTasks = target[symbolEventName] = [];\n                    }\n                    let source;\n                    const constructorName = target.constructor['name'];\n                    const targetSource = globalSources[constructorName];\n                    if (targetSource) {\n                        source = targetSource[eventName];\n                    }\n                    if (!source) {\n                        source = constructorName + addSource +\n                            (eventNameToString ? eventNameToString(eventName) : eventName);\n                    }\n                    // do not create a new object as task.data to pass those things\n                    // just use the global shared one\n                    taskData.options = options;\n                    if (once) {\n                        // if addEventListener with once options, we don't pass it to\n                        // native addEventListener, instead we keep the once setting\n                        // and handle ourselves.\n                        taskData.options.once = false;\n                    }\n                    taskData.target = target;\n                    taskData.capture = capture;\n                    taskData.eventName = eventName;\n                    taskData.isExisting = isExisting;\n                    const data = useGlobalCallback ? OPTIMIZED_ZONE_EVENT_TASK_DATA : undefined;\n                    // keep taskData into data to allow onScheduleEventTask to access the task information\n                    if (data) {\n                        data.taskData = taskData;\n                    }\n                    const task = zone.scheduleEventTask(source, delegate, data, customScheduleFn, customCancelFn);\n                    // should clear taskData.target to avoid memory leak\n                    // issue, https://github.com/angular/angular/issues/20442\n                    taskData.target = null;\n                    // need to clear up taskData because it is a global object\n                    if (data) {\n                        data.taskData = null;\n                    }\n                    // have to save those information to task in case\n                    // application may call task.zone.cancelTask() directly\n                    if (once) {\n                        options.once = true;\n                    }\n                    if (!(!passiveSupported && typeof task.options === 'boolean')) {\n                        // if not support passive, and we pass an option object\n                        // to addEventListener, we should save the options to task\n                        task.options = options;\n                    }\n                    task.target = target;\n                    task.capture = capture;\n                    task.eventName = eventName;\n                    if (isHandleEvent) {\n                        // save original delegate for compare to check duplicate\n                        task.originalDelegate = delegate;\n                    }\n                    if (!prepend) {\n                        existingTasks.push(task);\n                    }\n                    else {\n                        existingTasks.unshift(task);\n                    }\n                    if (returnTarget) {\n                        return target;\n                    }\n                };\n            };\n            proto[ADD_EVENT_LISTENER] = makeAddListener(nativeAddEventListener, ADD_EVENT_LISTENER_SOURCE, customSchedule, customCancel, returnTarget);\n            if (nativePrependEventListener) {\n                proto[PREPEND_EVENT_LISTENER] = makeAddListener(nativePrependEventListener, PREPEND_EVENT_LISTENER_SOURCE, customSchedulePrepend, customCancel, returnTarget, true);\n            }\n            proto[REMOVE_EVENT_LISTENER] = function () {\n                const target = this || _global;\n                let eventName = arguments[0];\n                if (patchOptions && patchOptions.transferEventName) {\n                    eventName = patchOptions.transferEventName(eventName);\n                }\n                const options = arguments[2];\n                const capture = !options ? false : typeof options === 'boolean' ? true : options.capture;\n                const delegate = arguments[1];\n                if (!delegate) {\n                    return nativeRemoveEventListener.apply(this, arguments);\n                }\n                if (validateHandler &&\n                    !validateHandler(nativeRemoveEventListener, delegate, target, arguments)) {\n                    return;\n                }\n                const symbolEventNames = zoneSymbolEventNames$1[eventName];\n                let symbolEventName;\n                if (symbolEventNames) {\n                    symbolEventName = symbolEventNames[capture ? TRUE_STR : FALSE_STR];\n                }\n                const existingTasks = symbolEventName && target[symbolEventName];\n                if (existingTasks) {\n                    for (let i = 0; i < existingTasks.length; i++) {\n                        const existingTask = existingTasks[i];\n                        if (compare(existingTask, delegate)) {\n                            existingTasks.splice(i, 1);\n                            // set isRemoved to data for faster invokeTask check\n                            existingTask.isRemoved = true;\n                            if (existingTasks.length === 0) {\n                                // all tasks for the eventName + capture have gone,\n                                // remove globalZoneAwareCallback and remove the task cache from target\n                                existingTask.allRemoved = true;\n                                target[symbolEventName] = null;\n                                // in the target, we have an event listener which is added by on_property\n                                // such as target.onclick = function() {}, so we need to clear this internal\n                                // property too if all delegates all removed\n                                if (typeof eventName === 'string') {\n                                    const onPropertySymbol = ZONE_SYMBOL_PREFIX + 'ON_PROPERTY' + eventName;\n                                    target[onPropertySymbol] = null;\n                                }\n                            }\n                            existingTask.zone.cancelTask(existingTask);\n                            if (returnTarget) {\n                                return target;\n                            }\n                            return;\n                        }\n                    }\n                }\n                // issue 930, didn't find the event name or callback\n                // from zone kept existingTasks, the callback maybe\n                // added outside of zone, we need to call native removeEventListener\n                // to try to remove it.\n                return nativeRemoveEventListener.apply(this, arguments);\n            };\n            proto[LISTENERS_EVENT_LISTENER] = function () {\n                const target = this || _global;\n                let eventName = arguments[0];\n                if (patchOptions && patchOptions.transferEventName) {\n                    eventName = patchOptions.transferEventName(eventName);\n                }\n                const listeners = [];\n                const tasks = findEventTasks(target, eventNameToString ? eventNameToString(eventName) : eventName);\n                for (let i = 0; i < tasks.length; i++) {\n                    const task = tasks[i];\n                    let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                    listeners.push(delegate);\n                }\n                return listeners;\n            };\n            proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER] = function () {\n                const target = this || _global;\n                let eventName = arguments[0];\n                if (!eventName) {\n                    const keys = Object.keys(target);\n                    for (let i = 0; i < keys.length; i++) {\n                        const prop = keys[i];\n                        const match = EVENT_NAME_SYMBOL_REGX.exec(prop);\n                        let evtName = match && match[1];\n                        // in nodejs EventEmitter, removeListener event is\n                        // used for monitoring the removeListener call,\n                        // so just keep removeListener eventListener until\n                        // all other eventListeners are removed\n                        if (evtName && evtName !== 'removeListener') {\n                            this[REMOVE_ALL_LISTENERS_EVENT_LISTENER].call(this, evtName);\n                        }\n                    }\n                    // remove removeListener listener finally\n                    this[REMOVE_ALL_LISTENERS_EVENT_LISTENER].call(this, 'removeListener');\n                }\n                else {\n                    if (patchOptions && patchOptions.transferEventName) {\n                        eventName = patchOptions.transferEventName(eventName);\n                    }\n                    const symbolEventNames = zoneSymbolEventNames$1[eventName];\n                    if (symbolEventNames) {\n                        const symbolEventName = symbolEventNames[FALSE_STR];\n                        const symbolCaptureEventName = symbolEventNames[TRUE_STR];\n                        const tasks = target[symbolEventName];\n                        const captureTasks = target[symbolCaptureEventName];\n                        if (tasks) {\n                            const removeTasks = tasks.slice();\n                            for (let i = 0; i < removeTasks.length; i++) {\n                                const task = removeTasks[i];\n                                let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                                this[REMOVE_EVENT_LISTENER].call(this, eventName, delegate, task.options);\n                            }\n                        }\n                        if (captureTasks) {\n                            const removeTasks = captureTasks.slice();\n                            for (let i = 0; i < removeTasks.length; i++) {\n                                const task = removeTasks[i];\n                                let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                                this[REMOVE_EVENT_LISTENER].call(this, eventName, delegate, task.options);\n                            }\n                        }\n                    }\n                }\n                if (returnTarget) {\n                    return this;\n                }\n            };\n            // for native toString patch\n            attachOriginToPatched(proto[ADD_EVENT_LISTENER], nativeAddEventListener);\n            attachOriginToPatched(proto[REMOVE_EVENT_LISTENER], nativeRemoveEventListener);\n            if (nativeRemoveAllListeners) {\n                attachOriginToPatched(proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER], nativeRemoveAllListeners);\n            }\n            if (nativeListeners) {\n                attachOriginToPatched(proto[LISTENERS_EVENT_LISTENER], nativeListeners);\n            }\n            return true;\n        }\n        let results = [];\n        for (let i = 0; i < apis.length; i++) {\n            results[i] = patchEventTargetMethods(apis[i], patchOptions);\n        }\n        return results;\n    }\n    function findEventTasks(target, eventName) {\n        if (!eventName) {\n            const foundTasks = [];\n            for (let prop in target) {\n                const match = EVENT_NAME_SYMBOL_REGX.exec(prop);\n                let evtName = match && match[1];\n                if (evtName && (!eventName || evtName === eventName)) {\n                    const tasks = target[prop];\n                    if (tasks) {\n                        for (let i = 0; i < tasks.length; i++) {\n                            foundTasks.push(tasks[i]);\n                        }\n                    }\n                }\n            }\n            return foundTasks;\n        }\n        let symbolEventName = zoneSymbolEventNames$1[eventName];\n        if (!symbolEventName) {\n            prepareEventNames(eventName);\n            symbolEventName = zoneSymbolEventNames$1[eventName];\n        }\n        const captureFalseTasks = target[symbolEventName[FALSE_STR]];\n        const captureTrueTasks = target[symbolEventName[TRUE_STR]];\n        if (!captureFalseTasks) {\n            return captureTrueTasks ? captureTrueTasks.slice() : [];\n        }\n        else {\n            return captureTrueTasks ? captureFalseTasks.concat(captureTrueTasks) :\n                captureFalseTasks.slice();\n        }\n    }\n    function patchEventPrototype(global, api) {\n        const Event = global['Event'];\n        if (Event && Event.prototype) {\n            api.patchMethod(Event.prototype, 'stopImmediatePropagation', (delegate) => function (self, args) {\n                self[IMMEDIATE_PROPAGATION_SYMBOL] = true;\n                // we need to call the native stopImmediatePropagation\n                // in case in some hybrid application, some part of\n                // application will be controlled by zone, some are not\n                delegate && delegate.apply(self, args);\n            });\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function patchCallbacks(api, target, targetName, method, callbacks) {\n        const symbol = Zone.__symbol__(method);\n        if (target[symbol]) {\n            return;\n        }\n        const nativeDelegate = target[symbol] = target[method];\n        target[method] = function (name, opts, options) {\n            if (opts && opts.prototype) {\n                callbacks.forEach(function (callback) {\n                    const source = `${targetName}.${method}::` + callback;\n                    const prototype = opts.prototype;\n                    if (prototype.hasOwnProperty(callback)) {\n                        const descriptor = api.ObjectGetOwnPropertyDescriptor(prototype, callback);\n                        if (descriptor && descriptor.value) {\n                            descriptor.value = api.wrapWithCurrentZone(descriptor.value, source);\n                            api._redefineProperty(opts.prototype, callback, descriptor);\n                        }\n                        else if (prototype[callback]) {\n                            prototype[callback] = api.wrapWithCurrentZone(prototype[callback], source);\n                        }\n                    }\n                    else if (prototype[callback]) {\n                        prototype[callback] = api.wrapWithCurrentZone(prototype[callback], source);\n                    }\n                });\n            }\n            return nativeDelegate.call(target, name, opts, options);\n        };\n        api.attachOriginToPatched(target[method], nativeDelegate);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    const globalEventHandlersEventNames = [\n        'abort',\n        'animationcancel',\n        'animationend',\n        'animationiteration',\n        'auxclick',\n        'beforeinput',\n        'blur',\n        'cancel',\n        'canplay',\n        'canplaythrough',\n        'change',\n        'compositionstart',\n        'compositionupdate',\n        'compositionend',\n        'cuechange',\n        'click',\n        'close',\n        'contextmenu',\n        'curechange',\n        'dblclick',\n        'drag',\n        'dragend',\n        'dragenter',\n        'dragexit',\n        'dragleave',\n        'dragover',\n        'drop',\n        'durationchange',\n        'emptied',\n        'ended',\n        'error',\n        'focus',\n        'focusin',\n        'focusout',\n        'gotpointercapture',\n        'input',\n        'invalid',\n        'keydown',\n        'keypress',\n        'keyup',\n        'load',\n        'loadstart',\n        'loadeddata',\n        'loadedmetadata',\n        'lostpointercapture',\n        'mousedown',\n        'mouseenter',\n        'mouseleave',\n        'mousemove',\n        'mouseout',\n        'mouseover',\n        'mouseup',\n        'mousewheel',\n        'orientationchange',\n        'pause',\n        'play',\n        'playing',\n        'pointercancel',\n        'pointerdown',\n        'pointerenter',\n        'pointerleave',\n        'pointerlockchange',\n        'mozpointerlockchange',\n        'webkitpointerlockerchange',\n        'pointerlockerror',\n        'mozpointerlockerror',\n        'webkitpointerlockerror',\n        'pointermove',\n        'pointout',\n        'pointerover',\n        'pointerup',\n        'progress',\n        'ratechange',\n        'reset',\n        'resize',\n        'scroll',\n        'seeked',\n        'seeking',\n        'select',\n        'selectionchange',\n        'selectstart',\n        'show',\n        'sort',\n        'stalled',\n        'submit',\n        'suspend',\n        'timeupdate',\n        'volumechange',\n        'touchcancel',\n        'touchmove',\n        'touchstart',\n        'touchend',\n        'transitioncancel',\n        'transitionend',\n        'waiting',\n        'wheel'\n    ];\n    const documentEventNames = [\n        'afterscriptexecute', 'beforescriptexecute', 'DOMContentLoaded', 'freeze', 'fullscreenchange',\n        'mozfullscreenchange', 'webkitfullscreenchange', 'msfullscreenchange', 'fullscreenerror',\n        'mozfullscreenerror', 'webkitfullscreenerror', 'msfullscreenerror', 'readystatechange',\n        'visibilitychange', 'resume'\n    ];\n    const windowEventNames = [\n        'absolutedeviceorientation',\n        'afterinput',\n        'afterprint',\n        'appinstalled',\n        'beforeinstallprompt',\n        'beforeprint',\n        'beforeunload',\n        'devicelight',\n        'devicemotion',\n        'deviceorientation',\n        'deviceorientationabsolute',\n        'deviceproximity',\n        'hashchange',\n        'languagechange',\n        'message',\n        'mozbeforepaint',\n        'offline',\n        'online',\n        'paint',\n        'pageshow',\n        'pagehide',\n        'popstate',\n        'rejectionhandled',\n        'storage',\n        'unhandledrejection',\n        'unload',\n        'userproximity',\n        'vrdisplayconnected',\n        'vrdisplaydisconnected',\n        'vrdisplaypresentchange'\n    ];\n    const htmlElementEventNames = [\n        'beforecopy', 'beforecut', 'beforepaste', 'copy', 'cut', 'paste', 'dragstart', 'loadend',\n        'animationstart', 'search', 'transitionrun', 'transitionstart', 'webkitanimationend',\n        'webkitanimationiteration', 'webkitanimationstart', 'webkittransitionend'\n    ];\n    const mediaElementEventNames = ['encrypted', 'waitingforkey', 'msneedkey', 'mozinterruptbegin', 'mozinterruptend'];\n    const ieElementEventNames = [\n        'activate',\n        'afterupdate',\n        'ariarequest',\n        'beforeactivate',\n        'beforedeactivate',\n        'beforeeditfocus',\n        'beforeupdate',\n        'cellchange',\n        'controlselect',\n        'dataavailable',\n        'datasetchanged',\n        'datasetcomplete',\n        'errorupdate',\n        'filterchange',\n        'layoutcomplete',\n        'losecapture',\n        'move',\n        'moveend',\n        'movestart',\n        'propertychange',\n        'resizeend',\n        'resizestart',\n        'rowenter',\n        'rowexit',\n        'rowsdelete',\n        'rowsinserted',\n        'command',\n        'compassneedscalibration',\n        'deactivate',\n        'help',\n        'mscontentzoom',\n        'msmanipulationstatechanged',\n        'msgesturechange',\n        'msgesturedoubletap',\n        'msgestureend',\n        'msgesturehold',\n        'msgesturestart',\n        'msgesturetap',\n        'msgotpointercapture',\n        'msinertiastart',\n        'mslostpointercapture',\n        'mspointercancel',\n        'mspointerdown',\n        'mspointerenter',\n        'mspointerhover',\n        'mspointerleave',\n        'mspointermove',\n        'mspointerout',\n        'mspointerover',\n        'mspointerup',\n        'pointerout',\n        'mssitemodejumplistitemremoved',\n        'msthumbnailclick',\n        'stop',\n        'storagecommit'\n    ];\n    const webglEventNames = ['webglcontextrestored', 'webglcontextlost', 'webglcontextcreationerror'];\n    const formEventNames = ['autocomplete', 'autocompleteerror'];\n    const detailEventNames = ['toggle'];\n    const frameEventNames = ['load'];\n    const frameSetEventNames = ['blur', 'error', 'focus', 'load', 'resize', 'scroll', 'messageerror'];\n    const marqueeEventNames = ['bounce', 'finish', 'start'];\n    const XMLHttpRequestEventNames = [\n        'loadstart', 'progress', 'abort', 'error', 'load', 'progress', 'timeout', 'loadend',\n        'readystatechange'\n    ];\n    const IDBIndexEventNames = ['upgradeneeded', 'complete', 'abort', 'success', 'error', 'blocked', 'versionchange', 'close'];\n    const websocketEventNames = ['close', 'error', 'open', 'message'];\n    const workerEventNames = ['error', 'message'];\n    const eventNames = globalEventHandlersEventNames.concat(webglEventNames, formEventNames, detailEventNames, documentEventNames, windowEventNames, htmlElementEventNames, ieElementEventNames);\n    function filterProperties(target, onProperties, ignoreProperties) {\n        if (!ignoreProperties || ignoreProperties.length === 0) {\n            return onProperties;\n        }\n        const tip = ignoreProperties.filter(ip => ip.target === target);\n        if (!tip || tip.length === 0) {\n            return onProperties;\n        }\n        const targetIgnoreProperties = tip[0].ignoreProperties;\n        return onProperties.filter(op => targetIgnoreProperties.indexOf(op) === -1);\n    }\n    function patchFilteredProperties(target, onProperties, ignoreProperties, prototype) {\n        // check whether target is available, sometimes target will be undefined\n        // because different browser or some 3rd party plugin.\n        if (!target) {\n            return;\n        }\n        const filteredProperties = filterProperties(target, onProperties, ignoreProperties);\n        patchOnProperties(target, filteredProperties, prototype);\n    }\n    function propertyDescriptorPatch(api, _global) {\n        if (isNode && !isMix) {\n            return;\n        }\n        if (Zone[api.symbol('patchEvents')]) {\n            // events are already been patched by legacy patch.\n            return;\n        }\n        const supportsWebSocket = typeof WebSocket !== 'undefined';\n        const ignoreProperties = _global['__Zone_ignore_on_properties'];\n        // for browsers that we can patch the descriptor:  Chrome & Firefox\n        if (isBrowser) {\n            const internalWindow = window;\n            const ignoreErrorProperties = isIE ? [{ target: internalWindow, ignoreProperties: ['error'] }] : [];\n            // in IE/Edge, onProp not exist in window object, but in WindowPrototype\n            // so we need to pass WindowPrototype to check onProp exist or not\n            patchFilteredProperties(internalWindow, eventNames.concat(['messageerror']), ignoreProperties ? ignoreProperties.concat(ignoreErrorProperties) : ignoreProperties, ObjectGetPrototypeOf(internalWindow));\n            patchFilteredProperties(Document.prototype, eventNames, ignoreProperties);\n            if (typeof internalWindow['SVGElement'] !== 'undefined') {\n                patchFilteredProperties(internalWindow['SVGElement'].prototype, eventNames, ignoreProperties);\n            }\n            patchFilteredProperties(Element.prototype, eventNames, ignoreProperties);\n            patchFilteredProperties(HTMLElement.prototype, eventNames, ignoreProperties);\n            patchFilteredProperties(HTMLMediaElement.prototype, mediaElementEventNames, ignoreProperties);\n            patchFilteredProperties(HTMLFrameSetElement.prototype, windowEventNames.concat(frameSetEventNames), ignoreProperties);\n            patchFilteredProperties(HTMLBodyElement.prototype, windowEventNames.concat(frameSetEventNames), ignoreProperties);\n            patchFilteredProperties(HTMLFrameElement.prototype, frameEventNames, ignoreProperties);\n            patchFilteredProperties(HTMLIFrameElement.prototype, frameEventNames, ignoreProperties);\n            const HTMLMarqueeElement = internalWindow['HTMLMarqueeElement'];\n            if (HTMLMarqueeElement) {\n                patchFilteredProperties(HTMLMarqueeElement.prototype, marqueeEventNames, ignoreProperties);\n            }\n            const Worker = internalWindow['Worker'];\n            if (Worker) {\n                patchFilteredProperties(Worker.prototype, workerEventNames, ignoreProperties);\n            }\n        }\n        const XMLHttpRequest = _global['XMLHttpRequest'];\n        if (XMLHttpRequest) {\n            // XMLHttpRequest is not available in ServiceWorker, so we need to check here\n            patchFilteredProperties(XMLHttpRequest.prototype, XMLHttpRequestEventNames, ignoreProperties);\n        }\n        const XMLHttpRequestEventTarget = _global['XMLHttpRequestEventTarget'];\n        if (XMLHttpRequestEventTarget) {\n            patchFilteredProperties(XMLHttpRequestEventTarget && XMLHttpRequestEventTarget.prototype, XMLHttpRequestEventNames, ignoreProperties);\n        }\n        if (typeof IDBIndex !== 'undefined') {\n            patchFilteredProperties(IDBIndex.prototype, IDBIndexEventNames, ignoreProperties);\n            patchFilteredProperties(IDBRequest.prototype, IDBIndexEventNames, ignoreProperties);\n            patchFilteredProperties(IDBOpenDBRequest.prototype, IDBIndexEventNames, ignoreProperties);\n            patchFilteredProperties(IDBDatabase.prototype, IDBIndexEventNames, ignoreProperties);\n            patchFilteredProperties(IDBTransaction.prototype, IDBIndexEventNames, ignoreProperties);\n            patchFilteredProperties(IDBCursor.prototype, IDBIndexEventNames, ignoreProperties);\n        }\n        if (supportsWebSocket) {\n            patchFilteredProperties(WebSocket.prototype, websocketEventNames, ignoreProperties);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    Zone.__load_patch('util', (global, Zone, api) => {\n        api.patchOnProperties = patchOnProperties;\n        api.patchMethod = patchMethod;\n        api.bindArguments = bindArguments;\n        api.patchMacroTask = patchMacroTask;\n        // In earlier version of zone.js (<0.9.0), we use env name `__zone_symbol__BLACK_LISTED_EVENTS` to\n        // define which events will not be patched by `Zone.js`.\n        // In newer version (>=0.9.0), we change the env name to `__zone_symbol__UNPATCHED_EVENTS` to keep\n        // the name consistent with angular repo.\n        // The  `__zone_symbol__BLACK_LISTED_EVENTS` is deprecated, but it is still be supported for\n        // backwards compatibility.\n        const SYMBOL_BLACK_LISTED_EVENTS = Zone.__symbol__('BLACK_LISTED_EVENTS');\n        const SYMBOL_UNPATCHED_EVENTS = Zone.__symbol__('UNPATCHED_EVENTS');\n        if (global[SYMBOL_UNPATCHED_EVENTS]) {\n            global[SYMBOL_BLACK_LISTED_EVENTS] = global[SYMBOL_UNPATCHED_EVENTS];\n        }\n        if (global[SYMBOL_BLACK_LISTED_EVENTS]) {\n            Zone[SYMBOL_BLACK_LISTED_EVENTS] = Zone[SYMBOL_UNPATCHED_EVENTS] =\n                global[SYMBOL_BLACK_LISTED_EVENTS];\n        }\n        api.patchEventPrototype = patchEventPrototype;\n        api.patchEventTarget = patchEventTarget;\n        api.isIEOrEdge = isIEOrEdge;\n        api.ObjectDefineProperty = ObjectDefineProperty;\n        api.ObjectGetOwnPropertyDescriptor = ObjectGetOwnPropertyDescriptor;\n        api.ObjectCreate = ObjectCreate;\n        api.ArraySlice = ArraySlice;\n        api.patchClass = patchClass;\n        api.wrapWithCurrentZone = wrapWithCurrentZone;\n        api.filterProperties = filterProperties;\n        api.attachOriginToPatched = attachOriginToPatched;\n        api._redefineProperty = Object.defineProperty;\n        api.patchCallbacks = patchCallbacks;\n        api.getGlobalObjects = () => ({ globalSources, zoneSymbolEventNames: zoneSymbolEventNames$1, eventNames, isBrowser, isMix, isNode, TRUE_STR,\n            FALSE_STR, ZONE_SYMBOL_PREFIX, ADD_EVENT_LISTENER_STR, REMOVE_EVENT_LISTENER_STR });\n    });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    const taskSymbol = zoneSymbol('zoneTask');\n    function patchTimer(window, setName, cancelName, nameSuffix) {\n        let setNative = null;\n        let clearNative = null;\n        setName += nameSuffix;\n        cancelName += nameSuffix;\n        const tasksByHandleId = {};\n        function scheduleTask(task) {\n            const data = task.data;\n            function timer() {\n                try {\n                    task.invoke.apply(this, arguments);\n                }\n                finally {\n                    // issue-934, task will be cancelled\n                    // even it is a periodic task such as\n                    // setInterval\n                    if (!(task.data && task.data.isPeriodic)) {\n                        if (typeof data.handleId === 'number') {\n                            // in non-nodejs env, we remove timerId\n                            // from local cache\n                            delete tasksByHandleId[data.handleId];\n                        }\n                        else if (data.handleId) {\n                            // Node returns complex objects as handleIds\n                            // we remove task reference from timer object\n                            data.handleId[taskSymbol] = null;\n                        }\n                    }\n                }\n            }\n            data.args[0] = timer;\n            data.handleId = setNative.apply(window, data.args);\n            return task;\n        }\n        function clearTask(task) { return clearNative(task.data.handleId); }\n        setNative =\n            patchMethod(window, setName, (delegate) => function (self, args) {\n                if (typeof args[0] === 'function') {\n                    const options = {\n                        isPeriodic: nameSuffix === 'Interval',\n                        delay: (nameSuffix === 'Timeout' || nameSuffix === 'Interval') ? args[1] || 0 :\n                            undefined,\n                        args: args\n                    };\n                    const task = scheduleMacroTaskWithCurrentZone(setName, args[0], options, scheduleTask, clearTask);\n                    if (!task) {\n                        return task;\n                    }\n                    // Node.js must additionally support the ref and unref functions.\n                    const handle = task.data.handleId;\n                    if (typeof handle === 'number') {\n                        // for non nodejs env, we save handleId: task\n                        // mapping in local cache for clearTimeout\n                        tasksByHandleId[handle] = task;\n                    }\n                    else if (handle) {\n                        // for nodejs env, we save task\n                        // reference in timerId Object for clearTimeout\n                        handle[taskSymbol] = task;\n                    }\n                    // check whether handle is null, because some polyfill or browser\n                    // may return undefined from setTimeout/setInterval/setImmediate/requestAnimationFrame\n                    if (handle && handle.ref && handle.unref && typeof handle.ref === 'function' &&\n                        typeof handle.unref === 'function') {\n                        task.ref = handle.ref.bind(handle);\n                        task.unref = handle.unref.bind(handle);\n                    }\n                    if (typeof handle === 'number' || handle) {\n                        return handle;\n                    }\n                    return task;\n                }\n                else {\n                    // cause an error by calling it directly.\n                    return delegate.apply(window, args);\n                }\n            });\n        clearNative =\n            patchMethod(window, cancelName, (delegate) => function (self, args) {\n                const id = args[0];\n                let task;\n                if (typeof id === 'number') {\n                    // non nodejs env.\n                    task = tasksByHandleId[id];\n                }\n                else {\n                    // nodejs env.\n                    task = id && id[taskSymbol];\n                    // other environments.\n                    if (!task) {\n                        task = id;\n                    }\n                }\n                if (task && typeof task.type === 'string') {\n                    if (task.state !== 'notScheduled' &&\n                        (task.cancelFn && task.data.isPeriodic || task.runCount === 0)) {\n                        if (typeof id === 'number') {\n                            delete tasksByHandleId[id];\n                        }\n                        else if (id) {\n                            id[taskSymbol] = null;\n                        }\n                        // Do not cancel already canceled functions\n                        task.zone.cancelTask(task);\n                    }\n                }\n                else {\n                    // cause an error by calling it directly.\n                    delegate.apply(window, args);\n                }\n            });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function patchCustomElements(_global, api) {\n        const { isBrowser, isMix } = api.getGlobalObjects();\n        if ((!isBrowser && !isMix) || !_global['customElements'] || !('customElements' in _global)) {\n            return;\n        }\n        const callbacks = ['connectedCallback', 'disconnectedCallback', 'adoptedCallback', 'attributeChangedCallback'];\n        api.patchCallbacks(api, _global.customElements, 'customElements', 'define', callbacks);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function eventTargetPatch(_global, api) {\n        if (Zone[api.symbol('patchEventTarget')]) {\n            // EventTarget is already patched.\n            return;\n        }\n        const { eventNames, zoneSymbolEventNames, TRUE_STR, FALSE_STR, ZONE_SYMBOL_PREFIX } = api.getGlobalObjects();\n        //  predefine all __zone_symbol__ + eventName + true/false string\n        for (let i = 0; i < eventNames.length; i++) {\n            const eventName = eventNames[i];\n            const falseEventName = eventName + FALSE_STR;\n            const trueEventName = eventName + TRUE_STR;\n            const symbol = ZONE_SYMBOL_PREFIX + falseEventName;\n            const symbolCapture = ZONE_SYMBOL_PREFIX + trueEventName;\n            zoneSymbolEventNames[eventName] = {};\n            zoneSymbolEventNames[eventName][FALSE_STR] = symbol;\n            zoneSymbolEventNames[eventName][TRUE_STR] = symbolCapture;\n        }\n        const EVENT_TARGET = _global['EventTarget'];\n        if (!EVENT_TARGET || !EVENT_TARGET.prototype) {\n            return;\n        }\n        api.patchEventTarget(_global, [EVENT_TARGET && EVENT_TARGET.prototype]);\n        return true;\n    }\n    function patchEvent(global, api) {\n        api.patchEventPrototype(global, api);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    Zone.__load_patch('legacy', (global) => {\n        const legacyPatch = global[Zone.__symbol__('legacyPatch')];\n        if (legacyPatch) {\n            legacyPatch();\n        }\n    });\n    Zone.__load_patch('timers', (global) => {\n        const set = 'set';\n        const clear = 'clear';\n        patchTimer(global, set, clear, 'Timeout');\n        patchTimer(global, set, clear, 'Interval');\n        patchTimer(global, set, clear, 'Immediate');\n    });\n    Zone.__load_patch('requestAnimationFrame', (global) => {\n        patchTimer(global, 'request', 'cancel', 'AnimationFrame');\n        patchTimer(global, 'mozRequest', 'mozCancel', 'AnimationFrame');\n        patchTimer(global, 'webkitRequest', 'webkitCancel', 'AnimationFrame');\n    });\n    Zone.__load_patch('blocking', (global, Zone) => {\n        const blockingMethods = ['alert', 'prompt', 'confirm'];\n        for (let i = 0; i < blockingMethods.length; i++) {\n            const name = blockingMethods[i];\n            patchMethod(global, name, (delegate, symbol, name) => {\n                return function (s, args) {\n                    return Zone.current.run(delegate, global, args, name);\n                };\n            });\n        }\n    });\n    Zone.__load_patch('EventTarget', (global, Zone, api) => {\n        patchEvent(global, api);\n        eventTargetPatch(global, api);\n        // patch XMLHttpRequestEventTarget's addEventListener/removeEventListener\n        const XMLHttpRequestEventTarget = global['XMLHttpRequestEventTarget'];\n        if (XMLHttpRequestEventTarget && XMLHttpRequestEventTarget.prototype) {\n            api.patchEventTarget(global, [XMLHttpRequestEventTarget.prototype]);\n        }\n        patchClass('MutationObserver');\n        patchClass('WebKitMutationObserver');\n        patchClass('IntersectionObserver');\n        patchClass('FileReader');\n    });\n    Zone.__load_patch('on_property', (global, Zone, api) => {\n        propertyDescriptorPatch(api, global);\n    });\n    Zone.__load_patch('customElements', (global, Zone, api) => {\n        patchCustomElements(global, api);\n    });\n    Zone.__load_patch('XHR', (global, Zone) => {\n        // Treat XMLHttpRequest as a macrotask.\n        patchXHR(global);\n        const XHR_TASK = zoneSymbol('xhrTask');\n        const XHR_SYNC = zoneSymbol('xhrSync');\n        const XHR_LISTENER = zoneSymbol('xhrListener');\n        const XHR_SCHEDULED = zoneSymbol('xhrScheduled');\n        const XHR_URL = zoneSymbol('xhrURL');\n        const XHR_ERROR_BEFORE_SCHEDULED = zoneSymbol('xhrErrorBeforeScheduled');\n        function patchXHR(window) {\n            const XMLHttpRequest = window['XMLHttpRequest'];\n            if (!XMLHttpRequest) {\n                // XMLHttpRequest is not available in service worker\n                return;\n            }\n            const XMLHttpRequestPrototype = XMLHttpRequest.prototype;\n            function findPendingTask(target) { return target[XHR_TASK]; }\n            let oriAddListener = XMLHttpRequestPrototype[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n            let oriRemoveListener = XMLHttpRequestPrototype[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n            if (!oriAddListener) {\n                const XMLHttpRequestEventTarget = window['XMLHttpRequestEventTarget'];\n                if (XMLHttpRequestEventTarget) {\n                    const XMLHttpRequestEventTargetPrototype = XMLHttpRequestEventTarget.prototype;\n                    oriAddListener = XMLHttpRequestEventTargetPrototype[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n                    oriRemoveListener = XMLHttpRequestEventTargetPrototype[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n                }\n            }\n            const READY_STATE_CHANGE = 'readystatechange';\n            const SCHEDULED = 'scheduled';\n            function scheduleTask(task) {\n                const data = task.data;\n                const target = data.target;\n                target[XHR_SCHEDULED] = false;\n                target[XHR_ERROR_BEFORE_SCHEDULED] = false;\n                // remove existing event listener\n                const listener = target[XHR_LISTENER];\n                if (!oriAddListener) {\n                    oriAddListener = target[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n                    oriRemoveListener = target[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n                }\n                if (listener) {\n                    oriRemoveListener.call(target, READY_STATE_CHANGE, listener);\n                }\n                const newListener = target[XHR_LISTENER] = () => {\n                    if (target.readyState === target.DONE) {\n                        // sometimes on some browsers XMLHttpRequest will fire onreadystatechange with\n                        // readyState=4 multiple times, so we need to check task state here\n                        if (!data.aborted && target[XHR_SCHEDULED] && task.state === SCHEDULED) {\n                            // check whether the xhr has registered onload listener\n                            // if that is the case, the task should invoke after all\n                            // onload listeners finish.\n                            const loadTasks = target[Zone.__symbol__('loadfalse')];\n                            if (loadTasks && loadTasks.length > 0) {\n                                const oriInvoke = task.invoke;\n                                task.invoke = function () {\n                                    // need to load the tasks again, because in other\n                                    // load listener, they may remove themselves\n                                    const loadTasks = target[Zone.__symbol__('loadfalse')];\n                                    for (let i = 0; i < loadTasks.length; i++) {\n                                        if (loadTasks[i] === task) {\n                                            loadTasks.splice(i, 1);\n                                        }\n                                    }\n                                    if (!data.aborted && task.state === SCHEDULED) {\n                                        oriInvoke.call(task);\n                                    }\n                                };\n                                loadTasks.push(task);\n                            }\n                            else {\n                                task.invoke();\n                            }\n                        }\n                        else if (!data.aborted && target[XHR_SCHEDULED] === false) {\n                            // error occurs when xhr.send()\n                            target[XHR_ERROR_BEFORE_SCHEDULED] = true;\n                        }\n                    }\n                };\n                oriAddListener.call(target, READY_STATE_CHANGE, newListener);\n                const storedTask = target[XHR_TASK];\n                if (!storedTask) {\n                    target[XHR_TASK] = task;\n                }\n                sendNative.apply(target, data.args);\n                target[XHR_SCHEDULED] = true;\n                return task;\n            }\n            function placeholderCallback() { }\n            function clearTask(task) {\n                const data = task.data;\n                // Note - ideally, we would call data.target.removeEventListener here, but it's too late\n                // to prevent it from firing. So instead, we store info for the event listener.\n                data.aborted = true;\n                return abortNative.apply(data.target, data.args);\n            }\n            const openNative = patchMethod(XMLHttpRequestPrototype, 'open', () => function (self, args) {\n                self[XHR_SYNC] = args[2] == false;\n                self[XHR_URL] = args[1];\n                return openNative.apply(self, args);\n            });\n            const XMLHTTPREQUEST_SOURCE = 'XMLHttpRequest.send';\n            const fetchTaskAborting = zoneSymbol('fetchTaskAborting');\n            const fetchTaskScheduling = zoneSymbol('fetchTaskScheduling');\n            const sendNative = patchMethod(XMLHttpRequestPrototype, 'send', () => function (self, args) {\n                if (Zone.current[fetchTaskScheduling] === true) {\n                    // a fetch is scheduling, so we are using xhr to polyfill fetch\n                    // and because we already schedule macroTask for fetch, we should\n                    // not schedule a macroTask for xhr again\n                    return sendNative.apply(self, args);\n                }\n                if (self[XHR_SYNC]) {\n                    // if the XHR is sync there is no task to schedule, just execute the code.\n                    return sendNative.apply(self, args);\n                }\n                else {\n                    const options = { target: self, url: self[XHR_URL], isPeriodic: false, args: args, aborted: false };\n                    const task = scheduleMacroTaskWithCurrentZone(XMLHTTPREQUEST_SOURCE, placeholderCallback, options, scheduleTask, clearTask);\n                    if (self && self[XHR_ERROR_BEFORE_SCHEDULED] === true && !options.aborted &&\n                        task.state === SCHEDULED) {\n                        // xhr request throw error when send\n                        // we should invoke task instead of leaving a scheduled\n                        // pending macroTask\n                        task.invoke();\n                    }\n                }\n            });\n            const abortNative = patchMethod(XMLHttpRequestPrototype, 'abort', () => function (self, args) {\n                const task = findPendingTask(self);\n                if (task && typeof task.type == 'string') {\n                    // If the XHR has already completed, do nothing.\n                    // If the XHR has already been aborted, do nothing.\n                    // Fix #569, call abort multiple times before done will cause\n                    // macroTask task count be negative number\n                    if (task.cancelFn == null || (task.data && task.data.aborted)) {\n                        return;\n                    }\n                    task.zone.cancelTask(task);\n                }\n                else if (Zone.current[fetchTaskAborting] === true) {\n                    // the abort is called from fetch polyfill, we need to call native abort of XHR.\n                    return abortNative.apply(self, args);\n                }\n                // Otherwise, we are trying to abort an XHR which has not yet been sent, so there is no\n                // task\n                // to cancel. Do nothing.\n            });\n        }\n    });\n    Zone.__load_patch('geolocation', (global) => {\n        /// GEO_LOCATION\n        if (global['navigator'] && global['navigator'].geolocation) {\n            patchPrototype(global['navigator'].geolocation, ['getCurrentPosition', 'watchPosition']);\n        }\n    });\n    Zone.__load_patch('PromiseRejectionEvent', (global, Zone) => {\n        // handle unhandled promise rejection\n        function findPromiseRejectionHandler(evtName) {\n            return function (e) {\n                const eventTasks = findEventTasks(global, evtName);\n                eventTasks.forEach(eventTask => {\n                    // windows has added unhandledrejection event listener\n                    // trigger the event listener\n                    const PromiseRejectionEvent = global['PromiseRejectionEvent'];\n                    if (PromiseRejectionEvent) {\n                        const evt = new PromiseRejectionEvent(evtName, { promise: e.promise, reason: e.rejection });\n                        eventTask.invoke(evt);\n                    }\n                });\n            };\n        }\n        if (global['PromiseRejectionEvent']) {\n            Zone[zoneSymbol('unhandledPromiseRejectionHandler')] =\n                findPromiseRejectionHandler('unhandledrejection');\n            Zone[zoneSymbol('rejectionHandledHandler')] =\n                findPromiseRejectionHandler('rejectionhandled');\n        }\n    });\n\n})));\n"]},"metadata":{},"sourceType":"module"}