{"ast":null,"code":"/**\n * @license Angular v9.1.9\n * (c) 2010-2020 Google LLC. https://angular.io/\n * License: MIT\n */\nimport { ɵDomAdapter, ɵsetRootDomAdapter, ɵparseCookieValue, ɵgetDOM, DOCUMENT, ɵPLATFORM_BROWSER_ID, CommonModule } from '@angular/common';\nimport * as ɵngcc0 from '@angular/core';\nexport { ɵgetDOM } from '@angular/common';\nimport { ɵglobal, InjectionToken, ApplicationInitStatus, APP_INITIALIZER, Injector, setTestabilityGetter, ApplicationRef, NgZone, ɵgetDebugNodeR2, NgProbeToken, Optional, Injectable, Inject, ViewEncapsulation, APP_ID, RendererStyleFlags2, ɵConsole, NgModule, forwardRef, ɵɵdefineInjectable, ɵɵinject, SecurityContext, ɵallowSanitizationBypassAndThrow, ɵunwrapSafeValue, ɵgetSanitizationBypassType, ɵ_sanitizeUrl, ɵ_sanitizeStyle, ɵ_sanitizeHtml, ɵbypassSanitizationTrustHtml, ɵbypassSanitizationTrustStyle, ɵbypassSanitizationTrustScript, ɵbypassSanitizationTrustUrl, ɵbypassSanitizationTrustResourceUrl, INJECTOR, ErrorHandler, ɵsetDocument, PLATFORM_ID, PLATFORM_INITIALIZER, Sanitizer, createPlatformFactory, platformCore, ɵINJECTOR_SCOPE, RendererFactory2, Testability, ApplicationModule, SkipSelf, Version } from '@angular/core';\n/**\n * @fileoverview added by tsickle\n * Generated from: packages/platform-browser/src/browser/generic_browser_adapter.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Provides DOM operations in any browser environment.\n *\n * \\@security Tread carefully! Interacting with the DOM directly is dangerous and\n * can introduce XSS risks.\n * @abstract\n */\n\nclass GenericBrowserDomAdapter extends ɵDomAdapter {\n  constructor() {\n    super();\n  }\n  /**\n   * @return {?}\n   */\n\n\n  supportsDOMEvents() {\n    return true;\n  }\n\n}\n/**\n * @fileoverview added by tsickle\n * Generated from: packages/platform-browser/src/browser/browser_adapter.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nconst ɵ0 =\n/**\n* @return {?}\n*/\n() => {\n  if (ɵglobal['Node']) {\n    return ɵglobal['Node'].prototype.contains ||\n    /**\n    * @this {?}\n    * @param {?} node\n    * @return {?}\n    */\n    function (node) {\n      return !!(this.compareDocumentPosition(node) & 16);\n    };\n  }\n\n  return (\n    /** @type {?} */\n    undefined\n  );\n};\n/** @type {?} */\n\n\nconst nodeContains = ɵ0();\n/**\n * A `DomAdapter` powered by full browser DOM APIs.\n *\n * \\@security Tread carefully! Interacting with the DOM directly is dangerous and\n * can introduce XSS risks.\n */\n\n/* tslint:disable:requireParameterType no-console */\n\nclass BrowserDomAdapter extends GenericBrowserDomAdapter {\n  /**\n   * @return {?}\n   */\n  static makeCurrent() {\n    ɵsetRootDomAdapter(new BrowserDomAdapter());\n  }\n  /**\n   * @param {?} el\n   * @param {?} name\n   * @return {?}\n   */\n\n\n  getProperty(el, name) {\n    return (\n      /** @type {?} */\n      el[name]\n    );\n  }\n  /**\n   * @param {?} error\n   * @return {?}\n   */\n\n\n  log(error) {\n    if (window.console) {\n      window.console.log && window.console.log(error);\n    }\n  }\n  /**\n   * @param {?} error\n   * @return {?}\n   */\n\n\n  logGroup(error) {\n    if (window.console) {\n      window.console.group && window.console.group(error);\n    }\n  }\n  /**\n   * @return {?}\n   */\n\n\n  logGroupEnd() {\n    if (window.console) {\n      window.console.groupEnd && window.console.groupEnd();\n    }\n  }\n  /**\n   * @param {?} el\n   * @param {?} evt\n   * @param {?} listener\n   * @return {?}\n   */\n\n\n  onAndCancel(el, evt, listener) {\n    el.addEventListener(evt, listener, false); // Needed to follow Dart's subscription semantic, until fix of\n    // https://code.google.com/p/dart/issues/detail?id=17406\n\n    return (\n      /**\n      * @return {?}\n      */\n      () => {\n        el.removeEventListener(evt, listener, false);\n      }\n    );\n  }\n  /**\n   * @param {?} el\n   * @param {?} evt\n   * @return {?}\n   */\n\n\n  dispatchEvent(el, evt) {\n    el.dispatchEvent(evt);\n  }\n  /**\n   * @param {?} node\n   * @return {?}\n   */\n\n\n  remove(node) {\n    if (node.parentNode) {\n      node.parentNode.removeChild(node);\n    }\n\n    return node;\n  }\n  /**\n   * @param {?} el\n   * @return {?}\n   */\n\n\n  getValue(el) {\n    return el.value;\n  }\n  /**\n   * @param {?} tagName\n   * @param {?=} doc\n   * @return {?}\n   */\n\n\n  createElement(tagName, doc) {\n    doc = doc || this.getDefaultDocument();\n    return doc.createElement(tagName);\n  }\n  /**\n   * @return {?}\n   */\n\n\n  createHtmlDocument() {\n    return document.implementation.createHTMLDocument('fakeTitle');\n  }\n  /**\n   * @return {?}\n   */\n\n\n  getDefaultDocument() {\n    return document;\n  }\n  /**\n   * @param {?} node\n   * @return {?}\n   */\n\n\n  isElementNode(node) {\n    return node.nodeType === Node.ELEMENT_NODE;\n  }\n  /**\n   * @param {?} node\n   * @return {?}\n   */\n\n\n  isShadowRoot(node) {\n    return node instanceof DocumentFragment;\n  }\n  /**\n   * @param {?} doc\n   * @param {?} target\n   * @return {?}\n   */\n\n\n  getGlobalEventTarget(doc, target) {\n    if (target === 'window') {\n      return window;\n    }\n\n    if (target === 'document') {\n      return doc;\n    }\n\n    if (target === 'body') {\n      return doc.body;\n    }\n\n    return null;\n  }\n  /**\n   * @return {?}\n   */\n\n\n  getHistory() {\n    return window.history;\n  }\n  /**\n   * @return {?}\n   */\n\n\n  getLocation() {\n    return window.location;\n  }\n  /**\n   * @param {?} doc\n   * @return {?}\n   */\n\n\n  getBaseHref(doc) {\n    /** @type {?} */\n    const href = getBaseElementHref();\n    return href == null ? null : relativePath(href);\n  }\n  /**\n   * @return {?}\n   */\n\n\n  resetBaseElement() {\n    baseElement = null;\n  }\n  /**\n   * @return {?}\n   */\n\n\n  getUserAgent() {\n    return window.navigator.userAgent;\n  }\n  /**\n   * @return {?}\n   */\n\n\n  performanceNow() {\n    // performance.now() is not available in all browsers, see\n    // http://caniuse.com/#search=performance.now\n    return window.performance && window.performance.now ? window.performance.now() : new Date().getTime();\n  }\n  /**\n   * @return {?}\n   */\n\n\n  supportsCookies() {\n    return true;\n  }\n  /**\n   * @param {?} name\n   * @return {?}\n   */\n\n\n  getCookie(name) {\n    return ɵparseCookieValue(document.cookie, name);\n  }\n\n}\n/** @type {?} */\n\n\nlet baseElement = null;\n/**\n * @return {?}\n */\n\nfunction getBaseElementHref() {\n  if (!baseElement) {\n    baseElement =\n    /** @type {?} */\n    document.querySelector('base');\n\n    if (!baseElement) {\n      return null;\n    }\n  }\n\n  return baseElement.getAttribute('href');\n} // based on urlUtils.js in AngularJS 1\n\n/** @type {?} */\n\n\nlet urlParsingNode;\n/**\n * @param {?} url\n * @return {?}\n */\n\nfunction relativePath(url) {\n  if (!urlParsingNode) {\n    urlParsingNode = document.createElement('a');\n  }\n\n  urlParsingNode.setAttribute('href', url);\n  return urlParsingNode.pathname.charAt(0) === '/' ? urlParsingNode.pathname : '/' + urlParsingNode.pathname;\n}\n/**\n * @fileoverview added by tsickle\n * Generated from: packages/platform-browser/src/browser/server-transition.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * An id that identifies a particular application being bootstrapped, that should\n * match across the client/server boundary.\n * @type {?}\n */\n\n\nconst TRANSITION_ID = new InjectionToken('TRANSITION_ID');\n/**\n * @param {?} transitionId\n * @param {?} document\n * @param {?} injector\n * @return {?}\n */\n\nfunction appInitializerFactory(transitionId, document, injector) {\n  return (\n    /**\n    * @return {?}\n    */\n    () => {\n      // Wait for all application initializers to be completed before removing the styles set by\n      // the server.\n      injector.get(ApplicationInitStatus).donePromise.then(\n      /**\n      * @return {?}\n      */\n      () => {\n        /** @type {?} */\n        const dom = ɵgetDOM();\n        /** @type {?} */\n\n        const styles = Array.prototype.slice.apply(document.querySelectorAll(`style[ng-transition]`));\n        styles.filter(\n        /**\n        * @param {?} el\n        * @return {?}\n        */\n        el => el.getAttribute('ng-transition') === transitionId).forEach(\n        /**\n        * @param {?} el\n        * @return {?}\n        */\n        el => dom.remove(el));\n      });\n    }\n  );\n}\n/** @type {?} */\n\n\nconst SERVER_TRANSITION_PROVIDERS = [{\n  provide: APP_INITIALIZER,\n  useFactory: appInitializerFactory,\n  deps: [TRANSITION_ID, DOCUMENT, Injector],\n  multi: true\n}];\n/**\n * @fileoverview added by tsickle\n * Generated from: packages/platform-browser/src/browser/testability.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nclass BrowserGetTestability {\n  /**\n   * @return {?}\n   */\n  static init() {\n    setTestabilityGetter(new BrowserGetTestability());\n  }\n  /**\n   * @param {?} registry\n   * @return {?}\n   */\n\n\n  addToWindow(registry) {\n    ɵglobal['getAngularTestability'] =\n    /**\n    * @param {?} elem\n    * @param {?=} findInAncestors\n    * @return {?}\n    */\n    (elem, findInAncestors = true) => {\n      /** @type {?} */\n      const testability = registry.findTestabilityInTree(elem, findInAncestors);\n\n      if (testability == null) {\n        throw new Error('Could not find testability for element.');\n      }\n\n      return testability;\n    };\n\n    ɵglobal['getAllAngularTestabilities'] =\n    /**\n    * @return {?}\n    */\n    () => registry.getAllTestabilities();\n\n    ɵglobal['getAllAngularRootElements'] =\n    /**\n    * @return {?}\n    */\n    () => registry.getAllRootElements();\n    /** @type {?} */\n\n\n    const whenAllStable =\n    /**\n    * @param {?} callback\n    * @return {?}\n    */\n    (callback\n    /** TODO #9100 */\n    ) => {\n      /** @type {?} */\n      const testabilities = ɵglobal['getAllAngularTestabilities']();\n      /** @type {?} */\n\n      let count = testabilities.length;\n      /** @type {?} */\n\n      let didWork = false;\n      /** @type {?} */\n\n      const decrement =\n      /**\n      * @param {?} didWork_\n      * @return {?}\n      */\n      function (didWork_\n      /** TODO #9100 */\n      ) {\n        didWork = didWork || didWork_;\n        count--;\n\n        if (count == 0) {\n          callback(didWork);\n        }\n      };\n\n      testabilities.forEach(\n      /**\n      * @param {?} testability\n      * @return {?}\n      */\n      function (testability\n      /** TODO #9100 */\n      ) {\n        testability.whenStable(decrement);\n      });\n    };\n\n    if (!ɵglobal['frameworkStabilizers']) {\n      ɵglobal['frameworkStabilizers'] = [];\n    }\n\n    ɵglobal['frameworkStabilizers'].push(whenAllStable);\n  }\n  /**\n   * @param {?} registry\n   * @param {?} elem\n   * @param {?} findInAncestors\n   * @return {?}\n   */\n\n\n  findTestabilityInTree(registry, elem, findInAncestors) {\n    if (elem == null) {\n      return null;\n    }\n    /** @type {?} */\n\n\n    const t = registry.getTestability(elem);\n\n    if (t != null) {\n      return t;\n    } else if (!findInAncestors) {\n      return null;\n    }\n\n    if (ɵgetDOM().isShadowRoot(elem)) {\n      return this.findTestabilityInTree(registry,\n      /** @type {?} */\n      elem.host, true);\n    }\n\n    return this.findTestabilityInTree(registry, elem.parentElement, true);\n  }\n\n}\n/**\n * @fileoverview added by tsickle\n * Generated from: packages/platform-browser/src/dom/util.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/** @type {?} */\n\n\nconst CAMEL_CASE_REGEXP = /([A-Z])/g;\n/** @type {?} */\n\nconst DASH_CASE_REGEXP = /-([a-z])/g;\n/**\n * @param {?} input\n * @return {?}\n */\n\nfunction camelCaseToDashCase(input) {\n  return input.replace(CAMEL_CASE_REGEXP,\n  /**\n  * @param {...?} m\n  * @return {?}\n  */\n  (...m) => '-' + m[1].toLowerCase());\n}\n/**\n * @param {?} input\n * @return {?}\n */\n\n\nfunction dashCaseToCamelCase(input) {\n  return input.replace(DASH_CASE_REGEXP,\n  /**\n  * @param {...?} m\n  * @return {?}\n  */\n  (...m) => m[1].toUpperCase());\n}\n/**\n * Exports the value under a given `name` in the global property `ng`. For example `ng.probe` if\n * `name` is `'probe'`.\n * @param {?} name Name under which it will be exported. Keep in mind this will be a property of the\n * global `ng` object.\n * @param {?} value The value to export.\n * @return {?}\n */\n\n\nfunction exportNgVar(name, value) {\n  if (typeof COMPILED === 'undefined' || !COMPILED) {\n    // Note: we can't export `ng` when using closure enhanced optimization as:\n    // - closure declares globals itself for minified names, which sometimes clobber our `ng` global\n    // - we can't declare a closure extern as the namespace `ng` is already used within Google\n    //   for typings for angularJS (via `goog.provide('ng....')`).\n\n    /** @type {?} */\n    const ng = ɵglobal['ng'] =\n    /** @type {?} */\n    ɵglobal['ng'] || {};\n    ng[name] = value;\n  }\n}\n/**\n * @fileoverview added by tsickle\n * Generated from: packages/platform-browser/src/dom/debug/ng_probe.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nconst ɵ0$1 =\n/**\n* @return {?}\n*/\n() => ({\n  'ApplicationRef': ApplicationRef,\n  'NgZone': NgZone\n});\n/** @type {?} */\n\n\nconst CORE_TOKENS = ɵ0$1();\n/** @type {?} */\n\nconst INSPECT_GLOBAL_NAME = 'probe';\n/** @type {?} */\n\nconst CORE_TOKENS_GLOBAL_NAME = 'coreTokens';\n/**\n * Returns a {\\@link DebugElement} for the given native DOM element, or\n * null if the given native element does not have an Angular view associated\n * with it.\n * @param {?} element\n * @return {?}\n */\n\nfunction inspectNativeElementR2(element) {\n  return ɵgetDebugNodeR2(element);\n}\n/**\n * @param {?} coreTokens\n * @return {?}\n */\n\n\nfunction _createNgProbeR2(coreTokens) {\n  exportNgVar(INSPECT_GLOBAL_NAME, inspectNativeElementR2);\n  exportNgVar(CORE_TOKENS_GLOBAL_NAME, Object.assign(Object.assign({}, CORE_TOKENS), _ngProbeTokensToMap(coreTokens || [])));\n  return (\n    /**\n    * @return {?}\n    */\n    () => inspectNativeElementR2\n  );\n}\n/**\n * @param {?} tokens\n * @return {?}\n */\n\n\nfunction _ngProbeTokensToMap(tokens) {\n  return tokens.reduce(\n  /**\n  * @param {?} prev\n  * @param {?} t\n  * @return {?}\n  */\n  (prev, t) => (prev[t.name] = t.token, prev), {});\n}\n/**\n * In Ivy, we don't support NgProbe because we have our own set of testing utilities\n * with more robust functionality.\n *\n * We shouldn't bring in NgProbe because it prevents DebugNode and friends from\n * tree-shaking properly.\n * @type {?}\n */\n\n\nconst ELEMENT_PROBE_PROVIDERS__POST_R3__ = [];\n/**\n * Providers which support debugging Angular applications (e.g. via `ng.probe`).\n * @type {?}\n */\n\nconst ELEMENT_PROBE_PROVIDERS__PRE_R3__ = [{\n  provide: APP_INITIALIZER,\n  useFactory: _createNgProbeR2,\n  deps: [[NgProbeToken, new Optional()]],\n  multi: true\n}];\n/** @type {?} */\n\nconst ELEMENT_PROBE_PROVIDERS = ELEMENT_PROBE_PROVIDERS__POST_R3__;\n/**\n * @fileoverview added by tsickle\n * Generated from: packages/platform-browser/src/dom/events/event_manager.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * The injection token for the event-manager plug-in service.\n *\n * \\@publicApi\n * @type {?}\n */\n\nconst EVENT_MANAGER_PLUGINS = new InjectionToken('EventManagerPlugins');\n/**\n * An injectable service that provides event management for Angular\n * through a browser plug-in.\n *\n * \\@publicApi\n */\n\nclass EventManager {\n  /**\n   * Initializes an instance of the event-manager service.\n   * @param {?} plugins\n   * @param {?} _zone\n   */\n  constructor(plugins, _zone) {\n    this._zone = _zone;\n    this._eventNameToPlugin = new Map();\n    plugins.forEach(\n    /**\n    * @template THIS\n    * @this {THIS}\n    * @param {?} p\n    * @return {THIS}\n    */\n    p => p.manager = this);\n    this._plugins = plugins.slice().reverse();\n  }\n  /**\n   * Registers a handler for a specific element and event.\n   *\n   * @param {?} element The HTML element to receive event notifications.\n   * @param {?} eventName The name of the event to listen for.\n   * @param {?} handler A function to call when the notification occurs. Receives the\n   * event object as an argument.\n   * @return {?} A callback function that can be used to remove the handler.\n   */\n\n\n  addEventListener(element, eventName, handler) {\n    /** @type {?} */\n    const plugin = this._findPluginFor(eventName);\n\n    return plugin.addEventListener(element, eventName, handler);\n  }\n  /**\n   * Registers a global handler for an event in a target view.\n   *\n   * @param {?} target A target for global event notifications. One of \"window\", \"document\", or \"body\".\n   * @param {?} eventName The name of the event to listen for.\n   * @param {?} handler A function to call when the notification occurs. Receives the\n   * event object as an argument.\n   * @return {?} A callback function that can be used to remove the handler.\n   */\n\n\n  addGlobalEventListener(target, eventName, handler) {\n    /** @type {?} */\n    const plugin = this._findPluginFor(eventName);\n\n    return plugin.addGlobalEventListener(target, eventName, handler);\n  }\n  /**\n   * Retrieves the compilation zone in which event listeners are registered.\n   * @return {?}\n   */\n\n\n  getZone() {\n    return this._zone;\n  }\n  /**\n   * \\@internal\n   * @param {?} eventName\n   * @return {?}\n   */\n\n\n  _findPluginFor(eventName) {\n    /** @type {?} */\n    const plugin = this._eventNameToPlugin.get(eventName);\n\n    if (plugin) {\n      return plugin;\n    }\n    /** @type {?} */\n\n\n    const plugins = this._plugins;\n\n    for (let i = 0; i < plugins.length; i++) {\n      /** @type {?} */\n      const plugin = plugins[i];\n\n      if (plugin.supports(eventName)) {\n        this._eventNameToPlugin.set(eventName, plugin);\n\n        return plugin;\n      }\n    }\n\n    throw new Error(`No event manager plugin found for event ${eventName}`);\n  }\n\n}\n\nEventManager.ɵfac = function EventManager_Factory(t) {\n  return new (t || EventManager)(ɵngcc0.ɵɵinject(EVENT_MANAGER_PLUGINS), ɵngcc0.ɵɵinject(ɵngcc0.NgZone));\n};\n\nEventManager.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: EventManager,\n  factory: EventManager.ɵfac\n});\n/** @nocollapse */\n\nEventManager.ctorParameters = () => [{\n  type: Array,\n  decorators: [{\n    type: Inject,\n    args: [EVENT_MANAGER_PLUGINS]\n  }]\n}, {\n  type: NgZone\n}];\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(EventManager, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: Array,\n      decorators: [{\n        type: Inject,\n        args: [EVENT_MANAGER_PLUGINS]\n      }]\n    }, {\n      type: ɵngcc0.NgZone\n    }];\n  }, null);\n})();\n\nif (false) {\n  /**\n   * @type {?}\n   * @private\n   */\n  EventManager.prototype._plugins;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  EventManager.prototype._eventNameToPlugin;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  EventManager.prototype._zone;\n}\n/**\n * @abstract\n */\n\n\nclass EventManagerPlugin {\n  /**\n   * @param {?} _doc\n   */\n  constructor(_doc) {\n    this._doc = _doc;\n  }\n  /**\n   * @param {?} element\n   * @param {?} eventName\n   * @param {?} handler\n   * @return {?}\n   */\n\n\n  addGlobalEventListener(element, eventName, handler) {\n    /** @type {?} */\n    const target = ɵgetDOM().getGlobalEventTarget(this._doc, element);\n\n    if (!target) {\n      throw new Error(`Unsupported event target ${target} for event ${eventName}`);\n    }\n\n    return this.addEventListener(target, eventName, handler);\n  }\n\n}\n\nif (false) {\n  /** @type {?} */\n  EventManagerPlugin.prototype.manager;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  EventManagerPlugin.prototype._doc;\n  /**\n   * @abstract\n   * @param {?} eventName\n   * @return {?}\n   */\n\n  EventManagerPlugin.prototype.supports = function (eventName) {};\n  /**\n   * @abstract\n   * @param {?} element\n   * @param {?} eventName\n   * @param {?} handler\n   * @return {?}\n   */\n\n\n  EventManagerPlugin.prototype.addEventListener = function (element, eventName, handler) {};\n}\n/**\n * @fileoverview added by tsickle\n * Generated from: packages/platform-browser/src/dom/shared_styles_host.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nclass SharedStylesHost {\n  constructor() {\n    /**\n     * \\@internal\n     */\n    this._stylesSet = new Set();\n  }\n  /**\n   * @param {?} styles\n   * @return {?}\n   */\n\n\n  addStyles(styles) {\n    /** @type {?} */\n    const additions = new Set();\n    styles.forEach(\n    /**\n    * @param {?} style\n    * @return {?}\n    */\n    style => {\n      if (!this._stylesSet.has(style)) {\n        this._stylesSet.add(style);\n\n        additions.add(style);\n      }\n    });\n    this.onStylesAdded(additions);\n  }\n  /**\n   * @param {?} additions\n   * @return {?}\n   */\n\n\n  onStylesAdded(additions) {}\n  /**\n   * @return {?}\n   */\n\n\n  getAllStyles() {\n    return Array.from(this._stylesSet);\n  }\n\n}\n\nSharedStylesHost.ɵfac = function SharedStylesHost_Factory(t) {\n  return new (t || SharedStylesHost)();\n};\n\nSharedStylesHost.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: SharedStylesHost,\n  factory: SharedStylesHost.ɵfac\n});\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(SharedStylesHost, [{\n    type: Injectable\n  }], function () {\n    return [];\n  }, null);\n})();\n\nif (false) {\n  /**\n   * \\@internal\n   * @type {?}\n   * @protected\n   */\n  SharedStylesHost.prototype._stylesSet;\n}\n\nclass DomSharedStylesHost extends SharedStylesHost {\n  /**\n   * @param {?} _doc\n   */\n  constructor(_doc) {\n    super();\n    this._doc = _doc;\n    this._hostNodes = new Set();\n    this._styleNodes = new Set();\n\n    this._hostNodes.add(_doc.head);\n  }\n  /**\n   * @private\n   * @param {?} styles\n   * @param {?} host\n   * @return {?}\n   */\n\n\n  _addStylesToHost(styles, host) {\n    styles.forEach(\n    /**\n    * @param {?} style\n    * @return {?}\n    */\n    style => {\n      /** @type {?} */\n      const styleEl = this._doc.createElement('style');\n\n      styleEl.textContent = style;\n\n      this._styleNodes.add(host.appendChild(styleEl));\n    });\n  }\n  /**\n   * @param {?} hostNode\n   * @return {?}\n   */\n\n\n  addHost(hostNode) {\n    this._addStylesToHost(this._stylesSet, hostNode);\n\n    this._hostNodes.add(hostNode);\n  }\n  /**\n   * @param {?} hostNode\n   * @return {?}\n   */\n\n\n  removeHost(hostNode) {\n    this._hostNodes.delete(hostNode);\n  }\n  /**\n   * @param {?} additions\n   * @return {?}\n   */\n\n\n  onStylesAdded(additions) {\n    this._hostNodes.forEach(\n    /**\n    * @param {?} hostNode\n    * @return {?}\n    */\n    hostNode => this._addStylesToHost(additions, hostNode));\n  }\n  /**\n   * @return {?}\n   */\n\n\n  ngOnDestroy() {\n    this._styleNodes.forEach(\n    /**\n    * @param {?} styleNode\n    * @return {?}\n    */\n    styleNode => ɵgetDOM().remove(styleNode));\n  }\n\n}\n\nDomSharedStylesHost.ɵfac = function DomSharedStylesHost_Factory(t) {\n  return new (t || DomSharedStylesHost)(ɵngcc0.ɵɵinject(DOCUMENT));\n};\n\nDomSharedStylesHost.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: DomSharedStylesHost,\n  factory: DomSharedStylesHost.ɵfac\n});\n/** @nocollapse */\n\nDomSharedStylesHost.ctorParameters = () => [{\n  type: undefined,\n  decorators: [{\n    type: Inject,\n    args: [DOCUMENT]\n  }]\n}];\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(DomSharedStylesHost, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }];\n  }, null);\n})();\n\nif (false) {\n  /**\n   * @type {?}\n   * @private\n   */\n  DomSharedStylesHost.prototype._hostNodes;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  DomSharedStylesHost.prototype._styleNodes;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  DomSharedStylesHost.prototype._doc;\n}\n/**\n * @fileoverview added by tsickle\n * Generated from: packages/platform-browser/src/dom/dom_renderer.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/** @type {?} */\n\n\nconst NAMESPACE_URIS = {\n  'svg': 'http://www.w3.org/2000/svg',\n  'xhtml': 'http://www.w3.org/1999/xhtml',\n  'xlink': 'http://www.w3.org/1999/xlink',\n  'xml': 'http://www.w3.org/XML/1998/namespace',\n  'xmlns': 'http://www.w3.org/2000/xmlns/'\n};\n/** @type {?} */\n\nconst COMPONENT_REGEX = /%COMP%/g;\n/** @type {?} */\n\nconst NG_DEV_MODE = typeof ngDevMode === 'undefined' || !!ngDevMode;\n/** @type {?} */\n\nconst COMPONENT_VARIABLE = '%COMP%';\n/** @type {?} */\n\nconst HOST_ATTR = `_nghost-${COMPONENT_VARIABLE}`;\n/** @type {?} */\n\nconst CONTENT_ATTR = `_ngcontent-${COMPONENT_VARIABLE}`;\n/**\n * @param {?} componentShortId\n * @return {?}\n */\n\nfunction shimContentAttribute(componentShortId) {\n  return CONTENT_ATTR.replace(COMPONENT_REGEX, componentShortId);\n}\n/**\n * @param {?} componentShortId\n * @return {?}\n */\n\n\nfunction shimHostAttribute(componentShortId) {\n  return HOST_ATTR.replace(COMPONENT_REGEX, componentShortId);\n}\n/**\n * @param {?} compId\n * @param {?} styles\n * @param {?} target\n * @return {?}\n */\n\n\nfunction flattenStyles(compId, styles, target) {\n  for (let i = 0; i < styles.length; i++) {\n    /** @type {?} */\n    let style = styles[i];\n\n    if (Array.isArray(style)) {\n      flattenStyles(compId, style, target);\n    } else {\n      style = style.replace(COMPONENT_REGEX, compId);\n      target.push(style);\n    }\n  }\n\n  return target;\n}\n/**\n * @param {?} eventHandler\n * @return {?}\n */\n\n\nfunction decoratePreventDefault(eventHandler) {\n  // `DebugNode.triggerEventHandler` needs to know if the listener was created with\n  // decoratePreventDefault or is a listener added outside the Angular context so it can handle the\n  // two differently. In the first case, the special '__ngUnwrap__' token is passed to the unwrap\n  // the listener (see below).\n  return (\n    /**\n    * @param {?} event\n    * @return {?}\n    */\n    event => {\n      // Ivy uses '__ngUnwrap__' as a special token that allows us to unwrap the function\n      // so that it can be invoked programmatically by `DebugNode.triggerEventHandler`. The debug_node\n      // can inspect the listener toString contents for the existence of this special token. Because\n      // the token is a string literal, it is ensured to not be modified by compiled code.\n      if (event === '__ngUnwrap__') {\n        return eventHandler;\n      }\n      /** @type {?} */\n\n\n      const allowDefaultBehavior = eventHandler(event);\n\n      if (allowDefaultBehavior === false) {\n        // TODO(tbosch): move preventDefault into event plugins...\n        event.preventDefault();\n        event.returnValue = false;\n      }\n\n      return undefined;\n    }\n  );\n}\n\nclass DomRendererFactory2 {\n  /**\n   * @param {?} eventManager\n   * @param {?} sharedStylesHost\n   * @param {?} appId\n   */\n  constructor(eventManager, sharedStylesHost, appId) {\n    this.eventManager = eventManager;\n    this.sharedStylesHost = sharedStylesHost;\n    this.appId = appId;\n    this.rendererByCompId = new Map();\n    this.defaultRenderer = new DefaultDomRenderer2(eventManager);\n  }\n  /**\n   * @param {?} element\n   * @param {?} type\n   * @return {?}\n   */\n\n\n  createRenderer(element, type) {\n    if (!element || !type) {\n      return this.defaultRenderer;\n    }\n\n    switch (type.encapsulation) {\n      case ViewEncapsulation.Emulated:\n        {\n          /** @type {?} */\n          let renderer = this.rendererByCompId.get(type.id);\n\n          if (!renderer) {\n            renderer = new EmulatedEncapsulationDomRenderer2(this.eventManager, this.sharedStylesHost, type, this.appId);\n            this.rendererByCompId.set(type.id, renderer);\n          }\n\n          /** @type {?} */\n          renderer.applyToHost(element);\n          return renderer;\n        }\n\n      case ViewEncapsulation.Native:\n      case ViewEncapsulation.ShadowDom:\n        return new ShadowDomRenderer(this.eventManager, this.sharedStylesHost, element, type);\n\n      default:\n        {\n          if (!this.rendererByCompId.has(type.id)) {\n            /** @type {?} */\n            const styles = flattenStyles(type.id, type.styles, []);\n            this.sharedStylesHost.addStyles(styles);\n            this.rendererByCompId.set(type.id, this.defaultRenderer);\n          }\n\n          return this.defaultRenderer;\n        }\n    }\n  }\n  /**\n   * @return {?}\n   */\n\n\n  begin() {}\n  /**\n   * @return {?}\n   */\n\n\n  end() {}\n\n}\n\nDomRendererFactory2.ɵfac = function DomRendererFactory2_Factory(t) {\n  return new (t || DomRendererFactory2)(ɵngcc0.ɵɵinject(EventManager), ɵngcc0.ɵɵinject(DomSharedStylesHost), ɵngcc0.ɵɵinject(APP_ID));\n};\n\nDomRendererFactory2.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: DomRendererFactory2,\n  factory: DomRendererFactory2.ɵfac\n});\n/** @nocollapse */\n\nDomRendererFactory2.ctorParameters = () => [{\n  type: EventManager\n}, {\n  type: DomSharedStylesHost\n}, {\n  type: String,\n  decorators: [{\n    type: Inject,\n    args: [APP_ID]\n  }]\n}];\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(DomRendererFactory2, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: EventManager\n    }, {\n      type: DomSharedStylesHost\n    }, {\n      type: String,\n      decorators: [{\n        type: Inject,\n        args: [APP_ID]\n      }]\n    }];\n  }, null);\n})();\n\nif (false) {\n  /**\n   * @type {?}\n   * @private\n   */\n  DomRendererFactory2.prototype.rendererByCompId;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  DomRendererFactory2.prototype.defaultRenderer;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  DomRendererFactory2.prototype.eventManager;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  DomRendererFactory2.prototype.sharedStylesHost;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  DomRendererFactory2.prototype.appId;\n}\n\nclass DefaultDomRenderer2 {\n  /**\n   * @param {?} eventManager\n   */\n  constructor(eventManager) {\n    this.eventManager = eventManager;\n    this.data = Object.create(null);\n  }\n  /**\n   * @return {?}\n   */\n\n\n  destroy() {}\n  /**\n   * @param {?} name\n   * @param {?=} namespace\n   * @return {?}\n   */\n\n\n  createElement(name, namespace) {\n    if (namespace) {\n      // In cases where Ivy (not ViewEngine) is giving us the actual namespace, the look up by key\n      // will result in undefined, so we just return the namespace here.\n      return document.createElementNS(NAMESPACE_URIS[namespace] || namespace, name);\n    }\n\n    return document.createElement(name);\n  }\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n\n\n  createComment(value) {\n    return document.createComment(value);\n  }\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n\n\n  createText(value) {\n    return document.createTextNode(value);\n  }\n  /**\n   * @param {?} parent\n   * @param {?} newChild\n   * @return {?}\n   */\n\n\n  appendChild(parent, newChild) {\n    parent.appendChild(newChild);\n  }\n  /**\n   * @param {?} parent\n   * @param {?} newChild\n   * @param {?} refChild\n   * @return {?}\n   */\n\n\n  insertBefore(parent, newChild, refChild) {\n    if (parent) {\n      parent.insertBefore(newChild, refChild);\n    }\n  }\n  /**\n   * @param {?} parent\n   * @param {?} oldChild\n   * @return {?}\n   */\n\n\n  removeChild(parent, oldChild) {\n    if (parent) {\n      parent.removeChild(oldChild);\n    }\n  }\n  /**\n   * @param {?} selectorOrNode\n   * @param {?=} preserveContent\n   * @return {?}\n   */\n\n\n  selectRootElement(selectorOrNode, preserveContent) {\n    /** @type {?} */\n    let el = typeof selectorOrNode === 'string' ? document.querySelector(selectorOrNode) : selectorOrNode;\n\n    if (!el) {\n      throw new Error(`The selector \"${selectorOrNode}\" did not match any elements`);\n    }\n\n    if (!preserveContent) {\n      el.textContent = '';\n    }\n\n    return el;\n  }\n  /**\n   * @param {?} node\n   * @return {?}\n   */\n\n\n  parentNode(node) {\n    return node.parentNode;\n  }\n  /**\n   * @param {?} node\n   * @return {?}\n   */\n\n\n  nextSibling(node) {\n    return node.nextSibling;\n  }\n  /**\n   * @param {?} el\n   * @param {?} name\n   * @param {?} value\n   * @param {?=} namespace\n   * @return {?}\n   */\n\n\n  setAttribute(el, name, value, namespace) {\n    if (namespace) {\n      name = namespace + ':' + name; // TODO(FW-811): Ivy may cause issues here because it's passing around\n      // full URIs for namespaces, therefore this lookup will fail.\n\n      /** @type {?} */\n\n      const namespaceUri = NAMESPACE_URIS[namespace];\n\n      if (namespaceUri) {\n        el.setAttributeNS(namespaceUri, name, value);\n      } else {\n        el.setAttribute(name, value);\n      }\n    } else {\n      el.setAttribute(name, value);\n    }\n  }\n  /**\n   * @param {?} el\n   * @param {?} name\n   * @param {?=} namespace\n   * @return {?}\n   */\n\n\n  removeAttribute(el, name, namespace) {\n    if (namespace) {\n      // TODO(FW-811): Ivy may cause issues here because it's passing around\n      // full URIs for namespaces, therefore this lookup will fail.\n\n      /** @type {?} */\n      const namespaceUri = NAMESPACE_URIS[namespace];\n\n      if (namespaceUri) {\n        el.removeAttributeNS(namespaceUri, name);\n      } else {\n        // TODO(FW-811): Since ivy is passing around full URIs for namespaces\n        // this could result in properties like `http://www.w3.org/2000/svg:cx=\"123\"`,\n        // which is wrong.\n        el.removeAttribute(`${namespace}:${name}`);\n      }\n    } else {\n      el.removeAttribute(name);\n    }\n  }\n  /**\n   * @param {?} el\n   * @param {?} name\n   * @return {?}\n   */\n\n\n  addClass(el, name) {\n    el.classList.add(name);\n  }\n  /**\n   * @param {?} el\n   * @param {?} name\n   * @return {?}\n   */\n\n\n  removeClass(el, name) {\n    el.classList.remove(name);\n  }\n  /**\n   * @param {?} el\n   * @param {?} style\n   * @param {?} value\n   * @param {?} flags\n   * @return {?}\n   */\n\n\n  setStyle(el, style, value, flags) {\n    if (flags & RendererStyleFlags2.DashCase) {\n      el.style.setProperty(style, value, !!(flags & RendererStyleFlags2.Important) ? 'important' : '');\n    } else {\n      el.style[style] = value;\n    }\n  }\n  /**\n   * @param {?} el\n   * @param {?} style\n   * @param {?} flags\n   * @return {?}\n   */\n\n\n  removeStyle(el, style, flags) {\n    if (flags & RendererStyleFlags2.DashCase) {\n      el.style.removeProperty(style);\n    } else {\n      // IE requires '' instead of null\n      // see https://github.com/angular/angular/issues/7916\n      el.style[style] = '';\n    }\n  }\n  /**\n   * @param {?} el\n   * @param {?} name\n   * @param {?} value\n   * @return {?}\n   */\n\n\n  setProperty(el, name, value) {\n    NG_DEV_MODE && checkNoSyntheticProp(name, 'property');\n    el[name] = value;\n  }\n  /**\n   * @param {?} node\n   * @param {?} value\n   * @return {?}\n   */\n\n\n  setValue(node, value) {\n    node.nodeValue = value;\n  }\n  /**\n   * @param {?} target\n   * @param {?} event\n   * @param {?} callback\n   * @return {?}\n   */\n\n\n  listen(target, event, callback) {\n    NG_DEV_MODE && checkNoSyntheticProp(event, 'listener');\n\n    if (typeof target === 'string') {\n      return (\n        /** @type {?} */\n        this.eventManager.addGlobalEventListener(target, event, decoratePreventDefault(callback))\n      );\n    }\n\n    return (\n      /** @type {?} */\n\n      /** @type {?} */\n      this.eventManager.addEventListener(target, event, decoratePreventDefault(callback))\n    );\n  }\n\n}\n\nif (false) {\n  /** @type {?} */\n  DefaultDomRenderer2.prototype.data;\n  /** @type {?} */\n\n  DefaultDomRenderer2.prototype.destroyNode;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  DefaultDomRenderer2.prototype.eventManager;\n}\n\nconst ɵ0$2 =\n/**\n* @return {?}\n*/\n() => '@'.charCodeAt(0);\n/** @type {?} */\n\n\nconst AT_CHARCODE = ɵ0$2();\n/**\n * @param {?} name\n * @param {?} nameKind\n * @return {?}\n */\n\nfunction checkNoSyntheticProp(name, nameKind) {\n  if (name.charCodeAt(0) === AT_CHARCODE) {\n    throw new Error(`Found the synthetic ${nameKind} ${name}. Please include either \"BrowserAnimationsModule\" or \"NoopAnimationsModule\" in your application.`);\n  }\n}\n\nclass EmulatedEncapsulationDomRenderer2 extends DefaultDomRenderer2 {\n  /**\n   * @param {?} eventManager\n   * @param {?} sharedStylesHost\n   * @param {?} component\n   * @param {?} appId\n   */\n  constructor(eventManager, sharedStylesHost, component, appId) {\n    super(eventManager);\n    this.component = component;\n    /** @type {?} */\n\n    const styles = flattenStyles(appId + '-' + component.id, component.styles, []);\n    sharedStylesHost.addStyles(styles);\n    this.contentAttr = shimContentAttribute(appId + '-' + component.id);\n    this.hostAttr = shimHostAttribute(appId + '-' + component.id);\n  }\n  /**\n   * @param {?} element\n   * @return {?}\n   */\n\n\n  applyToHost(element) {\n    super.setAttribute(element, this.hostAttr, '');\n  }\n  /**\n   * @param {?} parent\n   * @param {?} name\n   * @return {?}\n   */\n\n\n  createElement(parent, name) {\n    /** @type {?} */\n    const el = super.createElement(parent, name);\n    super.setAttribute(el, this.contentAttr, '');\n    return el;\n  }\n\n}\n\nif (false) {\n  /**\n   * @type {?}\n   * @private\n   */\n  EmulatedEncapsulationDomRenderer2.prototype.contentAttr;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  EmulatedEncapsulationDomRenderer2.prototype.hostAttr;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  EmulatedEncapsulationDomRenderer2.prototype.component;\n}\n\nclass ShadowDomRenderer extends DefaultDomRenderer2 {\n  /**\n   * @param {?} eventManager\n   * @param {?} sharedStylesHost\n   * @param {?} hostEl\n   * @param {?} component\n   */\n  constructor(eventManager, sharedStylesHost, hostEl, component) {\n    super(eventManager);\n    this.sharedStylesHost = sharedStylesHost;\n    this.hostEl = hostEl;\n    this.component = component;\n\n    if (component.encapsulation === ViewEncapsulation.ShadowDom) {\n      this.shadowRoot =\n      /** @type {?} */\n      hostEl.attachShadow({\n        mode: 'open'\n      });\n    } else {\n      this.shadowRoot =\n      /** @type {?} */\n      hostEl.createShadowRoot();\n    }\n\n    this.sharedStylesHost.addHost(this.shadowRoot);\n    /** @type {?} */\n\n    const styles = flattenStyles(component.id, component.styles, []);\n\n    for (let i = 0; i < styles.length; i++) {\n      /** @type {?} */\n      const styleEl = document.createElement('style');\n      styleEl.textContent = styles[i];\n      this.shadowRoot.appendChild(styleEl);\n    }\n  }\n  /**\n   * @private\n   * @param {?} node\n   * @return {?}\n   */\n\n\n  nodeOrShadowRoot(node) {\n    return node === this.hostEl ? this.shadowRoot : node;\n  }\n  /**\n   * @return {?}\n   */\n\n\n  destroy() {\n    this.sharedStylesHost.removeHost(this.shadowRoot);\n  }\n  /**\n   * @param {?} parent\n   * @param {?} newChild\n   * @return {?}\n   */\n\n\n  appendChild(parent, newChild) {\n    return super.appendChild(this.nodeOrShadowRoot(parent), newChild);\n  }\n  /**\n   * @param {?} parent\n   * @param {?} newChild\n   * @param {?} refChild\n   * @return {?}\n   */\n\n\n  insertBefore(parent, newChild, refChild) {\n    return super.insertBefore(this.nodeOrShadowRoot(parent), newChild, refChild);\n  }\n  /**\n   * @param {?} parent\n   * @param {?} oldChild\n   * @return {?}\n   */\n\n\n  removeChild(parent, oldChild) {\n    return super.removeChild(this.nodeOrShadowRoot(parent), oldChild);\n  }\n  /**\n   * @param {?} node\n   * @return {?}\n   */\n\n\n  parentNode(node) {\n    return this.nodeOrShadowRoot(super.parentNode(this.nodeOrShadowRoot(node)));\n  }\n\n}\n\nif (false) {\n  /**\n   * @type {?}\n   * @private\n   */\n  ShadowDomRenderer.prototype.shadowRoot;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  ShadowDomRenderer.prototype.sharedStylesHost;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  ShadowDomRenderer.prototype.hostEl;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  ShadowDomRenderer.prototype.component;\n}\n/**\n * @fileoverview added by tsickle\n * Generated from: packages/platform-browser/src/dom/events/dom_events.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nclass DomEventsPlugin extends EventManagerPlugin {\n  /**\n   * @param {?} doc\n   */\n  constructor(doc) {\n    super(doc);\n  } // This plugin should come last in the list of plugins, because it accepts all\n  // events.\n\n  /**\n   * @param {?} eventName\n   * @return {?}\n   */\n\n\n  supports(eventName) {\n    return true;\n  }\n  /**\n   * @param {?} element\n   * @param {?} eventName\n   * @param {?} handler\n   * @return {?}\n   */\n\n\n  addEventListener(element, eventName, handler) {\n    element.addEventListener(eventName,\n    /** @type {?} */\n    handler, false);\n    return (\n      /**\n      * @return {?}\n      */\n      () => this.removeEventListener(element, eventName,\n      /** @type {?} */\n      handler)\n    );\n  }\n  /**\n   * @param {?} target\n   * @param {?} eventName\n   * @param {?} callback\n   * @return {?}\n   */\n\n\n  removeEventListener(target, eventName, callback) {\n    return target.removeEventListener(eventName,\n    /** @type {?} */\n    callback);\n  }\n\n}\n\nDomEventsPlugin.ɵfac = function DomEventsPlugin_Factory(t) {\n  return new (t || DomEventsPlugin)(ɵngcc0.ɵɵinject(DOCUMENT));\n};\n\nDomEventsPlugin.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: DomEventsPlugin,\n  factory: DomEventsPlugin.ɵfac\n});\n/** @nocollapse */\n\nDomEventsPlugin.ctorParameters = () => [{\n  type: undefined,\n  decorators: [{\n    type: Inject,\n    args: [DOCUMENT]\n  }]\n}];\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(DomEventsPlugin, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }];\n  }, null);\n})();\n/**\n * @fileoverview added by tsickle\n * Generated from: packages/platform-browser/src/dom/events/hammer_gestures.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Supported HammerJS recognizer event names.\n * @type {?}\n */\n\n\nconst EVENT_NAMES = {\n  // pan\n  'pan': true,\n  'panstart': true,\n  'panmove': true,\n  'panend': true,\n  'pancancel': true,\n  'panleft': true,\n  'panright': true,\n  'panup': true,\n  'pandown': true,\n  // pinch\n  'pinch': true,\n  'pinchstart': true,\n  'pinchmove': true,\n  'pinchend': true,\n  'pinchcancel': true,\n  'pinchin': true,\n  'pinchout': true,\n  // press\n  'press': true,\n  'pressup': true,\n  // rotate\n  'rotate': true,\n  'rotatestart': true,\n  'rotatemove': true,\n  'rotateend': true,\n  'rotatecancel': true,\n  // swipe\n  'swipe': true,\n  'swipeleft': true,\n  'swiperight': true,\n  'swipeup': true,\n  'swipedown': true,\n  // tap\n  'tap': true\n};\n/**\n * DI token for providing [HammerJS](http://hammerjs.github.io/) support to Angular.\n * @see `HammerGestureConfig`\n *\n * \\@ngModule HammerModule\n * \\@publicApi\n * @type {?}\n */\n\nconst HAMMER_GESTURE_CONFIG = new InjectionToken('HammerGestureConfig');\n/**\n * Injection token used to provide a {\\@link HammerLoader} to Angular.\n *\n * \\@publicApi\n * @type {?}\n */\n\nconst HAMMER_LOADER = new InjectionToken('HammerLoader');\n/**\n * @record\n */\n\nfunction HammerInstance() {}\n\nif (false) {\n  /**\n   * @param {?} eventName\n   * @param {?=} callback\n   * @return {?}\n   */\n  HammerInstance.prototype.on = function (eventName, callback) {};\n  /**\n   * @param {?} eventName\n   * @param {?=} callback\n   * @return {?}\n   */\n\n\n  HammerInstance.prototype.off = function (eventName, callback) {};\n  /**\n   * @return {?}\n   */\n\n\n  HammerInstance.prototype.destroy = function () {};\n}\n/**\n * An injectable [HammerJS Manager](http://hammerjs.github.io/api/#hammer.manager)\n * for gesture recognition. Configures specific event recognition.\n * \\@publicApi\n */\n\n\nclass HammerGestureConfig {\n  constructor() {\n    /**\n     * A set of supported event names for gestures to be used in Angular.\n     * Angular supports all built-in recognizers, as listed in\n     * [HammerJS documentation](http://hammerjs.github.io/).\n     */\n    this.events = [];\n    /**\n     * Maps gesture event names to a set of configuration options\n     * that specify overrides to the default values for specific properties.\n     *\n     * The key is a supported event name to be configured,\n     * and the options object contains a set of properties, with override values\n     * to be applied to the named recognizer event.\n     * For example, to disable recognition of the rotate event, specify\n     *  `{\"rotate\": {\"enable\": false}}`.\n     *\n     * Properties that are not present take the HammerJS default values.\n     * For information about which properties are supported for which events,\n     * and their allowed and default values, see\n     * [HammerJS documentation](http://hammerjs.github.io/).\n     *\n     */\n\n    this.overrides = {};\n  }\n  /**\n   * Creates a [HammerJS Manager](http://hammerjs.github.io/api/#hammer.manager)\n   * and attaches it to a given HTML element.\n   * @param {?} element The element that will recognize gestures.\n   * @return {?} A HammerJS event-manager object.\n   */\n\n\n  buildHammer(element) {\n    /** @type {?} */\n    const mc = new\n    /** @type {?} */\n    Hammer(element, this.options);\n    mc.get('pinch').set({\n      enable: true\n    });\n    mc.get('rotate').set({\n      enable: true\n    });\n\n    for (const eventName in this.overrides) {\n      mc.get(eventName).set(this.overrides[eventName]);\n    }\n\n    return mc;\n  }\n\n}\n\nHammerGestureConfig.ɵfac = function HammerGestureConfig_Factory(t) {\n  return new (t || HammerGestureConfig)();\n};\n\nHammerGestureConfig.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: HammerGestureConfig,\n  factory: HammerGestureConfig.ɵfac\n});\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(HammerGestureConfig, [{\n    type: Injectable\n  }], function () {\n    return [];\n  }, null);\n})();\n\nif (false) {\n  /**\n   * A set of supported event names for gestures to be used in Angular.\n   * Angular supports all built-in recognizers, as listed in\n   * [HammerJS documentation](http://hammerjs.github.io/).\n   * @type {?}\n   */\n  HammerGestureConfig.prototype.events;\n  /**\n   * Maps gesture event names to a set of configuration options\n   * that specify overrides to the default values for specific properties.\n   *\n   * The key is a supported event name to be configured,\n   * and the options object contains a set of properties, with override values\n   * to be applied to the named recognizer event.\n   * For example, to disable recognition of the rotate event, specify\n   *  `{\"rotate\": {\"enable\": false}}`.\n   *\n   * Properties that are not present take the HammerJS default values.\n   * For information about which properties are supported for which events,\n   * and their allowed and default values, see\n   * [HammerJS documentation](http://hammerjs.github.io/).\n   *\n   * @type {?}\n   */\n\n  HammerGestureConfig.prototype.overrides;\n  /**\n   * Properties whose default values can be overridden for a given event.\n   * Different sets of properties apply to different events.\n   * For information about which properties are supported for which events,\n   * and their allowed and default values, see\n   * [HammerJS documentation](http://hammerjs.github.io/).\n   * @type {?}\n   */\n\n  HammerGestureConfig.prototype.options;\n}\n/**\n * Event plugin that adds Hammer support to an application.\n *\n * \\@ngModule HammerModule\n */\n\n\nclass HammerGesturesPlugin extends EventManagerPlugin {\n  /**\n   * @param {?} doc\n   * @param {?} _config\n   * @param {?} console\n   * @param {?=} loader\n   */\n  constructor(doc, _config, console, loader) {\n    super(doc);\n    this._config = _config;\n    this.console = console;\n    this.loader = loader;\n  }\n  /**\n   * @param {?} eventName\n   * @return {?}\n   */\n\n\n  supports(eventName) {\n    if (!EVENT_NAMES.hasOwnProperty(eventName.toLowerCase()) && !this.isCustomEvent(eventName)) {\n      return false;\n    }\n\n    if (!\n    /** @type {?} */\n    window.Hammer && !this.loader) {\n      this.console.warn(`The \"${eventName}\" event cannot be bound because Hammer.JS is not ` + `loaded and no custom loader has been specified.`);\n      return false;\n    }\n\n    return true;\n  }\n  /**\n   * @param {?} element\n   * @param {?} eventName\n   * @param {?} handler\n   * @return {?}\n   */\n\n\n  addEventListener(element, eventName, handler) {\n    /** @type {?} */\n    const zone = this.manager.getZone();\n    eventName = eventName.toLowerCase(); // If Hammer is not present but a loader is specified, we defer adding the event listener\n    // until Hammer is loaded.\n\n    if (!\n    /** @type {?} */\n    window.Hammer && this.loader) {\n      // This `addEventListener` method returns a function to remove the added listener.\n      // Until Hammer is loaded, the returned function needs to *cancel* the registration rather\n      // than remove anything.\n\n      /** @type {?} */\n      let cancelRegistration = false;\n      /** @type {?} */\n\n      let deregister =\n      /**\n      * @return {?}\n      */\n      () => {\n        cancelRegistration = true;\n      };\n\n      this.loader().then(\n      /**\n      * @return {?}\n      */\n      () => {\n        // If Hammer isn't actually loaded when the custom loader resolves, give up.\n        if (!\n        /** @type {?} */\n        window.Hammer) {\n          this.console.warn(`The custom HAMMER_LOADER completed, but Hammer.JS is not present.`);\n\n          deregister =\n          /**\n          * @return {?}\n          */\n          () => {};\n\n          return;\n        }\n\n        if (!cancelRegistration) {\n          // Now that Hammer is loaded and the listener is being loaded for real,\n          // the deregistration function changes from canceling registration to removal.\n          deregister = this.addEventListener(element, eventName, handler);\n        }\n      }).catch(\n      /**\n      * @return {?}\n      */\n      () => {\n        this.console.warn(`The \"${eventName}\" event cannot be bound because the custom ` + `Hammer.JS loader failed.`);\n\n        deregister =\n        /**\n        * @return {?}\n        */\n        () => {};\n      }); // Return a function that *executes* `deregister` (and not `deregister` itself) so that we\n      // can change the behavior of `deregister` once the listener is added. Using a closure in\n      // this way allows us to avoid any additional data structures to track listener removal.\n\n      return (\n        /**\n        * @return {?}\n        */\n        () => {\n          deregister();\n        }\n      );\n    }\n\n    return zone.runOutsideAngular(\n    /**\n    * @return {?}\n    */\n    () => {\n      // Creating the manager bind events, must be done outside of angular\n\n      /** @type {?} */\n      const mc = this._config.buildHammer(element);\n      /** @type {?} */\n\n\n      const callback =\n      /**\n      * @param {?} eventObj\n      * @return {?}\n      */\n      function (eventObj) {\n        zone.runGuarded(\n        /**\n        * @return {?}\n        */\n        function () {\n          handler(eventObj);\n        });\n      };\n\n      mc.on(eventName, callback);\n      return (\n        /**\n        * @return {?}\n        */\n        () => {\n          mc.off(eventName, callback); // destroy mc to prevent memory leak\n\n          if (typeof mc.destroy === 'function') {\n            mc.destroy();\n          }\n        }\n      );\n    });\n  }\n  /**\n   * @param {?} eventName\n   * @return {?}\n   */\n\n\n  isCustomEvent(eventName) {\n    return this._config.events.indexOf(eventName) > -1;\n  }\n\n}\n\nHammerGesturesPlugin.ɵfac = function HammerGesturesPlugin_Factory(t) {\n  return new (t || HammerGesturesPlugin)(ɵngcc0.ɵɵinject(DOCUMENT), ɵngcc0.ɵɵinject(HAMMER_GESTURE_CONFIG), ɵngcc0.ɵɵinject(ɵngcc0.ɵConsole), ɵngcc0.ɵɵinject(HAMMER_LOADER, 8));\n};\n\nHammerGesturesPlugin.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: HammerGesturesPlugin,\n  factory: HammerGesturesPlugin.ɵfac\n});\n/** @nocollapse */\n\nHammerGesturesPlugin.ctorParameters = () => [{\n  type: undefined,\n  decorators: [{\n    type: Inject,\n    args: [DOCUMENT]\n  }]\n}, {\n  type: HammerGestureConfig,\n  decorators: [{\n    type: Inject,\n    args: [HAMMER_GESTURE_CONFIG]\n  }]\n}, {\n  type: ɵConsole\n}, {\n  type: undefined,\n  decorators: [{\n    type: Optional\n  }, {\n    type: Inject,\n    args: [HAMMER_LOADER]\n  }]\n}];\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(HammerGesturesPlugin, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }, {\n      type: HammerGestureConfig,\n      decorators: [{\n        type: Inject,\n        args: [HAMMER_GESTURE_CONFIG]\n      }]\n    }, {\n      type: ɵngcc0.ɵConsole\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [HAMMER_LOADER]\n      }]\n    }];\n  }, null);\n})();\n\nif (false) {\n  /**\n   * @type {?}\n   * @private\n   */\n  HammerGesturesPlugin.prototype._config;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  HammerGesturesPlugin.prototype.console;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  HammerGesturesPlugin.prototype.loader;\n}\n/**\n * In Ivy, support for Hammer gestures is optional, so applications must\n * import the `HammerModule` at root to turn on support. This means that\n * Hammer-specific code can be tree-shaken away if not needed.\n * @type {?}\n */\n\n\nconst HAMMER_PROVIDERS__POST_R3__ = [];\n/**\n * In View Engine, support for Hammer gestures is built-in by default.\n * @type {?}\n */\n\nconst HAMMER_PROVIDERS__PRE_R3__ = [{\n  provide: EVENT_MANAGER_PLUGINS,\n  useClass: HammerGesturesPlugin,\n  multi: true,\n  deps: [DOCUMENT, HAMMER_GESTURE_CONFIG, ɵConsole, [new Optional(), HAMMER_LOADER]]\n}, {\n  provide: HAMMER_GESTURE_CONFIG,\n  useClass: HammerGestureConfig,\n  deps: []\n}];\n/** @type {?} */\n\nconst HAMMER_PROVIDERS = HAMMER_PROVIDERS__POST_R3__;\n/**\n * Adds support for HammerJS.\n *\n * Import this module at the root of your application so that Angular can work with\n * HammerJS to detect gesture events.\n *\n * Note that applications still need to include the HammerJS script itself. This module\n * simply sets up the coordination layer between HammerJS and Angular's EventManager.\n *\n * \\@publicApi\n */\n\nclass HammerModule {}\n\nHammerModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: HammerModule\n});\nHammerModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function HammerModule_Factory(t) {\n    return new (t || HammerModule)();\n  },\n  providers: HAMMER_PROVIDERS__PRE_R3__\n});\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(HammerModule, [{\n    type: NgModule,\n    args: [{\n      providers: HAMMER_PROVIDERS__PRE_R3__\n    }]\n  }], null, null);\n})();\n/**\n * @fileoverview added by tsickle\n * Generated from: packages/platform-browser/src/dom/events/key_events.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Defines supported modifiers for key events.\n * @type {?}\n */\n\n\nconst MODIFIER_KEYS = ['alt', 'control', 'meta', 'shift'];\n/** @type {?} */\n\nconst DOM_KEY_LOCATION_NUMPAD = 3; // Map to convert some key or keyIdentifier values to what will be returned by getEventKey\n\n/** @type {?} */\n\nconst _keyMap = {\n  // The following values are here for cross-browser compatibility and to match the W3C standard\n  // cf http://www.w3.org/TR/DOM-Level-3-Events-key/\n  '\\b': 'Backspace',\n  '\\t': 'Tab',\n  '\\x7F': 'Delete',\n  '\\x1B': 'Escape',\n  'Del': 'Delete',\n  'Esc': 'Escape',\n  'Left': 'ArrowLeft',\n  'Right': 'ArrowRight',\n  'Up': 'ArrowUp',\n  'Down': 'ArrowDown',\n  'Menu': 'ContextMenu',\n  'Scroll': 'ScrollLock',\n  'Win': 'OS'\n}; // There is a bug in Chrome for numeric keypad keys:\n// https://code.google.com/p/chromium/issues/detail?id=155654\n// 1, 2, 3 ... are reported as A, B, C ...\n\n/** @type {?} */\n\nconst _chromeNumKeyPadMap = {\n  'A': '1',\n  'B': '2',\n  'C': '3',\n  'D': '4',\n  'E': '5',\n  'F': '6',\n  'G': '7',\n  'H': '8',\n  'I': '9',\n  'J': '*',\n  'K': '+',\n  'M': '-',\n  'N': '.',\n  'O': '/',\n  '\\x60': '0',\n  '\\x90': 'NumLock'\n};\n\nconst ɵ0$3 =\n/**\n* @param {?} event\n* @return {?}\n*/\nevent => event.altKey,\n      ɵ1 =\n/**\n* @param {?} event\n* @return {?}\n*/\nevent => event.ctrlKey,\n      ɵ2 =\n/**\n* @param {?} event\n* @return {?}\n*/\nevent => event.metaKey,\n      ɵ3 =\n/**\n* @param {?} event\n* @return {?}\n*/\nevent => event.shiftKey;\n/**\n * Retrieves modifiers from key-event objects.\n * @type {?}\n */\n\n\nconst MODIFIER_KEY_GETTERS = {\n  'alt': ɵ0$3,\n  'control': ɵ1,\n  'meta': ɵ2,\n  'shift': ɵ3\n};\n/**\n * \\@publicApi\n * A browser plug-in that provides support for handling of key events in Angular.\n */\n\nclass KeyEventsPlugin extends EventManagerPlugin {\n  /**\n   * Initializes an instance of the browser plug-in.\n   * @param {?} doc The document in which key events will be detected.\n   */\n  constructor(doc) {\n    super(doc);\n  }\n  /**\n   * Reports whether a named key event is supported.\n   * @param {?} eventName The event name to query.\n   * @return {?} True if the named key event is supported.\n   */\n\n\n  supports(eventName) {\n    return KeyEventsPlugin.parseEventName(eventName) != null;\n  }\n  /**\n   * Registers a handler for a specific element and key event.\n   * @param {?} element The HTML element to receive event notifications.\n   * @param {?} eventName The name of the key event to listen for.\n   * @param {?} handler A function to call when the notification occurs. Receives the\n   * event object as an argument.\n   * @return {?} The key event that was registered.\n   */\n\n\n  addEventListener(element, eventName, handler) {\n    /** @type {?} */\n    const parsedEvent =\n    /** @type {?} */\n    KeyEventsPlugin.parseEventName(eventName);\n    /** @type {?} */\n\n    const outsideHandler = KeyEventsPlugin.eventCallback(parsedEvent['fullKey'], handler, this.manager.getZone());\n    return this.manager.getZone().runOutsideAngular(\n    /**\n    * @return {?}\n    */\n    () => {\n      return ɵgetDOM().onAndCancel(element, parsedEvent['domEventName'], outsideHandler);\n    });\n  }\n  /**\n   * @param {?} eventName\n   * @return {?}\n   */\n\n\n  static parseEventName(eventName) {\n    /** @type {?} */\n    const parts = eventName.toLowerCase().split('.');\n    /** @type {?} */\n\n    const domEventName = parts.shift();\n\n    if (parts.length === 0 || !(domEventName === 'keydown' || domEventName === 'keyup')) {\n      return null;\n    }\n    /** @type {?} */\n\n\n    const key = KeyEventsPlugin._normalizeKey(\n    /** @type {?} */\n    parts.pop());\n    /** @type {?} */\n\n\n    let fullKey = '';\n    MODIFIER_KEYS.forEach(\n    /**\n    * @param {?} modifierName\n    * @return {?}\n    */\n    modifierName => {\n      /** @type {?} */\n      const index = parts.indexOf(modifierName);\n\n      if (index > -1) {\n        parts.splice(index, 1);\n        fullKey += modifierName + '.';\n      }\n    });\n    fullKey += key;\n\n    if (parts.length != 0 || key.length === 0) {\n      // returning null instead of throwing to let another plugin process the event\n      return null;\n    }\n    /** @type {?} */\n\n\n    const result = {};\n    result['domEventName'] = domEventName;\n    result['fullKey'] = fullKey;\n    return result;\n  }\n  /**\n   * @param {?} event\n   * @return {?}\n   */\n\n\n  static getEventFullKey(event) {\n    /** @type {?} */\n    let fullKey = '';\n    /** @type {?} */\n\n    let key = getEventKey(event);\n    key = key.toLowerCase();\n\n    if (key === ' ') {\n      key = 'space'; // for readability\n    } else if (key === '.') {\n      key = 'dot'; // because '.' is used as a separator in event names\n    }\n\n    MODIFIER_KEYS.forEach(\n    /**\n    * @param {?} modifierName\n    * @return {?}\n    */\n    modifierName => {\n      if (modifierName != key) {\n        /** @type {?} */\n        const modifierGetter = MODIFIER_KEY_GETTERS[modifierName];\n\n        if (modifierGetter(event)) {\n          fullKey += modifierName + '.';\n        }\n      }\n    });\n    fullKey += key;\n    return fullKey;\n  }\n  /**\n   * Configures a handler callback for a key event.\n   * @param {?} fullKey The event name that combines all simultaneous keystrokes.\n   * @param {?} handler The function that responds to the key event.\n   * @param {?} zone The zone in which the event occurred.\n   * @return {?} A callback function.\n   */\n\n\n  static eventCallback(fullKey, handler, zone) {\n    return (\n      /**\n      * @param {?} event\n      * @return {?}\n      */\n      (event\n      /** TODO #9100 */\n      ) => {\n        if (KeyEventsPlugin.getEventFullKey(event) === fullKey) {\n          zone.runGuarded(\n          /**\n          * @return {?}\n          */\n          () => handler(event));\n        }\n      }\n    );\n  }\n  /**\n   * \\@internal\n   * @param {?} keyName\n   * @return {?}\n   */\n\n\n  static _normalizeKey(keyName) {\n    // TODO: switch to a Map if the mapping grows too much\n    switch (keyName) {\n      case 'esc':\n        return 'escape';\n\n      default:\n        return keyName;\n    }\n  }\n\n}\n\nKeyEventsPlugin.ɵfac = function KeyEventsPlugin_Factory(t) {\n  return new (t || KeyEventsPlugin)(ɵngcc0.ɵɵinject(DOCUMENT));\n};\n\nKeyEventsPlugin.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: KeyEventsPlugin,\n  factory: KeyEventsPlugin.ɵfac\n});\n/** @nocollapse */\n\nKeyEventsPlugin.ctorParameters = () => [{\n  type: undefined,\n  decorators: [{\n    type: Inject,\n    args: [DOCUMENT]\n  }]\n}];\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(KeyEventsPlugin, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }];\n  }, null);\n})();\n/**\n * @param {?} event\n * @return {?}\n */\n\n\nfunction getEventKey(event) {\n  /** @type {?} */\n  let key = event.key;\n\n  if (key == null) {\n    key = event.keyIdentifier; // keyIdentifier is defined in the old draft of DOM Level 3 Events implemented by Chrome and\n    // Safari cf\n    // http://www.w3.org/TR/2007/WD-DOM-Level-3-Events-20071221/events.html#Events-KeyboardEvents-Interfaces\n\n    if (key == null) {\n      return 'Unidentified';\n    }\n\n    if (key.startsWith('U+')) {\n      key = String.fromCharCode(parseInt(key.substring(2), 16));\n\n      if (event.location === DOM_KEY_LOCATION_NUMPAD && _chromeNumKeyPadMap.hasOwnProperty(key)) {\n        // There is a bug in Chrome for numeric keypad keys:\n        // https://code.google.com/p/chromium/issues/detail?id=155654\n        // 1, 2, 3 ... are reported as A, B, C ...\n        key =\n        /** @type {?} */\n        _chromeNumKeyPadMap[key];\n      }\n    }\n  }\n\n  return _keyMap[key] || key;\n}\n/**\n * @fileoverview added by tsickle\n * Generated from: packages/platform-browser/src/security/dom_sanitization_service.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Marker interface for a value that's safe to use in a particular context.\n *\n * \\@publicApi\n * @record\n */\n\n\nfunction SafeValue() {}\n/**\n * Marker interface for a value that's safe to use as HTML.\n *\n * \\@publicApi\n * @record\n */\n\n\nfunction SafeHtml() {}\n/**\n * Marker interface for a value that's safe to use as style (CSS).\n *\n * \\@publicApi\n * @record\n */\n\n\nfunction SafeStyle() {}\n/**\n * Marker interface for a value that's safe to use as JavaScript.\n *\n * \\@publicApi\n * @record\n */\n\n\nfunction SafeScript() {}\n/**\n * Marker interface for a value that's safe to use as a URL linking to a document.\n *\n * \\@publicApi\n * @record\n */\n\n\nfunction SafeUrl() {}\n/**\n * Marker interface for a value that's safe to use as a URL to load executable code from.\n *\n * \\@publicApi\n * @record\n */\n\n\nfunction SafeResourceUrl() {}\n/**\n * DomSanitizer helps preventing Cross Site Scripting Security bugs (XSS) by sanitizing\n * values to be safe to use in the different DOM contexts.\n *\n * For example, when binding a URL in an `<a [href]=\"someValue\">` hyperlink, `someValue` will be\n * sanitized so that an attacker cannot inject e.g. a `javascript:` URL that would execute code on\n * the website.\n *\n * In specific situations, it might be necessary to disable sanitization, for example if the\n * application genuinely needs to produce a `javascript:` style link with a dynamic value in it.\n * Users can bypass security by constructing a value with one of the `bypassSecurityTrust...`\n * methods, and then binding to that value from the template.\n *\n * These situations should be very rare, and extraordinary care must be taken to avoid creating a\n * Cross Site Scripting (XSS) security bug!\n *\n * When using `bypassSecurityTrust...`, make sure to call the method as early as possible and as\n * close as possible to the source of the value, to make it easy to verify no security bug is\n * created by its use.\n *\n * It is not required (and not recommended) to bypass security if the value is safe, e.g. a URL that\n * does not start with a suspicious protocol, or an HTML snippet that does not contain dangerous\n * code. The sanitizer leaves safe values intact.\n *\n * \\@security Calling any of the `bypassSecurityTrust...` APIs disables Angular's built-in\n * sanitization for the value passed in. Carefully check and audit all values and code paths going\n * into this call. Make sure any user data is appropriately escaped for this security context.\n * For more detail, see the [Security Guide](http://g.co/ng/security).\n *\n * \\@publicApi\n * @abstract\n */\n\n\nclass DomSanitizer {}\n\nDomSanitizer.ɵfac = function DomSanitizer_Factory(t) {\n  return new (t || DomSanitizer)();\n};\n/** @nocollapse */\n\n\nDomSanitizer.ɵprov = ɵɵdefineInjectable({\n  factory: function DomSanitizer_Factory() {\n    return ɵɵinject(DomSanitizerImpl);\n  },\n  token: DomSanitizer,\n  providedIn: \"root\"\n});\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(DomSanitizer, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root',\n      useExisting: forwardRef(\n      /**\n      * @return {?}\n      */\n      () => DomSanitizerImpl)\n    }]\n  }], null, null);\n})();\n\nif (false) {\n  /**\n   * Sanitizes a value for use in the given SecurityContext.\n   *\n   * If value is trusted for the context, this method will unwrap the contained safe value and use\n   * it directly. Otherwise, value will be sanitized to be safe in the given context, for example\n   * by replacing URLs that have an unsafe protocol part (such as `javascript:`). The implementation\n   * is responsible to make sure that the value can definitely be safely used in the given context.\n   * @abstract\n   * @param {?} context\n   * @param {?} value\n   * @return {?}\n   */\n  DomSanitizer.prototype.sanitize = function (context, value) {};\n  /**\n   * Bypass security and trust the given value to be safe HTML. Only use this when the bound HTML\n   * is unsafe (e.g. contains `<script>` tags) and the code should be executed. The sanitizer will\n   * leave safe HTML intact, so in most situations this method should not be used.\n   *\n   * **WARNING:** calling this method with untrusted user data exposes your application to XSS\n   * security risks!\n   * @abstract\n   * @param {?} value\n   * @return {?}\n   */\n\n\n  DomSanitizer.prototype.bypassSecurityTrustHtml = function (value) {};\n  /**\n   * Bypass security and trust the given value to be safe style value (CSS).\n   *\n   * **WARNING:** calling this method with untrusted user data exposes your application to XSS\n   * security risks!\n   * @abstract\n   * @param {?} value\n   * @return {?}\n   */\n\n\n  DomSanitizer.prototype.bypassSecurityTrustStyle = function (value) {};\n  /**\n   * Bypass security and trust the given value to be safe JavaScript.\n   *\n   * **WARNING:** calling this method with untrusted user data exposes your application to XSS\n   * security risks!\n   * @abstract\n   * @param {?} value\n   * @return {?}\n   */\n\n\n  DomSanitizer.prototype.bypassSecurityTrustScript = function (value) {};\n  /**\n   * Bypass security and trust the given value to be a safe style URL, i.e. a value that can be used\n   * in hyperlinks or `<img src>`.\n   *\n   * **WARNING:** calling this method with untrusted user data exposes your application to XSS\n   * security risks!\n   * @abstract\n   * @param {?} value\n   * @return {?}\n   */\n\n\n  DomSanitizer.prototype.bypassSecurityTrustUrl = function (value) {};\n  /**\n   * Bypass security and trust the given value to be a safe resource URL, i.e. a location that may\n   * be used to load executable code from, like `<script src>`, or `<iframe src>`.\n   *\n   * **WARNING:** calling this method with untrusted user data exposes your application to XSS\n   * security risks!\n   * @abstract\n   * @param {?} value\n   * @return {?}\n   */\n\n\n  DomSanitizer.prototype.bypassSecurityTrustResourceUrl = function (value) {};\n}\n/**\n * @param {?} injector\n * @return {?}\n */\n\n\nfunction domSanitizerImplFactory(injector) {\n  return new DomSanitizerImpl(injector.get(DOCUMENT));\n}\n\nclass DomSanitizerImpl extends DomSanitizer {\n  /**\n   * @param {?} _doc\n   */\n  constructor(_doc) {\n    super();\n    this._doc = _doc;\n  }\n  /**\n   * @param {?} ctx\n   * @param {?} value\n   * @return {?}\n   */\n\n\n  sanitize(ctx, value) {\n    if (value == null) return null;\n\n    switch (ctx) {\n      case SecurityContext.NONE:\n        return (\n          /** @type {?} */\n          value\n        );\n\n      case SecurityContext.HTML:\n        if (ɵallowSanitizationBypassAndThrow(value, \"HTML\"\n        /* Html */\n        )) {\n          return ɵunwrapSafeValue(value);\n        }\n\n        return ɵ_sanitizeHtml(this._doc, String(value));\n\n      case SecurityContext.STYLE:\n        if (ɵallowSanitizationBypassAndThrow(value, \"Style\"\n        /* Style */\n        )) {\n          return ɵunwrapSafeValue(value);\n        }\n\n        return ɵ_sanitizeStyle(\n        /** @type {?} */\n        value);\n\n      case SecurityContext.SCRIPT:\n        if (ɵallowSanitizationBypassAndThrow(value, \"Script\"\n        /* Script */\n        )) {\n          return ɵunwrapSafeValue(value);\n        }\n\n        throw new Error('unsafe value used in a script context');\n\n      case SecurityContext.URL:\n        /** @type {?} */\n        const type = ɵgetSanitizationBypassType(value);\n\n        if (ɵallowSanitizationBypassAndThrow(value, \"URL\"\n        /* Url */\n        )) {\n          return ɵunwrapSafeValue(value);\n        }\n\n        return ɵ_sanitizeUrl(String(value));\n\n      case SecurityContext.RESOURCE_URL:\n        if (ɵallowSanitizationBypassAndThrow(value, \"ResourceURL\"\n        /* ResourceUrl */\n        )) {\n          return ɵunwrapSafeValue(value);\n        }\n\n        throw new Error('unsafe value used in a resource URL context (see http://g.co/ng/security#xss)');\n\n      default:\n        throw new Error(`Unexpected SecurityContext ${ctx} (see http://g.co/ng/security#xss)`);\n    }\n  }\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n\n\n  bypassSecurityTrustHtml(value) {\n    return ɵbypassSanitizationTrustHtml(value);\n  }\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n\n\n  bypassSecurityTrustStyle(value) {\n    return ɵbypassSanitizationTrustStyle(value);\n  }\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n\n\n  bypassSecurityTrustScript(value) {\n    return ɵbypassSanitizationTrustScript(value);\n  }\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n\n\n  bypassSecurityTrustUrl(value) {\n    return ɵbypassSanitizationTrustUrl(value);\n  }\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n\n\n  bypassSecurityTrustResourceUrl(value) {\n    return ɵbypassSanitizationTrustResourceUrl(value);\n  }\n\n}\n\nDomSanitizerImpl.ɵfac = function DomSanitizerImpl_Factory(t) {\n  return new (t || DomSanitizerImpl)(ɵngcc0.ɵɵinject(DOCUMENT));\n};\n/** @nocollapse */\n\n\nDomSanitizerImpl.ctorParameters = () => [{\n  type: undefined,\n  decorators: [{\n    type: Inject,\n    args: [DOCUMENT]\n  }]\n}];\n/** @nocollapse */\n\n\nDomSanitizerImpl.ɵprov = ɵɵdefineInjectable({\n  factory: function DomSanitizerImpl_Factory() {\n    return domSanitizerImplFactory(ɵɵinject(INJECTOR));\n  },\n  token: DomSanitizerImpl,\n  providedIn: \"root\"\n});\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(DomSanitizerImpl, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root',\n      useFactory: domSanitizerImplFactory,\n      deps: [Injector]\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }];\n  }, null);\n})();\n\nif (false) {\n  /**\n   * @type {?}\n   * @private\n   */\n  DomSanitizerImpl.prototype._doc;\n}\n/**\n * @fileoverview added by tsickle\n * Generated from: packages/platform-browser/src/browser.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @return {?}\n */\n\n\nfunction initDomAdapter() {\n  BrowserDomAdapter.makeCurrent();\n  BrowserGetTestability.init();\n}\n/**\n * @return {?}\n */\n\n\nfunction errorHandler() {\n  return new ErrorHandler();\n}\n/**\n * @return {?}\n */\n\n\nfunction _document() {\n  // Tell ivy about the global document\n  ɵsetDocument(document);\n  return document;\n}\n\nconst ɵ0$4 = ɵPLATFORM_BROWSER_ID;\n/** @type {?} */\n\nconst INTERNAL_BROWSER_PLATFORM_PROVIDERS = [{\n  provide: PLATFORM_ID,\n  useValue: ɵ0$4\n}, {\n  provide: PLATFORM_INITIALIZER,\n  useValue: initDomAdapter,\n  multi: true\n}, {\n  provide: DOCUMENT,\n  useFactory: _document,\n  deps: []\n}];\n/** @type {?} */\n\nconst BROWSER_SANITIZATION_PROVIDERS__PRE_R3__ = [{\n  provide: Sanitizer,\n  useExisting: DomSanitizer\n}, {\n  provide: DomSanitizer,\n  useClass: DomSanitizerImpl,\n  deps: [DOCUMENT]\n}];\n/** @type {?} */\n\nconst BROWSER_SANITIZATION_PROVIDERS__POST_R3__ = [];\n/**\n * \\@security Replacing built-in sanitization providers exposes the application to XSS risks.\n * Attacker-controlled data introduced by an unsanitized provider could expose your\n * application to XSS risks. For more detail, see the [Security Guide](http://g.co/ng/security).\n * \\@publicApi\n * @type {?}\n */\n\nconst BROWSER_SANITIZATION_PROVIDERS = BROWSER_SANITIZATION_PROVIDERS__POST_R3__;\n/**\n * \\@publicApi\n * @type {?}\n */\n\nconst platformBrowser = createPlatformFactory(platformCore, 'browser', INTERNAL_BROWSER_PLATFORM_PROVIDERS);\n/** @type {?} */\n\nconst BROWSER_MODULE_PROVIDERS = [BROWSER_SANITIZATION_PROVIDERS, {\n  provide: ɵINJECTOR_SCOPE,\n  useValue: 'root'\n}, {\n  provide: ErrorHandler,\n  useFactory: errorHandler,\n  deps: []\n}, {\n  provide: EVENT_MANAGER_PLUGINS,\n  useClass: DomEventsPlugin,\n  multi: true,\n  deps: [DOCUMENT, NgZone, PLATFORM_ID]\n}, {\n  provide: EVENT_MANAGER_PLUGINS,\n  useClass: KeyEventsPlugin,\n  multi: true,\n  deps: [DOCUMENT]\n}, HAMMER_PROVIDERS, {\n  provide: DomRendererFactory2,\n  useClass: DomRendererFactory2,\n  deps: [EventManager, DomSharedStylesHost, APP_ID]\n}, {\n  provide: RendererFactory2,\n  useExisting: DomRendererFactory2\n}, {\n  provide: SharedStylesHost,\n  useExisting: DomSharedStylesHost\n}, {\n  provide: DomSharedStylesHost,\n  useClass: DomSharedStylesHost,\n  deps: [DOCUMENT]\n}, {\n  provide: Testability,\n  useClass: Testability,\n  deps: [NgZone]\n}, {\n  provide: EventManager,\n  useClass: EventManager,\n  deps: [EVENT_MANAGER_PLUGINS, NgZone]\n}, ELEMENT_PROBE_PROVIDERS];\n/**\n * Exports required infrastructure for all Angular apps.\n * Included by default in all Angular apps created with the CLI\n * `new` command.\n * Re-exports `CommonModule` and `ApplicationModule`, making their\n * exports and providers available to all apps.\n *\n * \\@publicApi\n */\n\nclass BrowserModule {\n  /**\n   * @param {?} parentModule\n   */\n  constructor(parentModule) {\n    if (parentModule) {\n      throw new Error(`BrowserModule has already been loaded. If you need access to common directives such as NgIf and NgFor from a lazy loaded module, import CommonModule instead.`);\n    }\n  }\n  /**\n   * Configures a browser-based app to transition from a server-rendered app, if\n   * one is present on the page.\n   *\n   * @param {?} params An object containing an identifier for the app to transition.\n   * The ID must match between the client and server versions of the app.\n   * @return {?} The reconfigured `BrowserModule` to import into the app's root `AppModule`.\n   */\n\n\n  static withServerTransition(params) {\n    return {\n      ngModule: BrowserModule,\n      providers: [{\n        provide: APP_ID,\n        useValue: params.appId\n      }, {\n        provide: TRANSITION_ID,\n        useExisting: APP_ID\n      }, SERVER_TRANSITION_PROVIDERS]\n    };\n  }\n\n}\n\nBrowserModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: BrowserModule\n});\nBrowserModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function BrowserModule_Factory(t) {\n    return new (t || BrowserModule)(ɵngcc0.ɵɵinject(BrowserModule, 12));\n  },\n  providers: BROWSER_MODULE_PROVIDERS,\n  imports: [CommonModule, ApplicationModule]\n});\n/** @nocollapse */\n\nBrowserModule.ctorParameters = () => [{\n  type: undefined,\n  decorators: [{\n    type: Optional\n  }, {\n    type: SkipSelf\n  }, {\n    type: Inject,\n    args: [BrowserModule]\n  }]\n}];\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(BrowserModule, {\n    exports: function () {\n      return [CommonModule, ApplicationModule];\n    }\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(BrowserModule, [{\n    type: NgModule,\n    args: [{\n      providers: BROWSER_MODULE_PROVIDERS,\n      exports: [CommonModule, ApplicationModule]\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: SkipSelf\n      }, {\n        type: Inject,\n        args: [BrowserModule]\n      }]\n    }];\n  }, null);\n})();\n/**\n * @fileoverview added by tsickle\n * Generated from: packages/platform-browser/src/browser/meta.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Factory to create Meta service.\n * @return {?}\n */\n\n\nfunction createMeta() {\n  return new Meta(ɵɵinject(DOCUMENT));\n}\n/**\n * A service that can be used to get and add meta tags.\n *\n * \\@publicApi\n */\n\n\nclass Meta {\n  /**\n   * @param {?} _doc\n   */\n  constructor(_doc) {\n    this._doc = _doc;\n    this._dom = ɵgetDOM();\n  }\n  /**\n   * @param {?} tag\n   * @param {?=} forceCreation\n   * @return {?}\n   */\n\n\n  addTag(tag, forceCreation = false) {\n    if (!tag) return null;\n    return this._getOrCreateElement(tag, forceCreation);\n  }\n  /**\n   * @param {?} tags\n   * @param {?=} forceCreation\n   * @return {?}\n   */\n\n\n  addTags(tags, forceCreation = false) {\n    if (!tags) return [];\n    return tags.reduce(\n    /**\n    * @param {?} result\n    * @param {?} tag\n    * @return {?}\n    */\n    (result, tag) => {\n      if (tag) {\n        result.push(this._getOrCreateElement(tag, forceCreation));\n      }\n\n      return result;\n    }, []);\n  }\n  /**\n   * @param {?} attrSelector\n   * @return {?}\n   */\n\n\n  getTag(attrSelector) {\n    if (!attrSelector) return null;\n    return this._doc.querySelector(`meta[${attrSelector}]`) || null;\n  }\n  /**\n   * @param {?} attrSelector\n   * @return {?}\n   */\n\n\n  getTags(attrSelector) {\n    if (!attrSelector) return [];\n    /** @type {?} */\n\n    const list\n    /*NodeList*/\n    = this._doc.querySelectorAll(`meta[${attrSelector}]`);\n\n    return list ? [].slice.call(list) : [];\n  }\n  /**\n   * @param {?} tag\n   * @param {?=} selector\n   * @return {?}\n   */\n\n\n  updateTag(tag, selector) {\n    if (!tag) return null;\n    selector = selector || this._parseSelector(tag);\n    /** @type {?} */\n\n    const meta =\n    /** @type {?} */\n    this.getTag(selector);\n\n    if (meta) {\n      return this._setMetaElementAttributes(tag, meta);\n    }\n\n    return this._getOrCreateElement(tag, true);\n  }\n  /**\n   * @param {?} attrSelector\n   * @return {?}\n   */\n\n\n  removeTag(attrSelector) {\n    this.removeTagElement(\n    /** @type {?} */\n    this.getTag(attrSelector));\n  }\n  /**\n   * @param {?} meta\n   * @return {?}\n   */\n\n\n  removeTagElement(meta) {\n    if (meta) {\n      this._dom.remove(meta);\n    }\n  }\n  /**\n   * @private\n   * @param {?} meta\n   * @param {?=} forceCreation\n   * @return {?}\n   */\n\n\n  _getOrCreateElement(meta, forceCreation = false) {\n    if (!forceCreation) {\n      /** @type {?} */\n      const selector = this._parseSelector(meta);\n      /** @type {?} */\n\n\n      const elem =\n      /** @type {?} */\n      this.getTag(selector); // It's allowed to have multiple elements with the same name so it's not enough to\n      // just check that element with the same name already present on the page. We also need to\n      // check if element has tag attributes\n\n      if (elem && this._containsAttributes(meta, elem)) return elem;\n    }\n    /** @type {?} */\n\n\n    const element =\n    /** @type {?} */\n    this._dom.createElement('meta');\n\n    this._setMetaElementAttributes(meta, element);\n    /** @type {?} */\n\n\n    const head = this._doc.getElementsByTagName('head')[0];\n\n    head.appendChild(element);\n    return element;\n  }\n  /**\n   * @private\n   * @param {?} tag\n   * @param {?} el\n   * @return {?}\n   */\n\n\n  _setMetaElementAttributes(tag, el) {\n    Object.keys(tag).forEach(\n    /**\n    * @param {?} prop\n    * @return {?}\n    */\n    prop => el.setAttribute(prop, tag[prop]));\n    return el;\n  }\n  /**\n   * @private\n   * @param {?} tag\n   * @return {?}\n   */\n\n\n  _parseSelector(tag) {\n    /** @type {?} */\n    const attr = tag.name ? 'name' : 'property';\n    return `${attr}=\"${tag[attr]}\"`;\n  }\n  /**\n   * @private\n   * @param {?} tag\n   * @param {?} elem\n   * @return {?}\n   */\n\n\n  _containsAttributes(tag, elem) {\n    return Object.keys(tag).every(\n    /**\n    * @param {?} key\n    * @return {?}\n    */\n    key => elem.getAttribute(key) === tag[key]);\n  }\n\n}\n\nMeta.ɵfac = function Meta_Factory(t) {\n  return new (t || Meta)(ɵngcc0.ɵɵinject(DOCUMENT));\n};\n/** @nocollapse */\n\n\nMeta.ctorParameters = () => [{\n  type: undefined,\n  decorators: [{\n    type: Inject,\n    args: [DOCUMENT]\n  }]\n}];\n/** @nocollapse */\n\n\nMeta.ɵprov = ɵɵdefineInjectable({\n  factory: createMeta,\n  token: Meta,\n  providedIn: \"root\"\n});\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(Meta, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root',\n      useFactory: createMeta,\n      deps: []\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }];\n  }, null);\n})();\n\nif (false) {\n  /**\n   * @type {?}\n   * @private\n   */\n  Meta.prototype._dom;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  Meta.prototype._doc;\n}\n/**\n * @fileoverview added by tsickle\n * Generated from: packages/platform-browser/src/browser/title.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Factory to create Title service.\n * @return {?}\n */\n\n\nfunction createTitle() {\n  return new Title(ɵɵinject(DOCUMENT));\n}\n/**\n * A service that can be used to get and set the title of a current HTML document.\n *\n * Since an Angular application can't be bootstrapped on the entire HTML document (`<html>` tag)\n * it is not possible to bind to the `text` property of the `HTMLTitleElement` elements\n * (representing the `<title>` tag). Instead, this service can be used to set and get the current\n * title value.\n *\n * \\@publicApi\n */\n\n\nclass Title {\n  /**\n   * @param {?} _doc\n   */\n  constructor(_doc) {\n    this._doc = _doc;\n  }\n  /**\n   * Get the title of the current HTML document.\n   * @return {?}\n   */\n\n\n  getTitle() {\n    return this._doc.title;\n  }\n  /**\n   * Set the title of the current HTML document.\n   * @param {?} newTitle\n   * @return {?}\n   */\n\n\n  setTitle(newTitle) {\n    this._doc.title = newTitle || '';\n  }\n\n}\n\nTitle.ɵfac = function Title_Factory(t) {\n  return new (t || Title)(ɵngcc0.ɵɵinject(DOCUMENT));\n};\n/** @nocollapse */\n\n\nTitle.ctorParameters = () => [{\n  type: undefined,\n  decorators: [{\n    type: Inject,\n    args: [DOCUMENT]\n  }]\n}];\n/** @nocollapse */\n\n\nTitle.ɵprov = ɵɵdefineInjectable({\n  factory: createTitle,\n  token: Title,\n  providedIn: \"root\"\n});\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(Title, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root',\n      useFactory: createTitle,\n      deps: []\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }];\n  }, null);\n})();\n\nif (false) {\n  /**\n   * @type {?}\n   * @private\n   */\n  Title.prototype._doc;\n}\n/**\n * @fileoverview added by tsickle\n * Generated from: packages/platform-browser/src/browser/tools/browser.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** @type {?} */\n\n\nconst win = typeof window !== 'undefined' && window ||\n/** @type {?} */\n{};\n/**\n * @fileoverview added by tsickle\n * Generated from: packages/platform-browser/src/browser/tools/common_tools.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nclass ChangeDetectionPerfRecord {\n  /**\n   * @param {?} msPerTick\n   * @param {?} numTicks\n   */\n  constructor(msPerTick, numTicks) {\n    this.msPerTick = msPerTick;\n    this.numTicks = numTicks;\n  }\n\n}\n\nif (false) {\n  /** @type {?} */\n  ChangeDetectionPerfRecord.prototype.msPerTick;\n  /** @type {?} */\n\n  ChangeDetectionPerfRecord.prototype.numTicks;\n}\n/**\n * Entry point for all Angular profiling-related debug tools. This object\n * corresponds to the `ng.profiler` in the dev console.\n */\n\n\nclass AngularProfiler {\n  /**\n   * @param {?} ref\n   */\n  constructor(ref) {\n    this.appRef = ref.injector.get(ApplicationRef);\n  } // tslint:disable:no-console\n\n  /**\n   * Exercises change detection in a loop and then prints the average amount of\n   * time in milliseconds how long a single round of change detection takes for\n   * the current state of the UI. It runs a minimum of 5 rounds for a minimum\n   * of 500 milliseconds.\n   *\n   * Optionally, a user may pass a `config` parameter containing a map of\n   * options. Supported options are:\n   *\n   * `record` (boolean) - causes the profiler to record a CPU profile while\n   * it exercises the change detector. Example:\n   *\n   * ```\n   * ng.profiler.timeChangeDetection({record: true})\n   * ```\n   * @param {?} config\n   * @return {?}\n   */\n\n\n  timeChangeDetection(config) {\n    /** @type {?} */\n    const record = config && config['record'];\n    /** @type {?} */\n\n    const profileName = 'Change Detection'; // Profiler is not available in Android browsers, nor in IE 9 without dev tools opened\n\n    /** @type {?} */\n\n    const isProfilerAvailable = win.console.profile != null;\n\n    if (record && isProfilerAvailable) {\n      win.console.profile(profileName);\n    }\n    /** @type {?} */\n\n\n    const start = ɵgetDOM().performanceNow();\n    /** @type {?} */\n\n    let numTicks = 0;\n\n    while (numTicks < 5 || ɵgetDOM().performanceNow() - start < 500) {\n      this.appRef.tick();\n      numTicks++;\n    }\n    /** @type {?} */\n\n\n    const end = ɵgetDOM().performanceNow();\n\n    if (record && isProfilerAvailable) {\n      win.console.profileEnd(profileName);\n    }\n    /** @type {?} */\n\n\n    const msPerTick = (end - start) / numTicks;\n    win.console.log(`ran ${numTicks} change detection cycles`);\n    win.console.log(`${msPerTick.toFixed(2)} ms per check`);\n    return new ChangeDetectionPerfRecord(msPerTick, numTicks);\n  }\n\n}\n\nif (false) {\n  /** @type {?} */\n  AngularProfiler.prototype.appRef;\n}\n/**\n * @fileoverview added by tsickle\n * Generated from: packages/platform-browser/src/browser/tools/tools.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/** @type {?} */\n\n\nconst PROFILER_GLOBAL_NAME = 'profiler';\n/**\n * Enabled Angular debug tools that are accessible via your browser's\n * developer console.\n *\n * Usage:\n *\n * 1. Open developer console (e.g. in Chrome Ctrl + Shift + j)\n * 1. Type `ng.` (usually the console will show auto-complete suggestion)\n * 1. Try the change detection profiler `ng.profiler.timeChangeDetection()`\n *    then hit Enter.\n *\n * \\@publicApi\n * @template T\n * @param {?} ref\n * @return {?}\n */\n\nfunction enableDebugTools(ref) {\n  exportNgVar(PROFILER_GLOBAL_NAME, new AngularProfiler(ref));\n  return ref;\n}\n/**\n * Disables Angular tools.\n *\n * \\@publicApi\n * @return {?}\n */\n\n\nfunction disableDebugTools() {\n  exportNgVar(PROFILER_GLOBAL_NAME, null);\n}\n/**\n * @fileoverview added by tsickle\n * Generated from: packages/platform-browser/src/browser/transfer_state.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @param {?} text\n * @return {?}\n */\n\n\nfunction escapeHtml(text) {\n  /** @type {?} */\n  const escapedText = {\n    '&': '&a;',\n    '\"': '&q;',\n    '\\'': '&s;',\n    '<': '&l;',\n    '>': '&g;'\n  };\n  return text.replace(/[&\"'<>]/g,\n  /**\n  * @param {?} s\n  * @return {?}\n  */\n  s => escapedText[s]);\n}\n/**\n * @param {?} text\n * @return {?}\n */\n\n\nfunction unescapeHtml(text) {\n  /** @type {?} */\n  const unescapedText = {\n    '&a;': '&',\n    '&q;': '\"',\n    '&s;': '\\'',\n    '&l;': '<',\n    '&g;': '>'\n  };\n  return text.replace(/&[^;]+;/g,\n  /**\n  * @param {?} s\n  * @return {?}\n  */\n  s => unescapedText[s]);\n}\n/**\n * Create a `StateKey<T>` that can be used to store value of type T with `TransferState`.\n *\n * Example:\n *\n * ```\n * const COUNTER_KEY = makeStateKey<number>('counter');\n * let value = 10;\n *\n * transferState.set(COUNTER_KEY, value);\n * ```\n *\n * \\@publicApi\n * @template T\n * @param {?} key\n * @return {?}\n */\n\n\nfunction makeStateKey(key) {\n  return (\n    /** @type {?} */\n    key\n  );\n}\n/**\n * A key value store that is transferred from the application on the server side to the application\n * on the client side.\n *\n * `TransferState` will be available as an injectable token. To use it import\n * `ServerTransferStateModule` on the server and `BrowserTransferStateModule` on the client.\n *\n * The values in the store are serialized/deserialized using JSON.stringify/JSON.parse. So only\n * boolean, number, string, null and non-class objects will be serialized and deserialzied in a\n * non-lossy manner.\n *\n * \\@publicApi\n */\n\n\nclass TransferState {\n  constructor() {\n    this.store = {};\n    this.onSerializeCallbacks = {};\n  }\n  /**\n   * \\@internal\n   * @param {?} initState\n   * @return {?}\n   */\n\n\n  static init(initState) {\n    /** @type {?} */\n    const transferState = new TransferState();\n    transferState.store = initState;\n    return transferState;\n  }\n  /**\n   * Get the value corresponding to a key. Return `defaultValue` if key is not found.\n   * @template T\n   * @param {?} key\n   * @param {?} defaultValue\n   * @return {?}\n   */\n\n\n  get(key, defaultValue) {\n    return this.store[key] !== undefined ?\n    /** @type {?} */\n    this.store[key] : defaultValue;\n  }\n  /**\n   * Set the value corresponding to a key.\n   * @template T\n   * @param {?} key\n   * @param {?} value\n   * @return {?}\n   */\n\n\n  set(key, value) {\n    this.store[key] = value;\n  }\n  /**\n   * Remove a key from the store.\n   * @template T\n   * @param {?} key\n   * @return {?}\n   */\n\n\n  remove(key) {\n    delete this.store[key];\n  }\n  /**\n   * Test whether a key exists in the store.\n   * @template T\n   * @param {?} key\n   * @return {?}\n   */\n\n\n  hasKey(key) {\n    return this.store.hasOwnProperty(key);\n  }\n  /**\n   * Register a callback to provide the value for a key when `toJson` is called.\n   * @template T\n   * @param {?} key\n   * @param {?} callback\n   * @return {?}\n   */\n\n\n  onSerialize(key, callback) {\n    this.onSerializeCallbacks[key] = callback;\n  }\n  /**\n   * Serialize the current state of the store to JSON.\n   * @return {?}\n   */\n\n\n  toJson() {\n    // Call the onSerialize callbacks and put those values into the store.\n    for (const key in this.onSerializeCallbacks) {\n      if (this.onSerializeCallbacks.hasOwnProperty(key)) {\n        try {\n          this.store[key] = this.onSerializeCallbacks[key]();\n        } catch (e) {\n          console.warn('Exception in onSerialize callback: ', e);\n        }\n      }\n    }\n\n    return JSON.stringify(this.store);\n  }\n\n}\n\nTransferState.ɵfac = function TransferState_Factory(t) {\n  return new (t || TransferState)();\n};\n\nTransferState.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: TransferState,\n  factory: TransferState.ɵfac\n});\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(TransferState, [{\n    type: Injectable\n  }], function () {\n    return [];\n  }, null);\n})();\n\nif (false) {\n  /**\n   * @type {?}\n   * @private\n   */\n  TransferState.prototype.store;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  TransferState.prototype.onSerializeCallbacks;\n}\n/**\n * @param {?} doc\n * @param {?} appId\n * @return {?}\n */\n\n\nfunction initTransferState(doc, appId) {\n  // Locate the script tag with the JSON data transferred from the server.\n  // The id of the script tag is set to the Angular appId + 'state'.\n\n  /** @type {?} */\n  const script = doc.getElementById(appId + '-state');\n  /** @type {?} */\n\n  let initialState = {};\n\n  if (script && script.textContent) {\n    try {\n      initialState = JSON.parse(unescapeHtml(script.textContent));\n    } catch (e) {\n      console.warn('Exception while restoring TransferState for app ' + appId, e);\n    }\n  }\n\n  return TransferState.init(initialState);\n}\n/**\n * NgModule to install on the client side while using the `TransferState` to transfer state from\n * server to client.\n *\n * \\@publicApi\n */\n\n\nclass BrowserTransferStateModule {}\n\nBrowserTransferStateModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: BrowserTransferStateModule\n});\nBrowserTransferStateModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function BrowserTransferStateModule_Factory(t) {\n    return new (t || BrowserTransferStateModule)();\n  },\n  providers: [{\n    provide: TransferState,\n    useFactory: initTransferState,\n    deps: [DOCUMENT, APP_ID]\n  }]\n});\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(BrowserTransferStateModule, [{\n    type: NgModule,\n    args: [{\n      providers: [{\n        provide: TransferState,\n        useFactory: initTransferState,\n        deps: [DOCUMENT, APP_ID]\n      }]\n    }]\n  }], null, null);\n})();\n/**\n * @fileoverview added by tsickle\n * Generated from: packages/platform-browser/src/dom/debug/by.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Predicates for use with {\\@link DebugElement}'s query functions.\n *\n * \\@publicApi\n */\n\n\nclass By {\n  /**\n   * Match all nodes.\n   *\n   * \\@usageNotes\n   * ### Example\n   *\n   * {\\@example platform-browser/dom/debug/ts/by/by.ts region='by_all'}\n   * @return {?}\n   */\n  static all() {\n    return (\n      /**\n      * @return {?}\n      */\n      () => true\n    );\n  }\n  /**\n   * Match elements by the given CSS selector.\n   *\n   * \\@usageNotes\n   * ### Example\n   *\n   * {\\@example platform-browser/dom/debug/ts/by/by.ts region='by_css'}\n   * @param {?} selector\n   * @return {?}\n   */\n\n\n  static css(selector) {\n    return (\n      /**\n      * @param {?} debugElement\n      * @return {?}\n      */\n      debugElement => {\n        return debugElement.nativeElement != null ? elementMatches(debugElement.nativeElement, selector) : false;\n      }\n    );\n  }\n  /**\n   * Match nodes that have the given directive present.\n   *\n   * \\@usageNotes\n   * ### Example\n   *\n   * {\\@example platform-browser/dom/debug/ts/by/by.ts region='by_directive'}\n   * @param {?} type\n   * @return {?}\n   */\n\n\n  static directive(type) {\n    return (\n      /**\n      * @param {?} debugNode\n      * @return {?}\n      */\n      debugNode =>\n      /** @type {?} */\n      debugNode.providerTokens.indexOf(type) !== -1\n    );\n  }\n\n}\n/**\n * @param {?} n\n * @param {?} selector\n * @return {?}\n */\n\n\nfunction elementMatches(n, selector) {\n  if (ɵgetDOM().isElementNode(n)) {\n    return n.matches && n.matches(selector) || n.msMatchesSelector && n.msMatchesSelector(selector) || n.webkitMatchesSelector && n.webkitMatchesSelector(selector);\n  }\n\n  return false;\n}\n/**\n * @fileoverview added by tsickle\n * Generated from: packages/platform-browser/src/private_export.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * Generated from: packages/platform-browser/src/version.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * \\@publicApi\n * @type {?}\n */\n\n\nconst VERSION = new Version('9.1.9');\n/**\n * @fileoverview added by tsickle\n * Generated from: packages/platform-browser/src/platform-browser.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * Generated from: packages/platform-browser/public_api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * Generated from: packages/platform-browser/index.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BrowserModule, BrowserTransferStateModule, By, DomSanitizer, EVENT_MANAGER_PLUGINS, EventManager, HAMMER_GESTURE_CONFIG, HAMMER_LOADER, HammerGestureConfig, HammerModule, Meta, Title, TransferState, VERSION, disableDebugTools, enableDebugTools, makeStateKey, platformBrowser, BROWSER_SANITIZATION_PROVIDERS as ɵBROWSER_SANITIZATION_PROVIDERS, BROWSER_SANITIZATION_PROVIDERS__POST_R3__ as ɵBROWSER_SANITIZATION_PROVIDERS__POST_R3__, BrowserDomAdapter as ɵBrowserDomAdapter, BrowserGetTestability as ɵBrowserGetTestability, DomEventsPlugin as ɵDomEventsPlugin, DomRendererFactory2 as ɵDomRendererFactory2, DomSanitizerImpl as ɵDomSanitizerImpl, DomSharedStylesHost as ɵDomSharedStylesHost, ELEMENT_PROBE_PROVIDERS as ɵELEMENT_PROBE_PROVIDERS, ELEMENT_PROBE_PROVIDERS__POST_R3__ as ɵELEMENT_PROBE_PROVIDERS__POST_R3__, HAMMER_PROVIDERS__POST_R3__ as ɵHAMMER_PROVIDERS__POST_R3__, HammerGesturesPlugin as ɵHammerGesturesPlugin, INTERNAL_BROWSER_PLATFORM_PROVIDERS as ɵINTERNAL_BROWSER_PLATFORM_PROVIDERS, KeyEventsPlugin as ɵKeyEventsPlugin, NAMESPACE_URIS as ɵNAMESPACE_URIS, SharedStylesHost as ɵSharedStylesHost, TRANSITION_ID as ɵTRANSITION_ID, errorHandler as ɵangular_packages_platform_browser_platform_browser_a, _document as ɵangular_packages_platform_browser_platform_browser_b, BROWSER_MODULE_PROVIDERS as ɵangular_packages_platform_browser_platform_browser_c, createMeta as ɵangular_packages_platform_browser_platform_browser_d, createTitle as ɵangular_packages_platform_browser_platform_browser_e, initTransferState as ɵangular_packages_platform_browser_platform_browser_f, EventManagerPlugin as ɵangular_packages_platform_browser_platform_browser_g, HAMMER_PROVIDERS__PRE_R3__ as ɵangular_packages_platform_browser_platform_browser_h, HAMMER_PROVIDERS as ɵangular_packages_platform_browser_platform_browser_i, domSanitizerImplFactory as ɵangular_packages_platform_browser_platform_browser_j, appInitializerFactory as ɵangular_packages_platform_browser_platform_browser_k, SERVER_TRANSITION_PROVIDERS as ɵangular_packages_platform_browser_platform_browser_l, _createNgProbeR2 as ɵangular_packages_platform_browser_platform_browser_m, ELEMENT_PROBE_PROVIDERS__PRE_R3__ as ɵangular_packages_platform_browser_platform_browser_n, GenericBrowserDomAdapter as ɵangular_packages_platform_browser_platform_browser_o, escapeHtml as ɵescapeHtml, flattenStyles as ɵflattenStyles, initDomAdapter as ɵinitDomAdapter, shimContentAttribute as ɵshimContentAttribute, shimHostAttribute as ɵshimHostAttribute };","map":{"version":3,"sources":["../../../../../../packages/platform-browser/src/browser/generic_browser_adapter.ts","../../../../../../packages/platform-browser/src/browser/browser_adapter.ts","../../../../../../packages/platform-browser/src/browser/server-transition.ts","../../../../../../packages/platform-browser/src/browser/testability.ts","../../../../../../packages/platform-browser/src/dom/util.ts","../../../../../../packages/platform-browser/src/dom/debug/ng_probe.ts","../../../../../../packages/platform-browser/src/dom/events/event_manager.ts","../../../../../../packages/platform-browser/src/dom/shared_styles_host.ts","../../../../../../packages/platform-browser/src/dom/dom_renderer.ts","../../../../../../packages/platform-browser/src/dom/events/dom_events.ts","../../../../../../packages/platform-browser/src/dom/events/hammer_gestures.ts","../../../../../../packages/platform-browser/src/dom/events/key_events.ts","../../../../../../packages/platform-browser/src/security/dom_sanitization_service.ts","../../../../../../packages/platform-browser/src/browser.ts","../../../../../../packages/platform-browser/src/browser/meta.ts","../../../../../../packages/platform-browser/src/browser/title.ts","../../../../../../packages/platform-browser/src/browser/tools/browser.ts","../../../../../../packages/platform-browser/src/browser/tools/common_tools.ts","../../../../../../packages/platform-browser/src/browser/tools/tools.ts","../../../../../../packages/platform-browser/src/browser/transfer_state.ts","../../../../../../packages/platform-browser/src/dom/debug/by.ts","../../../../../../packages/platform-browser/src/version.ts","../../../../../../packages/platform-browser/platform-browser.ts"],"names":["DomAdapter","global","setRootDomAdapter","parseCookieValue","getDOM","Console","allowSanitizationBypassOrThrow","unwrapSafeValue","_sanitizeHtml","_sanitizeStyle","getSanitizationBypassType","_sanitizeUrl","bypassSanitizationTrustHtml","bypassSanitizationTrustStyle","bypassSanitizationTrustScript","bypassSanitizationTrustUrl","bypassSanitizationTrustResourceUrl","PLATFORM_BROWSER_ID","INJECTOR_SCOPE","window"],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ɵDomAdapter as DomAdapter} from '@angular/common';\n\n\n\n/**\n * Provides DOM operations in any browser environment.\n *\n * @security Tread carefully! Interacting with the DOM directly is dangerous and\n * can introduce XSS risks.\n */\nexport abstract class GenericBrowserDomAdapter extends DomAdapter {\n  constructor() {\n    super();\n  }\n\n  supportsDOMEvents(): boolean {\n    return true;\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ɵparseCookieValue as parseCookieValue, ɵsetRootDomAdapter as setRootDomAdapter} from '@angular/common';\nimport {ɵglobal as global} from '@angular/core';\n\nimport {GenericBrowserDomAdapter} from './generic_browser_adapter';\n\nconst nodeContains: (this: Node, other: Node) => boolean = (() => {\n  if (global['Node']) {\n    return global['Node'].prototype.contains || function(this: Node, node: any) {\n      return !!(this.compareDocumentPosition(node) & 16);\n    };\n  }\n\n  return undefined as any;\n})();\n\n/**\n * A `DomAdapter` powered by full browser DOM APIs.\n *\n * @security Tread carefully! Interacting with the DOM directly is dangerous and\n * can introduce XSS risks.\n */\n/* tslint:disable:requireParameterType no-console */\nexport class BrowserDomAdapter extends GenericBrowserDomAdapter {\n  static makeCurrent() {\n    setRootDomAdapter(new BrowserDomAdapter());\n  }\n  getProperty(el: Node, name: string): any {\n    return (<any>el)[name];\n  }\n\n  log(error: string): void {\n    if (window.console) {\n      window.console.log && window.console.log(error);\n    }\n  }\n\n  logGroup(error: string): void {\n    if (window.console) {\n      window.console.group && window.console.group(error);\n    }\n  }\n\n  logGroupEnd(): void {\n    if (window.console) {\n      window.console.groupEnd && window.console.groupEnd();\n    }\n  }\n\n  onAndCancel(el: Node, evt: any, listener: any): Function {\n    el.addEventListener(evt, listener, false);\n    // Needed to follow Dart's subscription semantic, until fix of\n    // https://code.google.com/p/dart/issues/detail?id=17406\n    return () => {\n      el.removeEventListener(evt, listener, false);\n    };\n  }\n  dispatchEvent(el: Node, evt: any) {\n    el.dispatchEvent(evt);\n  }\n  remove(node: Node): Node {\n    if (node.parentNode) {\n      node.parentNode.removeChild(node);\n    }\n    return node;\n  }\n  getValue(el: any): string {\n    return el.value;\n  }\n  createElement(tagName: string, doc?: Document): HTMLElement {\n    doc = doc || this.getDefaultDocument();\n    return doc.createElement(tagName);\n  }\n  createHtmlDocument(): HTMLDocument {\n    return document.implementation.createHTMLDocument('fakeTitle');\n  }\n  getDefaultDocument(): Document {\n    return document;\n  }\n\n  isElementNode(node: Node): boolean {\n    return node.nodeType === Node.ELEMENT_NODE;\n  }\n\n  isShadowRoot(node: any): boolean {\n    return node instanceof DocumentFragment;\n  }\n\n  getGlobalEventTarget(doc: Document, target: string): EventTarget|null {\n    if (target === 'window') {\n      return window;\n    }\n    if (target === 'document') {\n      return doc;\n    }\n    if (target === 'body') {\n      return doc.body;\n    }\n    return null;\n  }\n  getHistory(): History {\n    return window.history;\n  }\n  getLocation(): Location {\n    return window.location;\n  }\n  getBaseHref(doc: Document): string|null {\n    const href = getBaseElementHref();\n    return href == null ? null : relativePath(href);\n  }\n  resetBaseElement(): void {\n    baseElement = null;\n  }\n  getUserAgent(): string {\n    return window.navigator.userAgent;\n  }\n  performanceNow(): number {\n    // performance.now() is not available in all browsers, see\n    // http://caniuse.com/#search=performance.now\n    return window.performance && window.performance.now ? window.performance.now() :\n                                                          new Date().getTime();\n  }\n\n  supportsCookies(): boolean {\n    return true;\n  }\n\n  getCookie(name: string): string|null {\n    return parseCookieValue(document.cookie, name);\n  }\n}\n\nlet baseElement: HTMLElement|null = null;\nfunction getBaseElementHref(): string|null {\n  if (!baseElement) {\n    baseElement = document.querySelector('base')!;\n    if (!baseElement) {\n      return null;\n    }\n  }\n  return baseElement.getAttribute('href');\n}\n\n// based on urlUtils.js in AngularJS 1\nlet urlParsingNode: any;\nfunction relativePath(url: any): string {\n  if (!urlParsingNode) {\n    urlParsingNode = document.createElement('a');\n  }\n  urlParsingNode.setAttribute('href', url);\n  return (urlParsingNode.pathname.charAt(0) === '/') ? urlParsingNode.pathname :\n                                                       '/' + urlParsingNode.pathname;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {DOCUMENT, ɵgetDOM as getDOM} from '@angular/common';\nimport {APP_INITIALIZER, ApplicationInitStatus, Inject, InjectionToken, Injector, StaticProvider} from '@angular/core';\n\n/**\n * An id that identifies a particular application being bootstrapped, that should\n * match across the client/server boundary.\n */\nexport const TRANSITION_ID = new InjectionToken('TRANSITION_ID');\n\nexport function appInitializerFactory(transitionId: string, document: any, injector: Injector) {\n  return () => {\n    // Wait for all application initializers to be completed before removing the styles set by\n    // the server.\n    injector.get(ApplicationInitStatus).donePromise.then(() => {\n      const dom = getDOM();\n      const styles: any[] =\n          Array.prototype.slice.apply(document.querySelectorAll(`style[ng-transition]`));\n      styles.filter(el => el.getAttribute('ng-transition') === transitionId)\n          .forEach(el => dom.remove(el));\n    });\n  };\n}\n\nexport const SERVER_TRANSITION_PROVIDERS: StaticProvider[] = [\n  {\n    provide: APP_INITIALIZER,\n    useFactory: appInitializerFactory,\n    deps: [TRANSITION_ID, DOCUMENT, Injector],\n    multi: true\n  },\n];\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ɵgetDOM as getDOM} from '@angular/common';\nimport {GetTestability, setTestabilityGetter, Testability, TestabilityRegistry, ɵglobal as global} from '@angular/core';\n\nexport class BrowserGetTestability implements GetTestability {\n  static init() {\n    setTestabilityGetter(new BrowserGetTestability());\n  }\n\n  addToWindow(registry: TestabilityRegistry): void {\n    global['getAngularTestability'] = (elem: any, findInAncestors: boolean = true) => {\n      const testability = registry.findTestabilityInTree(elem, findInAncestors);\n      if (testability == null) {\n        throw new Error('Could not find testability for element.');\n      }\n      return testability;\n    };\n\n    global['getAllAngularTestabilities'] = () => registry.getAllTestabilities();\n\n    global['getAllAngularRootElements'] = () => registry.getAllRootElements();\n\n    const whenAllStable = (callback: any /** TODO #9100 */) => {\n      const testabilities = global['getAllAngularTestabilities']();\n      let count = testabilities.length;\n      let didWork = false;\n      const decrement = function(didWork_: any /** TODO #9100 */) {\n        didWork = didWork || didWork_;\n        count--;\n        if (count == 0) {\n          callback(didWork);\n        }\n      };\n      testabilities.forEach(function(testability: any /** TODO #9100 */) {\n        testability.whenStable(decrement);\n      });\n    };\n\n    if (!global['frameworkStabilizers']) {\n      global['frameworkStabilizers'] = [];\n    }\n    global['frameworkStabilizers'].push(whenAllStable);\n  }\n\n  findTestabilityInTree(registry: TestabilityRegistry, elem: any, findInAncestors: boolean):\n      Testability|null {\n    if (elem == null) {\n      return null;\n    }\n    const t = registry.getTestability(elem);\n    if (t != null) {\n      return t;\n    } else if (!findInAncestors) {\n      return null;\n    }\n    if (getDOM().isShadowRoot(elem)) {\n      return this.findTestabilityInTree(registry, (<any>elem).host, true);\n    }\n    return this.findTestabilityInTree(registry, elem.parentElement, true);\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ɵglobal as global} from '@angular/core';\n\nconst CAMEL_CASE_REGEXP = /([A-Z])/g;\nconst DASH_CASE_REGEXP = /-([a-z])/g;\n\n\nexport function camelCaseToDashCase(input: string): string {\n  return input.replace(CAMEL_CASE_REGEXP, (...m: string[]) => '-' + m[1].toLowerCase());\n}\n\nexport function dashCaseToCamelCase(input: string): string {\n  return input.replace(DASH_CASE_REGEXP, (...m: string[]) => m[1].toUpperCase());\n}\n\n/**\n * Exports the value under a given `name` in the global property `ng`. For example `ng.probe` if\n * `name` is `'probe'`.\n * @param name Name under which it will be exported. Keep in mind this will be a property of the\n * global `ng` object.\n * @param value The value to export.\n */\nexport function exportNgVar(name: string, value: any): void {\n  if (typeof COMPILED === 'undefined' || !COMPILED) {\n    // Note: we can't export `ng` when using closure enhanced optimization as:\n    // - closure declares globals itself for minified names, which sometimes clobber our `ng` global\n    // - we can't declare a closure extern as the namespace `ng` is already used within Google\n    //   for typings for angularJS (via `goog.provide('ng....')`).\n    const ng = global['ng'] = (global['ng'] as {[key: string]: any} | undefined) || {};\n    ng[name] = value;\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {APP_INITIALIZER, ApplicationRef, DebugNode, NgProbeToken, NgZone, Optional, Provider, ɵgetDebugNodeR2} from '@angular/core';\n\nimport {exportNgVar} from '../util';\n\nconst CORE_TOKENS = (() => ({\n                       'ApplicationRef': ApplicationRef,\n                       'NgZone': NgZone,\n                     }))();\n\nconst INSPECT_GLOBAL_NAME = 'probe';\nconst CORE_TOKENS_GLOBAL_NAME = 'coreTokens';\n\n/**\n * Returns a {@link DebugElement} for the given native DOM element, or\n * null if the given native element does not have an Angular view associated\n * with it.\n */\nexport function inspectNativeElementR2(element: any): DebugNode|null {\n  return ɵgetDebugNodeR2(element);\n}\n\nexport function _createNgProbeR2(coreTokens: NgProbeToken[]): any {\n  exportNgVar(INSPECT_GLOBAL_NAME, inspectNativeElementR2);\n  exportNgVar(CORE_TOKENS_GLOBAL_NAME, {...CORE_TOKENS, ..._ngProbeTokensToMap(coreTokens || [])});\n  return () => inspectNativeElementR2;\n}\n\nfunction _ngProbeTokensToMap(tokens: NgProbeToken[]): {[name: string]: any} {\n  return tokens.reduce((prev: any, t: any) => (prev[t.name] = t.token, prev), {});\n}\n\n/**\n * In Ivy, we don't support NgProbe because we have our own set of testing utilities\n * with more robust functionality.\n *\n * We shouldn't bring in NgProbe because it prevents DebugNode and friends from\n * tree-shaking properly.\n */\nexport const ELEMENT_PROBE_PROVIDERS__POST_R3__ = [];\n\n/**\n * Providers which support debugging Angular applications (e.g. via `ng.probe`).\n */\nexport const ELEMENT_PROBE_PROVIDERS__PRE_R3__: Provider[] = [\n  {\n    provide: APP_INITIALIZER,\n    useFactory: _createNgProbeR2,\n    deps: [\n      [NgProbeToken, new Optional()],\n    ],\n    multi: true,\n  },\n];\n\nexport const ELEMENT_PROBE_PROVIDERS = ELEMENT_PROBE_PROVIDERS__PRE_R3__;\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ɵgetDOM as getDOM} from '@angular/common';\nimport {Inject, Injectable, InjectionToken, NgZone} from '@angular/core';\n\n/**\n * The injection token for the event-manager plug-in service.\n *\n * @publicApi\n */\nexport const EVENT_MANAGER_PLUGINS =\n    new InjectionToken<EventManagerPlugin[]>('EventManagerPlugins');\n\n/**\n * An injectable service that provides event management for Angular\n * through a browser plug-in.\n *\n * @publicApi\n */\n@Injectable()\nexport class EventManager {\n  private _plugins: EventManagerPlugin[];\n  private _eventNameToPlugin = new Map<string, EventManagerPlugin>();\n\n  /**\n   * Initializes an instance of the event-manager service.\n   */\n  constructor(@Inject(EVENT_MANAGER_PLUGINS) plugins: EventManagerPlugin[], private _zone: NgZone) {\n    plugins.forEach(p => p.manager = this);\n    this._plugins = plugins.slice().reverse();\n  }\n\n  /**\n   * Registers a handler for a specific element and event.\n   *\n   * @param element The HTML element to receive event notifications.\n   * @param eventName The name of the event to listen for.\n   * @param handler A function to call when the notification occurs. Receives the\n   * event object as an argument.\n   * @returns  A callback function that can be used to remove the handler.\n   */\n  addEventListener(element: HTMLElement, eventName: string, handler: Function): Function {\n    const plugin = this._findPluginFor(eventName);\n    return plugin.addEventListener(element, eventName, handler);\n  }\n\n  /**\n   * Registers a global handler for an event in a target view.\n   *\n   * @param target A target for global event notifications. One of \"window\", \"document\", or \"body\".\n   * @param eventName The name of the event to listen for.\n   * @param handler A function to call when the notification occurs. Receives the\n   * event object as an argument.\n   * @returns A callback function that can be used to remove the handler.\n   */\n  addGlobalEventListener(target: string, eventName: string, handler: Function): Function {\n    const plugin = this._findPluginFor(eventName);\n    return plugin.addGlobalEventListener(target, eventName, handler);\n  }\n\n  /**\n   * Retrieves the compilation zone in which event listeners are registered.\n   */\n  getZone(): NgZone {\n    return this._zone;\n  }\n\n  /** @internal */\n  _findPluginFor(eventName: string): EventManagerPlugin {\n    const plugin = this._eventNameToPlugin.get(eventName);\n    if (plugin) {\n      return plugin;\n    }\n\n    const plugins = this._plugins;\n    for (let i = 0; i < plugins.length; i++) {\n      const plugin = plugins[i];\n      if (plugin.supports(eventName)) {\n        this._eventNameToPlugin.set(eventName, plugin);\n        return plugin;\n      }\n    }\n    throw new Error(`No event manager plugin found for event ${eventName}`);\n  }\n}\n\nexport abstract class EventManagerPlugin {\n  constructor(private _doc: any) {}\n\n  // TODO(issue/24571): remove '!'.\n  manager!: EventManager;\n\n  abstract supports(eventName: string): boolean;\n\n  abstract addEventListener(element: HTMLElement, eventName: string, handler: Function): Function;\n\n  addGlobalEventListener(element: string, eventName: string, handler: Function): Function {\n    const target: HTMLElement = getDOM().getGlobalEventTarget(this._doc, element);\n    if (!target) {\n      throw new Error(`Unsupported event target ${target} for event ${eventName}`);\n    }\n    return this.addEventListener(target, eventName, handler);\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {DOCUMENT, ɵgetDOM as getDOM} from '@angular/common';\nimport {Inject, Injectable, OnDestroy} from '@angular/core';\n\n@Injectable()\nexport class SharedStylesHost {\n  /** @internal */\n  protected _stylesSet = new Set<string>();\n\n  addStyles(styles: string[]): void {\n    const additions = new Set<string>();\n    styles.forEach(style => {\n      if (!this._stylesSet.has(style)) {\n        this._stylesSet.add(style);\n        additions.add(style);\n      }\n    });\n    this.onStylesAdded(additions);\n  }\n\n  onStylesAdded(additions: Set<string>): void {}\n\n  getAllStyles(): string[] {\n    return Array.from(this._stylesSet);\n  }\n}\n\n@Injectable()\nexport class DomSharedStylesHost extends SharedStylesHost implements OnDestroy {\n  private _hostNodes = new Set<Node>();\n  private _styleNodes = new Set<Node>();\n  constructor(@Inject(DOCUMENT) private _doc: any) {\n    super();\n    this._hostNodes.add(_doc.head);\n  }\n\n  private _addStylesToHost(styles: Set<string>, host: Node): void {\n    styles.forEach((style: string) => {\n      const styleEl = this._doc.createElement('style');\n      styleEl.textContent = style;\n      this._styleNodes.add(host.appendChild(styleEl));\n    });\n  }\n\n  addHost(hostNode: Node): void {\n    this._addStylesToHost(this._stylesSet, hostNode);\n    this._hostNodes.add(hostNode);\n  }\n\n  removeHost(hostNode: Node): void {\n    this._hostNodes.delete(hostNode);\n  }\n\n  onStylesAdded(additions: Set<string>): void {\n    this._hostNodes.forEach(hostNode => this._addStylesToHost(additions, hostNode));\n  }\n\n  ngOnDestroy(): void {\n    this._styleNodes.forEach(styleNode => getDOM().remove(styleNode));\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {APP_ID, Inject, Injectable, Renderer2, RendererFactory2, RendererStyleFlags2, RendererType2, ViewEncapsulation} from '@angular/core';\n\nimport {EventManager} from './events/event_manager';\nimport {DomSharedStylesHost} from './shared_styles_host';\n\nexport const NAMESPACE_URIS: {[ns: string]: string} = {\n  'svg': 'http://www.w3.org/2000/svg',\n  'xhtml': 'http://www.w3.org/1999/xhtml',\n  'xlink': 'http://www.w3.org/1999/xlink',\n  'xml': 'http://www.w3.org/XML/1998/namespace',\n  'xmlns': 'http://www.w3.org/2000/xmlns/',\n};\n\nconst COMPONENT_REGEX = /%COMP%/g;\nconst NG_DEV_MODE = typeof ngDevMode === 'undefined' || !!ngDevMode;\n\nexport const COMPONENT_VARIABLE = '%COMP%';\nexport const HOST_ATTR = `_nghost-${COMPONENT_VARIABLE}`;\nexport const CONTENT_ATTR = `_ngcontent-${COMPONENT_VARIABLE}`;\n\nexport function shimContentAttribute(componentShortId: string): string {\n  return CONTENT_ATTR.replace(COMPONENT_REGEX, componentShortId);\n}\n\nexport function shimHostAttribute(componentShortId: string): string {\n  return HOST_ATTR.replace(COMPONENT_REGEX, componentShortId);\n}\n\nexport function flattenStyles(\n    compId: string, styles: Array<any|any[]>, target: string[]): string[] {\n  for (let i = 0; i < styles.length; i++) {\n    let style = styles[i];\n\n    if (Array.isArray(style)) {\n      flattenStyles(compId, style, target);\n    } else {\n      style = style.replace(COMPONENT_REGEX, compId);\n      target.push(style);\n    }\n  }\n  return target;\n}\n\nfunction decoratePreventDefault(eventHandler: Function): Function {\n  // `DebugNode.triggerEventHandler` needs to know if the listener was created with\n  // decoratePreventDefault or is a listener added outside the Angular context so it can handle the\n  // two differently. In the first case, the special '__ngUnwrap__' token is passed to the unwrap\n  // the listener (see below).\n  return (event: any) => {\n    // Ivy uses '__ngUnwrap__' as a special token that allows us to unwrap the function\n    // so that it can be invoked programmatically by `DebugNode.triggerEventHandler`. The debug_node\n    // can inspect the listener toString contents for the existence of this special token. Because\n    // the token is a string literal, it is ensured to not be modified by compiled code.\n    if (event === '__ngUnwrap__') {\n      return eventHandler;\n    }\n\n    const allowDefaultBehavior = eventHandler(event);\n    if (allowDefaultBehavior === false) {\n      // TODO(tbosch): move preventDefault into event plugins...\n      event.preventDefault();\n      event.returnValue = false;\n    }\n\n    return undefined;\n  };\n}\n\n@Injectable()\nexport class DomRendererFactory2 implements RendererFactory2 {\n  private rendererByCompId = new Map<string, Renderer2>();\n  private defaultRenderer: Renderer2;\n\n  constructor(\n      private eventManager: EventManager, private sharedStylesHost: DomSharedStylesHost,\n      @Inject(APP_ID) private appId: string) {\n    this.defaultRenderer = new DefaultDomRenderer2(eventManager);\n  }\n\n  createRenderer(element: any, type: RendererType2|null): Renderer2 {\n    if (!element || !type) {\n      return this.defaultRenderer;\n    }\n    switch (type.encapsulation) {\n      case ViewEncapsulation.Emulated: {\n        let renderer = this.rendererByCompId.get(type.id);\n        if (!renderer) {\n          renderer = new EmulatedEncapsulationDomRenderer2(\n              this.eventManager, this.sharedStylesHost, type, this.appId);\n          this.rendererByCompId.set(type.id, renderer);\n        }\n        (<EmulatedEncapsulationDomRenderer2>renderer).applyToHost(element);\n        return renderer;\n      }\n      case ViewEncapsulation.Native:\n      case ViewEncapsulation.ShadowDom:\n        return new ShadowDomRenderer(this.eventManager, this.sharedStylesHost, element, type);\n      default: {\n        if (!this.rendererByCompId.has(type.id)) {\n          const styles = flattenStyles(type.id, type.styles, []);\n          this.sharedStylesHost.addStyles(styles);\n          this.rendererByCompId.set(type.id, this.defaultRenderer);\n        }\n        return this.defaultRenderer;\n      }\n    }\n  }\n\n  begin() {}\n  end() {}\n}\n\nclass DefaultDomRenderer2 implements Renderer2 {\n  data: {[key: string]: any} = Object.create(null);\n\n  constructor(private eventManager: EventManager) {}\n\n  destroy(): void {}\n\n  destroyNode: null;\n\n  createElement(name: string, namespace?: string): any {\n    if (namespace) {\n      // In cases where Ivy (not ViewEngine) is giving us the actual namespace, the look up by key\n      // will result in undefined, so we just return the namespace here.\n      return document.createElementNS(NAMESPACE_URIS[namespace] || namespace, name);\n    }\n\n    return document.createElement(name);\n  }\n\n  createComment(value: string): any {\n    return document.createComment(value);\n  }\n\n  createText(value: string): any {\n    return document.createTextNode(value);\n  }\n\n  appendChild(parent: any, newChild: any): void {\n    parent.appendChild(newChild);\n  }\n\n  insertBefore(parent: any, newChild: any, refChild: any): void {\n    if (parent) {\n      parent.insertBefore(newChild, refChild);\n    }\n  }\n\n  removeChild(parent: any, oldChild: any): void {\n    if (parent) {\n      parent.removeChild(oldChild);\n    }\n  }\n\n  selectRootElement(selectorOrNode: string|any, preserveContent?: boolean): any {\n    let el: any = typeof selectorOrNode === 'string' ? document.querySelector(selectorOrNode) :\n                                                       selectorOrNode;\n    if (!el) {\n      throw new Error(`The selector \"${selectorOrNode}\" did not match any elements`);\n    }\n    if (!preserveContent) {\n      el.textContent = '';\n    }\n    return el;\n  }\n\n  parentNode(node: any): any {\n    return node.parentNode;\n  }\n\n  nextSibling(node: any): any {\n    return node.nextSibling;\n  }\n\n  setAttribute(el: any, name: string, value: string, namespace?: string): void {\n    if (namespace) {\n      name = namespace + ':' + name;\n      // TODO(FW-811): Ivy may cause issues here because it's passing around\n      // full URIs for namespaces, therefore this lookup will fail.\n      const namespaceUri = NAMESPACE_URIS[namespace];\n      if (namespaceUri) {\n        el.setAttributeNS(namespaceUri, name, value);\n      } else {\n        el.setAttribute(name, value);\n      }\n    } else {\n      el.setAttribute(name, value);\n    }\n  }\n\n  removeAttribute(el: any, name: string, namespace?: string): void {\n    if (namespace) {\n      // TODO(FW-811): Ivy may cause issues here because it's passing around\n      // full URIs for namespaces, therefore this lookup will fail.\n      const namespaceUri = NAMESPACE_URIS[namespace];\n      if (namespaceUri) {\n        el.removeAttributeNS(namespaceUri, name);\n      } else {\n        // TODO(FW-811): Since ivy is passing around full URIs for namespaces\n        // this could result in properties like `http://www.w3.org/2000/svg:cx=\"123\"`,\n        // which is wrong.\n        el.removeAttribute(`${namespace}:${name}`);\n      }\n    } else {\n      el.removeAttribute(name);\n    }\n  }\n\n  addClass(el: any, name: string): void {\n    el.classList.add(name);\n  }\n\n  removeClass(el: any, name: string): void {\n    el.classList.remove(name);\n  }\n\n  setStyle(el: any, style: string, value: any, flags: RendererStyleFlags2): void {\n    if (flags & RendererStyleFlags2.DashCase) {\n      el.style.setProperty(\n          style, value, !!(flags & RendererStyleFlags2.Important) ? 'important' : '');\n    } else {\n      el.style[style] = value;\n    }\n  }\n\n  removeStyle(el: any, style: string, flags: RendererStyleFlags2): void {\n    if (flags & RendererStyleFlags2.DashCase) {\n      el.style.removeProperty(style);\n    } else {\n      // IE requires '' instead of null\n      // see https://github.com/angular/angular/issues/7916\n      el.style[style] = '';\n    }\n  }\n\n  setProperty(el: any, name: string, value: any): void {\n    NG_DEV_MODE && checkNoSyntheticProp(name, 'property');\n    el[name] = value;\n  }\n\n  setValue(node: any, value: string): void {\n    node.nodeValue = value;\n  }\n\n  listen(target: 'window'|'document'|'body'|any, event: string, callback: (event: any) => boolean):\n      () => void {\n    NG_DEV_MODE && checkNoSyntheticProp(event, 'listener');\n    if (typeof target === 'string') {\n      return <() => void>this.eventManager.addGlobalEventListener(\n          target, event, decoratePreventDefault(callback));\n    }\n    return <() => void>this.eventManager.addEventListener(\n               target, event, decoratePreventDefault(callback)) as () => void;\n  }\n}\n\nconst AT_CHARCODE = (() => '@'.charCodeAt(0))();\nfunction checkNoSyntheticProp(name: string, nameKind: string) {\n  if (name.charCodeAt(0) === AT_CHARCODE) {\n    throw new Error(`Found the synthetic ${nameKind} ${\n        name}. Please include either \"BrowserAnimationsModule\" or \"NoopAnimationsModule\" in your application.`);\n  }\n}\n\nclass EmulatedEncapsulationDomRenderer2 extends DefaultDomRenderer2 {\n  private contentAttr: string;\n  private hostAttr: string;\n\n  constructor(\n      eventManager: EventManager, sharedStylesHost: DomSharedStylesHost,\n      private component: RendererType2, appId: string) {\n    super(eventManager);\n    const styles = flattenStyles(appId + '-' + component.id, component.styles, []);\n    sharedStylesHost.addStyles(styles);\n\n    this.contentAttr = shimContentAttribute(appId + '-' + component.id);\n    this.hostAttr = shimHostAttribute(appId + '-' + component.id);\n  }\n\n  applyToHost(element: any) {\n    super.setAttribute(element, this.hostAttr, '');\n  }\n\n  createElement(parent: any, name: string): Element {\n    const el = super.createElement(parent, name);\n    super.setAttribute(el, this.contentAttr, '');\n    return el;\n  }\n}\n\nclass ShadowDomRenderer extends DefaultDomRenderer2 {\n  private shadowRoot: any;\n\n  constructor(\n      eventManager: EventManager, private sharedStylesHost: DomSharedStylesHost,\n      private hostEl: any, private component: RendererType2) {\n    super(eventManager);\n    if (component.encapsulation === ViewEncapsulation.ShadowDom) {\n      this.shadowRoot = (hostEl as any).attachShadow({mode: 'open'});\n    } else {\n      this.shadowRoot = (hostEl as any).createShadowRoot();\n    }\n    this.sharedStylesHost.addHost(this.shadowRoot);\n    const styles = flattenStyles(component.id, component.styles, []);\n    for (let i = 0; i < styles.length; i++) {\n      const styleEl = document.createElement('style');\n      styleEl.textContent = styles[i];\n      this.shadowRoot.appendChild(styleEl);\n    }\n  }\n\n  private nodeOrShadowRoot(node: any): any {\n    return node === this.hostEl ? this.shadowRoot : node;\n  }\n\n  destroy() {\n    this.sharedStylesHost.removeHost(this.shadowRoot);\n  }\n\n  appendChild(parent: any, newChild: any): void {\n    return super.appendChild(this.nodeOrShadowRoot(parent), newChild);\n  }\n  insertBefore(parent: any, newChild: any, refChild: any): void {\n    return super.insertBefore(this.nodeOrShadowRoot(parent), newChild, refChild);\n  }\n  removeChild(parent: any, oldChild: any): void {\n    return super.removeChild(this.nodeOrShadowRoot(parent), oldChild);\n  }\n  parentNode(node: any): any {\n    return this.nodeOrShadowRoot(super.parentNode(this.nodeOrShadowRoot(node)));\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {DOCUMENT} from '@angular/common';\nimport {Inject, Injectable} from '@angular/core';\n\nimport {EventManagerPlugin} from './event_manager';\n\n@Injectable()\nexport class DomEventsPlugin extends EventManagerPlugin {\n  constructor(@Inject(DOCUMENT) doc: any) {\n    super(doc);\n  }\n\n  // This plugin should come last in the list of plugins, because it accepts all\n  // events.\n  supports(eventName: string): boolean {\n    return true;\n  }\n\n  addEventListener(element: HTMLElement, eventName: string, handler: Function): Function {\n    element.addEventListener(eventName, handler as EventListener, false);\n    return () => this.removeEventListener(element, eventName, handler as EventListener);\n  }\n\n  removeEventListener(target: any, eventName: string, callback: Function): void {\n    return target.removeEventListener(eventName, callback as EventListener);\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {DOCUMENT} from '@angular/common';\nimport {Inject, Injectable, InjectionToken, NgModule, Optional, Provider, ɵConsole as Console} from '@angular/core';\n\nimport {EVENT_MANAGER_PLUGINS, EventManagerPlugin} from './event_manager';\n\n\n\n/**\n * Supported HammerJS recognizer event names.\n */\nconst EVENT_NAMES = {\n  // pan\n  'pan': true,\n  'panstart': true,\n  'panmove': true,\n  'panend': true,\n  'pancancel': true,\n  'panleft': true,\n  'panright': true,\n  'panup': true,\n  'pandown': true,\n  // pinch\n  'pinch': true,\n  'pinchstart': true,\n  'pinchmove': true,\n  'pinchend': true,\n  'pinchcancel': true,\n  'pinchin': true,\n  'pinchout': true,\n  // press\n  'press': true,\n  'pressup': true,\n  // rotate\n  'rotate': true,\n  'rotatestart': true,\n  'rotatemove': true,\n  'rotateend': true,\n  'rotatecancel': true,\n  // swipe\n  'swipe': true,\n  'swipeleft': true,\n  'swiperight': true,\n  'swipeup': true,\n  'swipedown': true,\n  // tap\n  'tap': true,\n};\n\n/**\n * DI token for providing [HammerJS](http://hammerjs.github.io/) support to Angular.\n * @see `HammerGestureConfig`\n *\n * @ngModule HammerModule\n * @publicApi\n */\nexport const HAMMER_GESTURE_CONFIG = new InjectionToken<HammerGestureConfig>('HammerGestureConfig');\n\n\n/**\n * Function that loads HammerJS, returning a promise that is resolved once HammerJs is loaded.\n *\n * @publicApi\n */\nexport type HammerLoader = () => Promise<void>;\n\n/**\n * Injection token used to provide a {@link HammerLoader} to Angular.\n *\n * @publicApi\n */\nexport const HAMMER_LOADER = new InjectionToken<HammerLoader>('HammerLoader');\n\nexport interface HammerInstance {\n  on(eventName: string, callback?: Function): void;\n  off(eventName: string, callback?: Function): void;\n  destroy?(): void;\n}\n\n/**\n * An injectable [HammerJS Manager](http://hammerjs.github.io/api/#hammer.manager)\n * for gesture recognition. Configures specific event recognition.\n * @publicApi\n */\n@Injectable()\nexport class HammerGestureConfig {\n  /**\n   * A set of supported event names for gestures to be used in Angular.\n   * Angular supports all built-in recognizers, as listed in\n   * [HammerJS documentation](http://hammerjs.github.io/).\n   */\n  events: string[] = [];\n\n  /**\n   * Maps gesture event names to a set of configuration options\n   * that specify overrides to the default values for specific properties.\n   *\n   * The key is a supported event name to be configured,\n   * and the options object contains a set of properties, with override values\n   * to be applied to the named recognizer event.\n   * For example, to disable recognition of the rotate event, specify\n   *  `{\"rotate\": {\"enable\": false}}`.\n   *\n   * Properties that are not present take the HammerJS default values.\n   * For information about which properties are supported for which events,\n   * and their allowed and default values, see\n   * [HammerJS documentation](http://hammerjs.github.io/).\n   *\n   */\n  overrides: {[key: string]: Object} = {};\n\n  /**\n   * Properties whose default values can be overridden for a given event.\n   * Different sets of properties apply to different events.\n   * For information about which properties are supported for which events,\n   * and their allowed and default values, see\n   * [HammerJS documentation](http://hammerjs.github.io/).\n   */\n  options?: {\n    cssProps?: any;\n    domEvents?: boolean;\n    enable?: boolean | ((manager: any) => boolean);\n    preset?: any[];\n    touchAction?: string;\n    recognizers?: any[];\n    inputClass?: any;\n    inputTarget?: EventTarget;\n  };\n\n  /**\n   * Creates a [HammerJS Manager](http://hammerjs.github.io/api/#hammer.manager)\n   * and attaches it to a given HTML element.\n   * @param element The element that will recognize gestures.\n   * @returns A HammerJS event-manager object.\n   */\n  buildHammer(element: HTMLElement): HammerInstance {\n    const mc = new Hammer!(element, this.options);\n\n    mc.get('pinch').set({enable: true});\n    mc.get('rotate').set({enable: true});\n\n    for (const eventName in this.overrides) {\n      mc.get(eventName).set(this.overrides[eventName]);\n    }\n\n    return mc;\n  }\n}\n\n/**\n * Event plugin that adds Hammer support to an application.\n *\n * @ngModule HammerModule\n */\n@Injectable()\nexport class HammerGesturesPlugin extends EventManagerPlugin {\n  constructor(\n      @Inject(DOCUMENT) doc: any,\n      @Inject(HAMMER_GESTURE_CONFIG) private _config: HammerGestureConfig, private console: Console,\n      @Optional() @Inject(HAMMER_LOADER) private loader?: HammerLoader|null) {\n    super(doc);\n  }\n\n  supports(eventName: string): boolean {\n    if (!EVENT_NAMES.hasOwnProperty(eventName.toLowerCase()) && !this.isCustomEvent(eventName)) {\n      return false;\n    }\n\n    if (!(window as any).Hammer && !this.loader) {\n      this.console.warn(\n          `The \"${eventName}\" event cannot be bound because Hammer.JS is not ` +\n          `loaded and no custom loader has been specified.`);\n      return false;\n    }\n\n    return true;\n  }\n\n  addEventListener(element: HTMLElement, eventName: string, handler: Function): Function {\n    const zone = this.manager.getZone();\n    eventName = eventName.toLowerCase();\n\n    // If Hammer is not present but a loader is specified, we defer adding the event listener\n    // until Hammer is loaded.\n    if (!(window as any).Hammer && this.loader) {\n      // This `addEventListener` method returns a function to remove the added listener.\n      // Until Hammer is loaded, the returned function needs to *cancel* the registration rather\n      // than remove anything.\n      let cancelRegistration = false;\n      let deregister: Function = () => {\n        cancelRegistration = true;\n      };\n\n      this.loader()\n          .then(() => {\n            // If Hammer isn't actually loaded when the custom loader resolves, give up.\n            if (!(window as any).Hammer) {\n              this.console.warn(\n                  `The custom HAMMER_LOADER completed, but Hammer.JS is not present.`);\n              deregister = () => {};\n              return;\n            }\n\n            if (!cancelRegistration) {\n              // Now that Hammer is loaded and the listener is being loaded for real,\n              // the deregistration function changes from canceling registration to removal.\n              deregister = this.addEventListener(element, eventName, handler);\n            }\n          })\n          .catch(() => {\n            this.console.warn(\n                `The \"${eventName}\" event cannot be bound because the custom ` +\n                `Hammer.JS loader failed.`);\n            deregister = () => {};\n          });\n\n      // Return a function that *executes* `deregister` (and not `deregister` itself) so that we\n      // can change the behavior of `deregister` once the listener is added. Using a closure in\n      // this way allows us to avoid any additional data structures to track listener removal.\n      return () => {\n        deregister();\n      };\n    }\n\n    return zone.runOutsideAngular(() => {\n      // Creating the manager bind events, must be done outside of angular\n      const mc = this._config.buildHammer(element);\n      const callback = function(eventObj: HammerInput) {\n        zone.runGuarded(function() {\n          handler(eventObj);\n        });\n      };\n      mc.on(eventName, callback);\n      return () => {\n        mc.off(eventName, callback);\n        // destroy mc to prevent memory leak\n        if (typeof mc.destroy === 'function') {\n          mc.destroy();\n        }\n      };\n    });\n  }\n\n  isCustomEvent(eventName: string): boolean {\n    return this._config.events.indexOf(eventName) > -1;\n  }\n}\n\n/**\n * In Ivy, support for Hammer gestures is optional, so applications must\n * import the `HammerModule` at root to turn on support. This means that\n * Hammer-specific code can be tree-shaken away if not needed.\n */\nexport const HAMMER_PROVIDERS__POST_R3__ = [];\n\n/**\n * In View Engine, support for Hammer gestures is built-in by default.\n */\nexport const HAMMER_PROVIDERS__PRE_R3__: Provider[] = [\n  {\n    provide: EVENT_MANAGER_PLUGINS,\n    useClass: HammerGesturesPlugin,\n    multi: true,\n    deps: [DOCUMENT, HAMMER_GESTURE_CONFIG, Console, [new Optional(), HAMMER_LOADER]]\n  },\n  {provide: HAMMER_GESTURE_CONFIG, useClass: HammerGestureConfig, deps: []},\n];\n\nexport const HAMMER_PROVIDERS = HAMMER_PROVIDERS__PRE_R3__;\n\n/**\n * Adds support for HammerJS.\n *\n * Import this module at the root of your application so that Angular can work with\n * HammerJS to detect gesture events.\n *\n * Note that applications still need to include the HammerJS script itself. This module\n * simply sets up the coordination layer between HammerJS and Angular's EventManager.\n *\n * @publicApi\n */\n@NgModule({providers: HAMMER_PROVIDERS__PRE_R3__})\nexport class HammerModule {\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {DOCUMENT, ɵgetDOM as getDOM} from '@angular/common';\nimport {Inject, Injectable, NgZone} from '@angular/core';\nimport {EventManagerPlugin} from './event_manager';\n\n/**\n * Defines supported modifiers for key events.\n */\nconst MODIFIER_KEYS = ['alt', 'control', 'meta', 'shift'];\n\nconst DOM_KEY_LOCATION_NUMPAD = 3;\n\n// Map to convert some key or keyIdentifier values to what will be returned by getEventKey\nconst _keyMap: {[k: string]: string} = {\n  // The following values are here for cross-browser compatibility and to match the W3C standard\n  // cf http://www.w3.org/TR/DOM-Level-3-Events-key/\n  '\\b': 'Backspace',\n  '\\t': 'Tab',\n  '\\x7F': 'Delete',\n  '\\x1B': 'Escape',\n  'Del': 'Delete',\n  'Esc': 'Escape',\n  'Left': 'ArrowLeft',\n  'Right': 'ArrowRight',\n  'Up': 'ArrowUp',\n  'Down': 'ArrowDown',\n  'Menu': 'ContextMenu',\n  'Scroll': 'ScrollLock',\n  'Win': 'OS'\n};\n\n// There is a bug in Chrome for numeric keypad keys:\n// https://code.google.com/p/chromium/issues/detail?id=155654\n// 1, 2, 3 ... are reported as A, B, C ...\nconst _chromeNumKeyPadMap = {\n  'A': '1',\n  'B': '2',\n  'C': '3',\n  'D': '4',\n  'E': '5',\n  'F': '6',\n  'G': '7',\n  'H': '8',\n  'I': '9',\n  'J': '*',\n  'K': '+',\n  'M': '-',\n  'N': '.',\n  'O': '/',\n  '\\x60': '0',\n  '\\x90': 'NumLock'\n};\n\n\n/**\n * Retrieves modifiers from key-event objects.\n */\nconst MODIFIER_KEY_GETTERS: {[key: string]: (event: KeyboardEvent) => boolean} = {\n  'alt': (event: KeyboardEvent) => event.altKey,\n  'control': (event: KeyboardEvent) => event.ctrlKey,\n  'meta': (event: KeyboardEvent) => event.metaKey,\n  'shift': (event: KeyboardEvent) => event.shiftKey\n};\n\n/**\n * @publicApi\n * A browser plug-in that provides support for handling of key events in Angular.\n */\n@Injectable()\nexport class KeyEventsPlugin extends EventManagerPlugin {\n  /**\n   * Initializes an instance of the browser plug-in.\n   * @param doc The document in which key events will be detected.\n   */\n  constructor(@Inject(DOCUMENT) doc: any) {\n    super(doc);\n  }\n\n  /**\n   * Reports whether a named key event is supported.\n   * @param eventName The event name to query.\n   * @return True if the named key event is supported.\n   */\n  supports(eventName: string): boolean {\n    return KeyEventsPlugin.parseEventName(eventName) != null;\n  }\n\n  /**\n   * Registers a handler for a specific element and key event.\n   * @param element The HTML element to receive event notifications.\n   * @param eventName The name of the key event to listen for.\n   * @param handler A function to call when the notification occurs. Receives the\n   * event object as an argument.\n   * @returns The key event that was registered.\n   */\n  addEventListener(element: HTMLElement, eventName: string, handler: Function): Function {\n    const parsedEvent = KeyEventsPlugin.parseEventName(eventName)!;\n\n    const outsideHandler =\n        KeyEventsPlugin.eventCallback(parsedEvent['fullKey'], handler, this.manager.getZone());\n\n    return this.manager.getZone().runOutsideAngular(() => {\n      return getDOM().onAndCancel(element, parsedEvent['domEventName'], outsideHandler);\n    });\n  }\n\n  static parseEventName(eventName: string): {[key: string]: string}|null {\n    const parts: string[] = eventName.toLowerCase().split('.');\n\n    const domEventName = parts.shift();\n    if ((parts.length === 0) || !(domEventName === 'keydown' || domEventName === 'keyup')) {\n      return null;\n    }\n\n    const key = KeyEventsPlugin._normalizeKey(parts.pop()!);\n\n    let fullKey = '';\n    MODIFIER_KEYS.forEach(modifierName => {\n      const index: number = parts.indexOf(modifierName);\n      if (index > -1) {\n        parts.splice(index, 1);\n        fullKey += modifierName + '.';\n      }\n    });\n    fullKey += key;\n\n    if (parts.length != 0 || key.length === 0) {\n      // returning null instead of throwing to let another plugin process the event\n      return null;\n    }\n\n    const result: {[k: string]: string} = {};\n    result['domEventName'] = domEventName;\n    result['fullKey'] = fullKey;\n    return result;\n  }\n\n  static getEventFullKey(event: KeyboardEvent): string {\n    let fullKey = '';\n    let key = getEventKey(event);\n    key = key.toLowerCase();\n    if (key === ' ') {\n      key = 'space';  // for readability\n    } else if (key === '.') {\n      key = 'dot';  // because '.' is used as a separator in event names\n    }\n    MODIFIER_KEYS.forEach(modifierName => {\n      if (modifierName != key) {\n        const modifierGetter = MODIFIER_KEY_GETTERS[modifierName];\n        if (modifierGetter(event)) {\n          fullKey += modifierName + '.';\n        }\n      }\n    });\n    fullKey += key;\n    return fullKey;\n  }\n\n  /**\n   * Configures a handler callback for a key event.\n   * @param fullKey The event name that combines all simultaneous keystrokes.\n   * @param handler The function that responds to the key event.\n   * @param zone The zone in which the event occurred.\n   * @returns A callback function.\n   */\n  static eventCallback(fullKey: any, handler: Function, zone: NgZone): Function {\n    return (event: any /** TODO #9100 */) => {\n      if (KeyEventsPlugin.getEventFullKey(event) === fullKey) {\n        zone.runGuarded(() => handler(event));\n      }\n    };\n  }\n\n  /** @internal */\n  static _normalizeKey(keyName: string): string {\n    // TODO: switch to a Map if the mapping grows too much\n    switch (keyName) {\n      case 'esc':\n        return 'escape';\n      default:\n        return keyName;\n    }\n  }\n}\n\nfunction getEventKey(event: any): string {\n  let key = event.key;\n  if (key == null) {\n    key = event.keyIdentifier;\n    // keyIdentifier is defined in the old draft of DOM Level 3 Events implemented by Chrome and\n    // Safari cf\n    // http://www.w3.org/TR/2007/WD-DOM-Level-3-Events-20071221/events.html#Events-KeyboardEvents-Interfaces\n    if (key == null) {\n      return 'Unidentified';\n    }\n    if (key.startsWith('U+')) {\n      key = String.fromCharCode(parseInt(key.substring(2), 16));\n      if (event.location === DOM_KEY_LOCATION_NUMPAD && _chromeNumKeyPadMap.hasOwnProperty(key)) {\n        // There is a bug in Chrome for numeric keypad keys:\n        // https://code.google.com/p/chromium/issues/detail?id=155654\n        // 1, 2, 3 ... are reported as A, B, C ...\n        key = (_chromeNumKeyPadMap as any)[key];\n      }\n    }\n  }\n\n  return _keyMap[key] || key;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {DOCUMENT} from '@angular/common';\nimport {forwardRef, Inject, Injectable, Injector, Sanitizer, SecurityContext, ɵ_sanitizeHtml as _sanitizeHtml, ɵ_sanitizeStyle as _sanitizeStyle, ɵ_sanitizeUrl as _sanitizeUrl, ɵallowSanitizationBypassAndThrow as allowSanitizationBypassOrThrow, ɵbypassSanitizationTrustHtml as bypassSanitizationTrustHtml, ɵbypassSanitizationTrustResourceUrl as bypassSanitizationTrustResourceUrl, ɵbypassSanitizationTrustScript as bypassSanitizationTrustScript, ɵbypassSanitizationTrustStyle as bypassSanitizationTrustStyle, ɵbypassSanitizationTrustUrl as bypassSanitizationTrustUrl, ɵBypassType as BypassType, ɵgetSanitizationBypassType as getSanitizationBypassType, ɵunwrapSafeValue as unwrapSafeValue} from '@angular/core';\n\nexport {SecurityContext};\n\n\n\n/**\n * Marker interface for a value that's safe to use in a particular context.\n *\n * @publicApi\n */\nexport interface SafeValue {}\n\n/**\n * Marker interface for a value that's safe to use as HTML.\n *\n * @publicApi\n */\nexport interface SafeHtml extends SafeValue {}\n\n/**\n * Marker interface for a value that's safe to use as style (CSS).\n *\n * @publicApi\n */\nexport interface SafeStyle extends SafeValue {}\n\n/**\n * Marker interface for a value that's safe to use as JavaScript.\n *\n * @publicApi\n */\nexport interface SafeScript extends SafeValue {}\n\n/**\n * Marker interface for a value that's safe to use as a URL linking to a document.\n *\n * @publicApi\n */\nexport interface SafeUrl extends SafeValue {}\n\n/**\n * Marker interface for a value that's safe to use as a URL to load executable code from.\n *\n * @publicApi\n */\nexport interface SafeResourceUrl extends SafeValue {}\n\n/**\n * DomSanitizer helps preventing Cross Site Scripting Security bugs (XSS) by sanitizing\n * values to be safe to use in the different DOM contexts.\n *\n * For example, when binding a URL in an `<a [href]=\"someValue\">` hyperlink, `someValue` will be\n * sanitized so that an attacker cannot inject e.g. a `javascript:` URL that would execute code on\n * the website.\n *\n * In specific situations, it might be necessary to disable sanitization, for example if the\n * application genuinely needs to produce a `javascript:` style link with a dynamic value in it.\n * Users can bypass security by constructing a value with one of the `bypassSecurityTrust...`\n * methods, and then binding to that value from the template.\n *\n * These situations should be very rare, and extraordinary care must be taken to avoid creating a\n * Cross Site Scripting (XSS) security bug!\n *\n * When using `bypassSecurityTrust...`, make sure to call the method as early as possible and as\n * close as possible to the source of the value, to make it easy to verify no security bug is\n * created by its use.\n *\n * It is not required (and not recommended) to bypass security if the value is safe, e.g. a URL that\n * does not start with a suspicious protocol, or an HTML snippet that does not contain dangerous\n * code. The sanitizer leaves safe values intact.\n *\n * @security Calling any of the `bypassSecurityTrust...` APIs disables Angular's built-in\n * sanitization for the value passed in. Carefully check and audit all values and code paths going\n * into this call. Make sure any user data is appropriately escaped for this security context.\n * For more detail, see the [Security Guide](http://g.co/ng/security).\n *\n * @publicApi\n */\n@Injectable({providedIn: 'root', useExisting: forwardRef(() => DomSanitizerImpl)})\nexport abstract class DomSanitizer implements Sanitizer {\n  /**\n   * Sanitizes a value for use in the given SecurityContext.\n   *\n   * If value is trusted for the context, this method will unwrap the contained safe value and use\n   * it directly. Otherwise, value will be sanitized to be safe in the given context, for example\n   * by replacing URLs that have an unsafe protocol part (such as `javascript:`). The implementation\n   * is responsible to make sure that the value can definitely be safely used in the given context.\n   */\n  abstract sanitize(context: SecurityContext, value: SafeValue|string|null): string|null;\n\n  /**\n   * Bypass security and trust the given value to be safe HTML. Only use this when the bound HTML\n   * is unsafe (e.g. contains `<script>` tags) and the code should be executed. The sanitizer will\n   * leave safe HTML intact, so in most situations this method should not be used.\n   *\n   * **WARNING:** calling this method with untrusted user data exposes your application to XSS\n   * security risks!\n   */\n  abstract bypassSecurityTrustHtml(value: string): SafeHtml;\n\n  /**\n   * Bypass security and trust the given value to be safe style value (CSS).\n   *\n   * **WARNING:** calling this method with untrusted user data exposes your application to XSS\n   * security risks!\n   */\n  abstract bypassSecurityTrustStyle(value: string): SafeStyle;\n\n  /**\n   * Bypass security and trust the given value to be safe JavaScript.\n   *\n   * **WARNING:** calling this method with untrusted user data exposes your application to XSS\n   * security risks!\n   */\n  abstract bypassSecurityTrustScript(value: string): SafeScript;\n\n  /**\n   * Bypass security and trust the given value to be a safe style URL, i.e. a value that can be used\n   * in hyperlinks or `<img src>`.\n   *\n   * **WARNING:** calling this method with untrusted user data exposes your application to XSS\n   * security risks!\n   */\n  abstract bypassSecurityTrustUrl(value: string): SafeUrl;\n\n  /**\n   * Bypass security and trust the given value to be a safe resource URL, i.e. a location that may\n   * be used to load executable code from, like `<script src>`, or `<iframe src>`.\n   *\n   * **WARNING:** calling this method with untrusted user data exposes your application to XSS\n   * security risks!\n   */\n  abstract bypassSecurityTrustResourceUrl(value: string): SafeResourceUrl;\n}\n\nexport function domSanitizerImplFactory(injector: Injector) {\n  return new DomSanitizerImpl(injector.get(DOCUMENT));\n}\n\n@Injectable({providedIn: 'root', useFactory: domSanitizerImplFactory, deps: [Injector]})\nexport class DomSanitizerImpl extends DomSanitizer {\n  constructor(@Inject(DOCUMENT) private _doc: any) {\n    super();\n  }\n\n  sanitize(ctx: SecurityContext, value: SafeValue|string|null): string|null {\n    if (value == null) return null;\n    switch (ctx) {\n      case SecurityContext.NONE:\n        return value as string;\n      case SecurityContext.HTML:\n        if (allowSanitizationBypassOrThrow(value, BypassType.Html)) {\n          return unwrapSafeValue(value);\n        }\n        return _sanitizeHtml(this._doc, String(value));\n      case SecurityContext.STYLE:\n        if (allowSanitizationBypassOrThrow(value, BypassType.Style)) {\n          return unwrapSafeValue(value);\n        }\n        return _sanitizeStyle(value as string);\n      case SecurityContext.SCRIPT:\n        if (allowSanitizationBypassOrThrow(value, BypassType.Script)) {\n          return unwrapSafeValue(value);\n        }\n        throw new Error('unsafe value used in a script context');\n      case SecurityContext.URL:\n        const type = getSanitizationBypassType(value);\n        if (allowSanitizationBypassOrThrow(value, BypassType.Url)) {\n          return unwrapSafeValue(value);\n        }\n        return _sanitizeUrl(String(value));\n      case SecurityContext.RESOURCE_URL:\n        if (allowSanitizationBypassOrThrow(value, BypassType.ResourceUrl)) {\n          return unwrapSafeValue(value);\n        }\n        throw new Error(\n            'unsafe value used in a resource URL context (see http://g.co/ng/security#xss)');\n      default:\n        throw new Error(`Unexpected SecurityContext ${ctx} (see http://g.co/ng/security#xss)`);\n    }\n  }\n\n  bypassSecurityTrustHtml(value: string): SafeHtml {\n    return bypassSanitizationTrustHtml(value);\n  }\n  bypassSecurityTrustStyle(value: string): SafeStyle {\n    return bypassSanitizationTrustStyle(value);\n  }\n  bypassSecurityTrustScript(value: string): SafeScript {\n    return bypassSanitizationTrustScript(value);\n  }\n  bypassSecurityTrustUrl(value: string): SafeUrl {\n    return bypassSanitizationTrustUrl(value);\n  }\n  bypassSecurityTrustResourceUrl(value: string): SafeResourceUrl {\n    return bypassSanitizationTrustResourceUrl(value);\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {CommonModule, DOCUMENT, ɵPLATFORM_BROWSER_ID as PLATFORM_BROWSER_ID} from '@angular/common';\nimport {APP_ID, ApplicationModule, createPlatformFactory, ErrorHandler, Inject, ModuleWithProviders, NgModule, NgZone, Optional, PLATFORM_ID, PLATFORM_INITIALIZER, platformCore, PlatformRef, RendererFactory2, Sanitizer, SkipSelf, StaticProvider, Testability, ɵConsole as Console, ɵINJECTOR_SCOPE as INJECTOR_SCOPE, ɵsetDocument} from '@angular/core';\n\nimport {BrowserDomAdapter} from './browser/browser_adapter';\nimport {SERVER_TRANSITION_PROVIDERS, TRANSITION_ID} from './browser/server-transition';\nimport {BrowserGetTestability} from './browser/testability';\nimport {ELEMENT_PROBE_PROVIDERS} from './dom/debug/ng_probe';\nimport {DomRendererFactory2} from './dom/dom_renderer';\nimport {DomEventsPlugin} from './dom/events/dom_events';\nimport {EVENT_MANAGER_PLUGINS, EventManager} from './dom/events/event_manager';\nimport {HAMMER_PROVIDERS} from './dom/events/hammer_gestures';\nimport {KeyEventsPlugin} from './dom/events/key_events';\nimport {DomSharedStylesHost, SharedStylesHost} from './dom/shared_styles_host';\nimport {DomSanitizer, DomSanitizerImpl} from './security/dom_sanitization_service';\n\nexport function initDomAdapter() {\n  BrowserDomAdapter.makeCurrent();\n  BrowserGetTestability.init();\n}\n\nexport function errorHandler(): ErrorHandler {\n  return new ErrorHandler();\n}\n\nexport function _document(): any {\n  // Tell ivy about the global document\n  ɵsetDocument(document);\n  return document;\n}\n\nexport const INTERNAL_BROWSER_PLATFORM_PROVIDERS: StaticProvider[] = [\n  {provide: PLATFORM_ID, useValue: PLATFORM_BROWSER_ID},\n  {provide: PLATFORM_INITIALIZER, useValue: initDomAdapter, multi: true},\n  {provide: DOCUMENT, useFactory: _document, deps: []},\n];\n\nconst BROWSER_SANITIZATION_PROVIDERS__PRE_R3__: StaticProvider[] = [\n  {provide: Sanitizer, useExisting: DomSanitizer},\n  {provide: DomSanitizer, useClass: DomSanitizerImpl, deps: [DOCUMENT]},\n];\n\nexport const BROWSER_SANITIZATION_PROVIDERS__POST_R3__ = [];\n\n/**\n * @security Replacing built-in sanitization providers exposes the application to XSS risks.\n * Attacker-controlled data introduced by an unsanitized provider could expose your\n * application to XSS risks. For more detail, see the [Security Guide](http://g.co/ng/security).\n * @publicApi\n */\nexport const BROWSER_SANITIZATION_PROVIDERS = BROWSER_SANITIZATION_PROVIDERS__PRE_R3__;\n\n/**\n * @publicApi\n */\nexport const platformBrowser: (extraProviders?: StaticProvider[]) => PlatformRef =\n    createPlatformFactory(platformCore, 'browser', INTERNAL_BROWSER_PLATFORM_PROVIDERS);\n\nexport const BROWSER_MODULE_PROVIDERS: StaticProvider[] = [\n  BROWSER_SANITIZATION_PROVIDERS,\n  {provide: INJECTOR_SCOPE, useValue: 'root'},\n  {provide: ErrorHandler, useFactory: errorHandler, deps: []},\n  {\n    provide: EVENT_MANAGER_PLUGINS,\n    useClass: DomEventsPlugin,\n    multi: true,\n    deps: [DOCUMENT, NgZone, PLATFORM_ID]\n  },\n  {provide: EVENT_MANAGER_PLUGINS, useClass: KeyEventsPlugin, multi: true, deps: [DOCUMENT]},\n  HAMMER_PROVIDERS,\n  {\n    provide: DomRendererFactory2,\n    useClass: DomRendererFactory2,\n    deps: [EventManager, DomSharedStylesHost, APP_ID]\n  },\n  {provide: RendererFactory2, useExisting: DomRendererFactory2},\n  {provide: SharedStylesHost, useExisting: DomSharedStylesHost},\n  {provide: DomSharedStylesHost, useClass: DomSharedStylesHost, deps: [DOCUMENT]},\n  {provide: Testability, useClass: Testability, deps: [NgZone]},\n  {provide: EventManager, useClass: EventManager, deps: [EVENT_MANAGER_PLUGINS, NgZone]},\n  ELEMENT_PROBE_PROVIDERS,\n];\n\n/**\n * Exports required infrastructure for all Angular apps.\n * Included by default in all Angular apps created with the CLI\n * `new` command.\n * Re-exports `CommonModule` and `ApplicationModule`, making their\n * exports and providers available to all apps.\n *\n * @publicApi\n */\n@NgModule({providers: BROWSER_MODULE_PROVIDERS, exports: [CommonModule, ApplicationModule]})\nexport class BrowserModule {\n  constructor(@Optional() @SkipSelf() @Inject(BrowserModule) parentModule: BrowserModule|null) {\n    if (parentModule) {\n      throw new Error(\n          `BrowserModule has already been loaded. If you need access to common directives such as NgIf and NgFor from a lazy loaded module, import CommonModule instead.`);\n    }\n  }\n\n  /**\n   * Configures a browser-based app to transition from a server-rendered app, if\n   * one is present on the page.\n   *\n   * @param params An object containing an identifier for the app to transition.\n   * The ID must match between the client and server versions of the app.\n   * @returns The reconfigured `BrowserModule` to import into the app's root `AppModule`.\n   */\n  static withServerTransition(params: {appId: string}): ModuleWithProviders<BrowserModule> {\n    return {\n      ngModule: BrowserModule,\n      providers: [\n        {provide: APP_ID, useValue: params.appId},\n        {provide: TRANSITION_ID, useExisting: APP_ID},\n        SERVER_TRANSITION_PROVIDERS,\n      ],\n    };\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {DOCUMENT, ɵDomAdapter as DomAdapter, ɵgetDOM as getDOM} from '@angular/common';\nimport {Inject, Injectable, ɵɵinject} from '@angular/core';\n\n/**\n * Represents a meta element.\n *\n * @publicApi\n */\nexport type MetaDefinition = {\n  charset?: string;\n  content?: string;\n  httpEquiv?: string;\n  id?: string;\n  itemprop?: string;\n  name?: string;\n  property?: string;\n  scheme?: string;\n  url?: string;\n}&{\n  // TODO(IgorMinar): this type looks wrong\n  [prop: string]: string;\n};\n\n/**\n * Factory to create Meta service.\n */\nexport function createMeta() {\n  return new Meta(ɵɵinject(DOCUMENT));\n}\n\n/**\n * A service that can be used to get and add meta tags.\n *\n * @publicApi\n */\n@Injectable({providedIn: 'root', useFactory: createMeta, deps: []})\nexport class Meta {\n  private _dom: DomAdapter;\n  constructor(@Inject(DOCUMENT) private _doc: any) {\n    this._dom = getDOM();\n  }\n\n  addTag(tag: MetaDefinition, forceCreation: boolean = false): HTMLMetaElement|null {\n    if (!tag) return null;\n    return this._getOrCreateElement(tag, forceCreation);\n  }\n\n  addTags(tags: MetaDefinition[], forceCreation: boolean = false): HTMLMetaElement[] {\n    if (!tags) return [];\n    return tags.reduce((result: HTMLMetaElement[], tag: MetaDefinition) => {\n      if (tag) {\n        result.push(this._getOrCreateElement(tag, forceCreation));\n      }\n      return result;\n    }, []);\n  }\n\n  getTag(attrSelector: string): HTMLMetaElement|null {\n    if (!attrSelector) return null;\n    return this._doc.querySelector(`meta[${attrSelector}]`) || null;\n  }\n\n  getTags(attrSelector: string): HTMLMetaElement[] {\n    if (!attrSelector) return [];\n    const list /*NodeList*/ = this._doc.querySelectorAll(`meta[${attrSelector}]`);\n    return list ? [].slice.call(list) : [];\n  }\n\n  updateTag(tag: MetaDefinition, selector?: string): HTMLMetaElement|null {\n    if (!tag) return null;\n    selector = selector || this._parseSelector(tag);\n    const meta: HTMLMetaElement = this.getTag(selector)!;\n    if (meta) {\n      return this._setMetaElementAttributes(tag, meta);\n    }\n    return this._getOrCreateElement(tag, true);\n  }\n\n  removeTag(attrSelector: string): void {\n    this.removeTagElement(this.getTag(attrSelector)!);\n  }\n\n  removeTagElement(meta: HTMLMetaElement): void {\n    if (meta) {\n      this._dom.remove(meta);\n    }\n  }\n\n  private _getOrCreateElement(meta: MetaDefinition, forceCreation: boolean = false):\n      HTMLMetaElement {\n    if (!forceCreation) {\n      const selector: string = this._parseSelector(meta);\n      const elem: HTMLMetaElement = this.getTag(selector)!;\n      // It's allowed to have multiple elements with the same name so it's not enough to\n      // just check that element with the same name already present on the page. We also need to\n      // check if element has tag attributes\n      if (elem && this._containsAttributes(meta, elem)) return elem;\n    }\n    const element: HTMLMetaElement = this._dom.createElement('meta') as HTMLMetaElement;\n    this._setMetaElementAttributes(meta, element);\n    const head = this._doc.getElementsByTagName('head')[0];\n    head.appendChild(element);\n    return element;\n  }\n\n  private _setMetaElementAttributes(tag: MetaDefinition, el: HTMLMetaElement): HTMLMetaElement {\n    Object.keys(tag).forEach((prop: string) => el.setAttribute(prop, tag[prop]));\n    return el;\n  }\n\n  private _parseSelector(tag: MetaDefinition): string {\n    const attr: string = tag.name ? 'name' : 'property';\n    return `${attr}=\"${tag[attr]}\"`;\n  }\n\n  private _containsAttributes(tag: MetaDefinition, elem: HTMLMetaElement): boolean {\n    return Object.keys(tag).every((key: string) => elem.getAttribute(key) === tag[key]);\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {DOCUMENT, ɵgetDOM as getDOM} from '@angular/common';\nimport {Inject, Injectable, ɵɵinject} from '@angular/core';\n\n\n/**\n * Factory to create Title service.\n */\nexport function createTitle() {\n  return new Title(ɵɵinject(DOCUMENT));\n}\n\n/**\n * A service that can be used to get and set the title of a current HTML document.\n *\n * Since an Angular application can't be bootstrapped on the entire HTML document (`<html>` tag)\n * it is not possible to bind to the `text` property of the `HTMLTitleElement` elements\n * (representing the `<title>` tag). Instead, this service can be used to set and get the current\n * title value.\n *\n * @publicApi\n */\n@Injectable({providedIn: 'root', useFactory: createTitle, deps: []})\nexport class Title {\n  constructor(@Inject(DOCUMENT) private _doc: any) {}\n  /**\n   * Get the title of the current HTML document.\n   */\n  getTitle(): string {\n    return this._doc.title;\n  }\n\n  /**\n   * Set the title of the current HTML document.\n   * @param newTitle\n   */\n  setTitle(newTitle: string) {\n    this._doc.title = newTitle || '';\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nconst win = typeof window !== 'undefined' && window || <any>{};\nexport {win as window};\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ɵgetDOM as getDOM} from '@angular/common';\nimport {ApplicationRef, ComponentRef} from '@angular/core';\nimport {window} from './browser';\n\nexport class ChangeDetectionPerfRecord {\n  constructor(public msPerTick: number, public numTicks: number) {}\n}\n\n/**\n * Entry point for all Angular profiling-related debug tools. This object\n * corresponds to the `ng.profiler` in the dev console.\n */\nexport class AngularProfiler {\n  appRef: ApplicationRef;\n\n  constructor(ref: ComponentRef<any>) {\n    this.appRef = ref.injector.get(ApplicationRef);\n  }\n\n  // tslint:disable:no-console\n  /**\n   * Exercises change detection in a loop and then prints the average amount of\n   * time in milliseconds how long a single round of change detection takes for\n   * the current state of the UI. It runs a minimum of 5 rounds for a minimum\n   * of 500 milliseconds.\n   *\n   * Optionally, a user may pass a `config` parameter containing a map of\n   * options. Supported options are:\n   *\n   * `record` (boolean) - causes the profiler to record a CPU profile while\n   * it exercises the change detector. Example:\n   *\n   * ```\n   * ng.profiler.timeChangeDetection({record: true})\n   * ```\n   */\n  timeChangeDetection(config: any): ChangeDetectionPerfRecord {\n    const record = config && config['record'];\n    const profileName = 'Change Detection';\n    // Profiler is not available in Android browsers, nor in IE 9 without dev tools opened\n    const isProfilerAvailable = window.console.profile != null;\n    if (record && isProfilerAvailable) {\n      window.console.profile(profileName);\n    }\n    const start = getDOM().performanceNow();\n    let numTicks = 0;\n    while (numTicks < 5 || (getDOM().performanceNow() - start) < 500) {\n      this.appRef.tick();\n      numTicks++;\n    }\n    const end = getDOM().performanceNow();\n    if (record && isProfilerAvailable) {\n      window.console.profileEnd(profileName);\n    }\n    const msPerTick = (end - start) / numTicks;\n    window.console.log(`ran ${numTicks} change detection cycles`);\n    window.console.log(`${msPerTick.toFixed(2)} ms per check`);\n\n    return new ChangeDetectionPerfRecord(msPerTick, numTicks);\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ComponentRef} from '@angular/core';\nimport {exportNgVar} from '../../dom/util';\nimport {AngularProfiler} from './common_tools';\n\nconst PROFILER_GLOBAL_NAME = 'profiler';\n\n/**\n * Enabled Angular debug tools that are accessible via your browser's\n * developer console.\n *\n * Usage:\n *\n * 1. Open developer console (e.g. in Chrome Ctrl + Shift + j)\n * 1. Type `ng.` (usually the console will show auto-complete suggestion)\n * 1. Try the change detection profiler `ng.profiler.timeChangeDetection()`\n *    then hit Enter.\n *\n * @publicApi\n */\nexport function enableDebugTools<T>(ref: ComponentRef<T>): ComponentRef<T> {\n  exportNgVar(PROFILER_GLOBAL_NAME, new AngularProfiler(ref));\n  return ref;\n}\n\n/**\n * Disables Angular tools.\n *\n * @publicApi\n */\nexport function disableDebugTools(): void {\n  exportNgVar(PROFILER_GLOBAL_NAME, null);\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {DOCUMENT} from '@angular/common';\nimport {APP_ID, Injectable, NgModule} from '@angular/core';\n\nexport function escapeHtml(text: string): string {\n  const escapedText: {[k: string]: string} = {\n    '&': '&a;',\n    '\"': '&q;',\n    '\\'': '&s;',\n    '<': '&l;',\n    '>': '&g;',\n  };\n  return text.replace(/[&\"'<>]/g, s => escapedText[s]);\n}\n\nexport function unescapeHtml(text: string): string {\n  const unescapedText: {[k: string]: string} = {\n    '&a;': '&',\n    '&q;': '\"',\n    '&s;': '\\'',\n    '&l;': '<',\n    '&g;': '>',\n  };\n  return text.replace(/&[^;]+;/g, s => unescapedText[s]);\n}\n\n/**\n * A type-safe key to use with `TransferState`.\n *\n * Example:\n *\n * ```\n * const COUNTER_KEY = makeStateKey<number>('counter');\n * let value = 10;\n *\n * transferState.set(COUNTER_KEY, value);\n * ```\n *\n * @publicApi\n */\nexport type StateKey<T> = string&{__not_a_string: never};\n\n/**\n * Create a `StateKey<T>` that can be used to store value of type T with `TransferState`.\n *\n * Example:\n *\n * ```\n * const COUNTER_KEY = makeStateKey<number>('counter');\n * let value = 10;\n *\n * transferState.set(COUNTER_KEY, value);\n * ```\n *\n * @publicApi\n */\nexport function makeStateKey<T = void>(key: string): StateKey<T> {\n  return key as StateKey<T>;\n}\n\n/**\n * A key value store that is transferred from the application on the server side to the application\n * on the client side.\n *\n * `TransferState` will be available as an injectable token. To use it import\n * `ServerTransferStateModule` on the server and `BrowserTransferStateModule` on the client.\n *\n * The values in the store are serialized/deserialized using JSON.stringify/JSON.parse. So only\n * boolean, number, string, null and non-class objects will be serialized and deserialzied in a\n * non-lossy manner.\n *\n * @publicApi\n */\n@Injectable()\nexport class TransferState {\n  private store: {[k: string]: {}|undefined} = {};\n  private onSerializeCallbacks: {[k: string]: () => {} | undefined} = {};\n\n  /** @internal */\n  static init(initState: {}) {\n    const transferState = new TransferState();\n    transferState.store = initState;\n    return transferState;\n  }\n\n  /**\n   * Get the value corresponding to a key. Return `defaultValue` if key is not found.\n   */\n  get<T>(key: StateKey<T>, defaultValue: T): T {\n    return this.store[key] !== undefined ? this.store[key] as T : defaultValue;\n  }\n\n  /**\n   * Set the value corresponding to a key.\n   */\n  set<T>(key: StateKey<T>, value: T): void {\n    this.store[key] = value;\n  }\n\n  /**\n   * Remove a key from the store.\n   */\n  remove<T>(key: StateKey<T>): void {\n    delete this.store[key];\n  }\n\n  /**\n   * Test whether a key exists in the store.\n   */\n  hasKey<T>(key: StateKey<T>) {\n    return this.store.hasOwnProperty(key);\n  }\n\n  /**\n   * Register a callback to provide the value for a key when `toJson` is called.\n   */\n  onSerialize<T>(key: StateKey<T>, callback: () => T): void {\n    this.onSerializeCallbacks[key] = callback;\n  }\n\n  /**\n   * Serialize the current state of the store to JSON.\n   */\n  toJson(): string {\n    // Call the onSerialize callbacks and put those values into the store.\n    for (const key in this.onSerializeCallbacks) {\n      if (this.onSerializeCallbacks.hasOwnProperty(key)) {\n        try {\n          this.store[key] = this.onSerializeCallbacks[key]();\n        } catch (e) {\n          console.warn('Exception in onSerialize callback: ', e);\n        }\n      }\n    }\n    return JSON.stringify(this.store);\n  }\n}\n\nexport function initTransferState(doc: Document, appId: string) {\n  // Locate the script tag with the JSON data transferred from the server.\n  // The id of the script tag is set to the Angular appId + 'state'.\n  const script = doc.getElementById(appId + '-state');\n  let initialState = {};\n  if (script && script.textContent) {\n    try {\n      initialState = JSON.parse(unescapeHtml(script.textContent));\n    } catch (e) {\n      console.warn('Exception while restoring TransferState for app ' + appId, e);\n    }\n  }\n  return TransferState.init(initialState);\n}\n\n/**\n * NgModule to install on the client side while using the `TransferState` to transfer state from\n * server to client.\n *\n * @publicApi\n */\n@NgModule({\n  providers: [{provide: TransferState, useFactory: initTransferState, deps: [DOCUMENT, APP_ID]}],\n})\nexport class BrowserTransferStateModule {\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ɵgetDOM as getDOM} from '@angular/common';\nimport {DebugElement, DebugNode, Predicate, Type} from '@angular/core';\n\n\n\n/**\n * Predicates for use with {@link DebugElement}'s query functions.\n *\n * @publicApi\n */\nexport class By {\n  /**\n   * Match all nodes.\n   *\n   * @usageNotes\n   * ### Example\n   *\n   * {@example platform-browser/dom/debug/ts/by/by.ts region='by_all'}\n   */\n  static all(): Predicate<DebugNode> {\n    return () => true;\n  }\n\n  /**\n   * Match elements by the given CSS selector.\n   *\n   * @usageNotes\n   * ### Example\n   *\n   * {@example platform-browser/dom/debug/ts/by/by.ts region='by_css'}\n   */\n  static css(selector: string): Predicate<DebugElement> {\n    return (debugElement) => {\n      return debugElement.nativeElement != null ?\n          elementMatches(debugElement.nativeElement, selector) :\n          false;\n    };\n  }\n\n  /**\n   * Match nodes that have the given directive present.\n   *\n   * @usageNotes\n   * ### Example\n   *\n   * {@example platform-browser/dom/debug/ts/by/by.ts region='by_directive'}\n   */\n  static directive(type: Type<any>): Predicate<DebugNode> {\n    return (debugNode) => debugNode.providerTokens!.indexOf(type) !== -1;\n  }\n}\n\nfunction elementMatches(n: any, selector: string): boolean {\n  if (getDOM().isElementNode(n)) {\n    return n.matches && n.matches(selector) ||\n        n.msMatchesSelector && n.msMatchesSelector(selector) ||\n        n.webkitMatchesSelector && n.webkitMatchesSelector(selector);\n  }\n\n  return false;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @module\n * @description\n * Entry point for all public APIs of the common package.\n */\n\nimport {Version} from '@angular/core';\n\n/**\n * @publicApi\n */\nexport const VERSION = new Version('9.1.9');\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n\nexport {BROWSER_MODULE_PROVIDERS as ɵangular_packages_platform_browser_platform_browser_c,_document as ɵangular_packages_platform_browser_platform_browser_b,errorHandler as ɵangular_packages_platform_browser_platform_browser_a} from './src/browser';\nexport {GenericBrowserDomAdapter as ɵangular_packages_platform_browser_platform_browser_o} from './src/browser/generic_browser_adapter';\nexport {createMeta as ɵangular_packages_platform_browser_platform_browser_d} from './src/browser/meta';\nexport {SERVER_TRANSITION_PROVIDERS as ɵangular_packages_platform_browser_platform_browser_l,appInitializerFactory as ɵangular_packages_platform_browser_platform_browser_k} from './src/browser/server-transition';\nexport {createTitle as ɵangular_packages_platform_browser_platform_browser_e} from './src/browser/title';\nexport {initTransferState as ɵangular_packages_platform_browser_platform_browser_f} from './src/browser/transfer_state';\nexport {ELEMENT_PROBE_PROVIDERS__PRE_R3__ as ɵangular_packages_platform_browser_platform_browser_n,_createNgProbeR2 as ɵangular_packages_platform_browser_platform_browser_m} from './src/dom/debug/ng_probe';\nexport {EventManagerPlugin as ɵangular_packages_platform_browser_platform_browser_g} from './src/dom/events/event_manager';\nexport {HAMMER_PROVIDERS as ɵangular_packages_platform_browser_platform_browser_i,HAMMER_PROVIDERS__PRE_R3__ as ɵangular_packages_platform_browser_platform_browser_h} from './src/dom/events/hammer_gestures';\nexport {domSanitizerImplFactory as ɵangular_packages_platform_browser_platform_browser_j} from './src/security/dom_sanitization_service';"]},"metadata":{},"sourceType":"module"}